@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section ewram_data,"aw"
	.align	2, 0
	.type	 sDeferredEvent,object
	.size	 sDeferredEvent,32
sDeferredEvent:
	.short	0x0
	.space	30
	.globl	gQuestLogRepeatEventTracker
	.align	2, 0
	.type	 gQuestLogRepeatEventTracker,object
	.size	 gQuestLogRepeatEventTracker,4
gQuestLogRepeatEventTracker:
	.byte	0x0
	.space	3
	.type	 sStepRecordingMode,object
	.size	 sStepRecordingMode,1
sStepRecordingMode:
	.byte	0x0
	.type	 sNewlyEnteredMap,object
	.size	 sNewlyEnteredMap,1
sNewlyEnteredMap:
	.byte	0x0
	.type	 sLastDepartedLocation,object
	.size	 sLastDepartedLocation,1
sLastDepartedLocation:
	.byte	0x0
	.type	 sPlayedTheSlots,object
	.size	 sPlayedTheSlots,1
sPlayedTheSlots:
	.byte	0x0
	.section .rodata
	.align	2, 0
	.type	 sRecordEventFuncs,object
sRecordEventFuncs:
	.word	0x0
	.word	0x0
	.word	0x0
	.word	RecordEvent_SwitchedPartyOrder
	.word	RecordEvent_UsedItem
	.word	RecordEvent_GaveHeldItemFromPartyMenu
	.word	RecordEvent_GaveHeldItemFromBagMenu
	.word	RecordEvent_GaveHeldItemFromPC
	.word	RecordEvent_TookHeldItem
	.word	RecordEvent_SwappedHeldItemFromBag
	.word	RecordEvent_SwappedHeldItemFromPC
	.word	RecordEvent_UsedPkmnCenter
	.word	RecordEvent_LinkTraded
	.word	RecordEvent_LinkBattledSingle
	.word	RecordEvent_LinkBattledDouble
	.word	RecordEvent_LinkBattledMulti
	.word	RecordEvent_UsedUnionRoom
	.word	RecordEvent_UsedUnionRoomChat
	.word	RecordEvent_LinkTradedUnionRoom
	.word	RecordEvent_LinkBattledUnionRoom
	.word	RecordEvent_SwitchedMonsBetweenBoxes
	.word	RecordEvent_SwitchedMonsWithinBox
	.word	RecordEvent_SwitchedPartyMonForPCMon
	.word	RecordEvent_MovedMonBetweenBoxes
	.word	RecordEvent_MovedMonWithinBox
	.word	RecordEvent_WithdrewMonFromPC
	.word	RecordEvent_DepositedMonInPC
	.word	RecordEvent_SwitchedMultipleMons
	.word	RecordEvent_DepositedItemInPC
	.word	RecordEvent_WithdrewItemFromPC
	.word	RecordEvent_DefeatedGymLeader
	.word	RecordEvent_DefeatedWildMon
	.word	RecordEvent_DefeatedEliteFourMember
	.word	RecordEvent_DefeatedChampion
	.word	RecordEvent_DefeatedNormalTrainer
	.word	RecordEvent_DepartedLocation
	.word	RecordEvent_UsedFieldMove
	.word	RecordEvent_BoughtItem
	.word	RecordEvent_SoldItem
	.word	0x0
	.word	RecordEvent_ObtainedStoryItem
	.word	0x0
	.word	RecordEvent_ArrivedInLocation
	.size	 sRecordEventFuncs,172
	.align	2, 0
	.type	 sLoadEventFuncs,object
sLoadEventFuncs:
	.word	0x0
	.word	0x0
	.word	0x0
	.word	LoadEvent_SwitchedPartyOrder
	.word	LoadEvent_UsedItem
	.word	LoadEvent_GaveHeldItemFromPartyMenu
	.word	LoadEvent_GaveHeldItemFromBagMenu
	.word	LoadEvent_GaveHeldItemFromPC
	.word	LoadEvent_TookHeldItem
	.word	LoadEvent_SwappedHeldItem
	.word	LoadEvent_SwappedHeldItemFromPC
	.word	LoadEvent_UsedPkmnCenter
	.word	LoadEvent_LinkTraded
	.word	LoadEvent_LinkBattledSingle
	.word	LoadEvent_LinkBattledDouble
	.word	LoadEvent_LinkBattledMulti
	.word	LoadEvent_UsedUnionRoom
	.word	LoadEvent_UsedUnionRoomChat
	.word	LoadEvent_LinkTradedUnionRoom
	.word	LoadEvent_LinkBattledUnionRoom
	.word	LoadEvent_SwitchedMonsBetweenBoxes
	.word	LoadEvent_SwitchedMonsWithinBox
	.word	LoadEvent_SwitchedPartyMonForPCMon
	.word	LoadEvent_MovedMonBetweenBoxes
	.word	LoadEvent_MovedMonWithinBox
	.word	LoadEvent_WithdrewMonFromPC
	.word	LoadEvent_DepositedMonInPC
	.word	LoadEvent_SwitchedMultipleMons
	.word	LoadEvent_DepositedItemInPC
	.word	LoadEvent_WithdrewItemFromPC
	.word	LoadEvent_DefeatedGymLeader
	.word	LoadEvent_DefeatedWildMon
	.word	LoadEvent_DefeatedEliteFourMember
	.word	LoadEvent_DefeatedChampion
	.word	LoadEvent_DefeatedTrainer
	.word	LoadEvent_DepartedLocation
	.word	LoadEvent_UsedFieldMove
	.word	LoadEvent_BoughtItem
	.word	LoadEvent_SoldItem
	.word	0x0
	.word	LoadEvent_ObtainedStoryItem
	.word	0x0
	.word	LoadEvent_ArrivedInLocation
	.size	 sLoadEventFuncs,172
	.type	 sQuestLogEventCmdSizes,object
sQuestLogEventCmdSizes:
	.byte	0x8
	.byte	0x8
	.byte	0x8
	.byte	0x8
	.byte	0xa
	.byte	0x8
	.byte	0x8
	.byte	0x8
	.byte	0x8
	.byte	0xa
	.byte	0xa
	.byte	0x4
	.byte	0x10
	.byte	0xc
	.byte	0xc
	.byte	0x1a
	.byte	0x4
	.byte	0x4
	.byte	0x10
	.byte	0xc
	.byte	0xa
	.byte	0xa
	.byte	0xa
	.byte	0x8
	.byte	0x8
	.byte	0x8
	.byte	0x8
	.byte	0x6
	.byte	0x6
	.byte	0x6
	.byte	0xc
	.byte	0xc
	.byte	0xc
	.byte	0xa
	.byte	0xc
	.byte	0x6
	.byte	0x8
	.byte	0xe
	.byte	0xe
	.byte	0x2
	.byte	0x8
	.byte	0x4
	.byte	0x6
	.size	 sQuestLogEventCmdSizes,43
	.align	2, 0
	.type	 sDefeatedOpponentFlavorTexts,object
sDefeatedOpponentFlavorTexts:
	.word	gText_QuestLog_Handily
	.word	gText_QuestLog_Tenaciously
	.word	gText_QuestLog_Somehow
	.size	 sDefeatedOpponentFlavorTexts,12
	.align	2, 0
	.type	 sDefeatedChampionFlavorTexts,object
sDefeatedChampionFlavorTexts:
	.word	gText_QuestLog_Coolly
	.word	gText_QuestLog_Somehow
	.word	gText_QuestLog_Barely
	.size	 sDefeatedChampionFlavorTexts,12
	.align	2, 0
	.type	 sBattleOutcomeTexts,object
sBattleOutcomeTexts:
	.word	gText_QuestLog_Win
	.word	gText_QuestLog_Loss
	.word	gText_QuestLog_Draw
	.size	 sBattleOutcomeTexts,12
	.align	2, 0
	.type	 sLocationNameTexts,object
sLocationNameTexts:
	.word	gText_QuestLog_Home
	.word	gText_QuestLog_OakResearchLab
	.word	gText_QuestLog_Gym
	.word	gText_QuestLog_PokemonLeagueGate
	.word	gText_QuestLog_PokemonLeagueGate
	.word	gText_QuestLog_ViridianForest
	.word	gText_QuestLog_ViridianForest
	.word	gText_QuestLog_PewterMuseumOfScience
	.word	gText_QuestLog_Gym
	.word	gText_QuestLog_MtMoon
	.word	gText_QuestLog_MtMoon
	.word	gText_QuestLog_Gym
	.word	gText_QuestLog_BikeShop
	.word	gText_QuestLog_BillsHouse
	.word	gText_QuestLog_DayCare
	.word	gText_QuestLog_UndergroundPath
	.word	gText_QuestLog_UndergroundPath
	.word	gText_QuestLog_PokemonFanClub
	.word	gText_QuestLog_Gym
	.word	gText_QuestLog_SSAnne
	.word	gText_QuestLog_DiglettsCave
	.word	gText_QuestLog_DiglettsCave
	.word	gText_QuestLog_RockTunnel
	.word	gText_QuestLog_RockTunnel
	.word	gText_QuestLog_PowerPlant
	.word	gText_QuestLog_PokemonTower
	.word	gText_QuestLog_VolunteerHouse
	.word	gText_QuestLog_NameRatersHouse
	.word	gText_QuestLog_UndergroundPath
	.word	gText_QuestLog_UndergroundPath
	.word	gText_QuestLog_CeladonDeptStore
	.word	gText_QuestLog_CeladonMansion
	.word	gText_QuestLog_RocketGameCorner
	.word	gText_QuestLog_Gym
	.word	gText_QuestLog_Restaurant
	.word	gText_QuestLog_RocketHideout
	.word	gText_QuestLog_SafariZone
	.word	gText_QuestLog_Gym
	.word	gText_QuestLog_WardensHome
	.word	gText_QuestLog_FightingDojo
	.word	gText_QuestLog_Gym
	.word	gText_QuestLog_SilphCo
	.word	gText_QuestLog_SeafoamIslands
	.word	gText_QuestLog_SeafoamIslands
	.word	gText_QuestLog_PokemonMansion
	.word	gText_QuestLog_Gym
	.word	gText_QuestLog_PokemonResearchLab
	.word	gText_QuestLog_VictoryRoad
	.word	gText_QuestLog_VictoryRoad
	.word	gText_QuestLog_PokemonLeague
	.word	gText_QuestLog_CeruleanCave
	.size	 sLocationNameTexts,204
	.align	2, 0
	.type	 sDepartedLocationTexts,object
sDepartedLocationTexts:
	.word	gText_QuestLog_DepartedPlaceInTownForNextDestination
	.word	gText_QuestLog_LeftTownsLocationForNextDestination
	.word	gText_QuestLog_PlayedGamesAtGameCorner
	.word	gText_QuestLog_RestedAtHome
	.word	gText_QuestLog_LeftOaksLab
	.word	gText_QuestLog_GymWasFullOfToughTrainers
	.word	gText_QuestLog_HadGreatTimeInSafariZone
	.word	gText_QuestLog_ManagedToGetOutOfLocation
	.word	gText_QuestLog_DepartedTheLocationForNextDestination
	.word	gText_QuestLog_DepartedFromLocationToNextDestination
	.size	 sDepartedLocationTexts,40
	.type	 sLocationToDepartedTextId,object
sLocationToDepartedTextId:
	.byte	0x3
	.byte	0x4
	.byte	0x5
	.byte	0x8
	.byte	0x8
	.byte	0x7
	.byte	0x7
	.byte	0x1
	.byte	0x5
	.byte	0x7
	.byte	0x7
	.byte	0x5
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.byte	0x8
	.byte	0x0
	.byte	0x5
	.byte	0x8
	.byte	0x7
	.byte	0x7
	.byte	0x7
	.byte	0x7
	.byte	0x8
	.byte	0x8
	.byte	0x0
	.byte	0x0
	.byte	0x8
	.byte	0x8
	.byte	0x0
	.byte	0x0
	.byte	0x2
	.byte	0x5
	.byte	0x0
	.byte	0x8
	.byte	0x6
	.byte	0x5
	.byte	0x0
	.byte	0x0
	.byte	0x5
	.byte	0x9
	.byte	0x7
	.byte	0x7
	.byte	0x9
	.byte	0x5
	.byte	0x0
	.byte	0x7
	.byte	0x7
	.byte	0x8
	.byte	0x7
	.size	 sLocationToDepartedTextId,51
	.type	 sGymCityMapSecs,object
	.size	 sGymCityMapSecs,8
sGymCityMapSecs:
	.byte	0x5a
	.byte	0x5b
	.byte	0x5d
	.byte	0x5e
	.byte	0x5f
	.byte	0x62
	.byte	0x60
	.byte	0x59
	.align	2, 0
	.type	 sUsedFieldMoveTexts,object
sUsedFieldMoveTexts:
	.word	gText_QuestLog_UsedFlash
	.word	gText_QuestLog_UsedCut
	.word	gText_QuestLog_UsedFly
	.word	gText_QuestLog_UsedStrength
	.word	gText_QuestLog_UsedSurf
	.word	gText_QuestLog_UsedRockSmash
	.word	gText_QuestLog_UsedWaterfall
	.word	gText_QuestLog_UsedTeleportToLocation
	.word	gText_QuestLog_UsedDigInLocation
	.word	gText_QuestLog_UsedMilkDrink
	.word	gText_QuestLog_UsedSoftboiled
	.word	gText_QuestLog_UsedSweetScent
	.size	 sUsedFieldMoveTexts,48
	.align	1, 0
	.type	 sWorldMapFlags,object
sWorldMapFlags:
	.short	0x891
	.short	0x892
	.short	0x893
	.short	0x894
	.short	0x895
	.short	0x896
	.short	0x897
	.short	0x898
	.short	0x899
	.short	0x89a
	.short	0x89b
	.short	0x89c
	.short	0x89d
	.short	0x89e
	.short	0x89f
	.short	0x8a0
	.short	0x8a1
	.size	 sWorldMapFlags,34
.text
	.align	2, 0
	.globl	SetQuestLogEvent
	.type	 SetQuestLogEvent,function
	.thumb_func
SetQuestLogEvent:
	push	{r4, r5, lr}
	add	r5, r1, #0
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x23
	bne	.L5	@cond_branch
	ldr	r0, .L30
	ldrb	r0, [r0]
	cmp	r0, #0x2
	bne	.L5	@cond_branch
	bl	QL_EnableRecordingSteps
	b	.L4
.L31:
	.align	2, 0
.L30:
	.word	sStepRecordingMode
.L5:
	bl	QL_EnableRecordingSteps
	ldr	r0, .L32
	ldrb	r0, [r0]
	cmp	r0, #0x2
	bne	.LCB35
	b	.L4	@long jump
.LCB35:
	sub	r0, r4, #0x3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x27
	bls	.LCB40
	b	.L4	@long jump
.LCB40:
	bl	InQuestLogDisabledLocation
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.LCB46
	b	.L4	@long jump
.LCB46:
	add	r0, r4, #0
	add	r1, r5, #0
	bl	TryDeferLinkEvent
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.LCB54
	b	.L4	@long jump
.LCB54:
	bl	MenuHelpers_IsLinkActive
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.LCB60
	b	.L4	@long jump
.LCB60:
	bl	InUnionRoom
	cmp	r0, #0x1
	bne	.LCB64
	b	.L4	@long jump
.LCB64:
	add	r0, r4, #0
	add	r1, r5, #0
	bl	TryDeferTrainerBattleEvent
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L4	@cond_branch
	add	r0, r4, #0
	add	r1, r5, #0
	bl	IsEventWithSpecialEncounterSpecies
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L4	@cond_branch
	add	r0, r4, #0
	add	r1, r5, #0
	bl	ShouldRegisterEvent_DepartedGameCorner
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L4	@cond_branch
	ldr	r0, .L32+0x4
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L15	@cond_branch
	add	r0, r4, #0
	add	r1, r5, #0
	bl	ShouldRegisterEvent_HandlePartyActions
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L4	@cond_branch
	cmp	r4, #0x1f
	bne	.L18	@cond_branch
	ldr	r0, .L32+0x8
	ldr	r0, [r0]
	cmp	r0, #0
	bne	.L20	@cond_branch
.L18:
	add	r0, r4, #0
	add	r1, r5, #0
	bl	ShouldRegisterEvent_HandleDeparted
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L4	@cond_branch
	add	r0, r4, #0
	bl	QL_StartRecordingAction
	b	.L20
.L33:
	.align	2, 0
.L32:
	.word	gQuestLogState
	.word	gQuestLogPlaybackState
	.word	gQuestLogDefeatedWildMonRecord
.L15:
	cmp	r4, #0x28
	beq	.L4	@cond_branch
.L20:
	add	r0, r4, #0
	bl	UpdateRepeatEventCounter
	cmp	r4, #0x1f
	bne	.L22	@cond_branch
	ldr	r2, .L34
	ldr	r1, [r2]
	cmp	r1, #0
	bne	.L23	@cond_branch
	ldr	r0, .L34+0x4
	ldr	r0, [r0]
	str	r0, [r2]
	ldr	r1, .L34+0x8
	ldr	r2, [r1, #0x7c]
	b	.L29
.L35:
	.align	2, 0
.L34:
	.word	gQuestLogDefeatedWildMonRecord
	.word	gQuestLogRecordingPointer
	.word	sRecordEventFuncs
.L23:
	ldr	r0, .L36
	ldr	r2, [r0, #0x7c]
	add	r0, r1, #0
	add	r1, r5, #0
	bl	_call_via_r2
	b	.L4
.L37:
	.align	2, 0
.L36:
	.word	sRecordEventFuncs
.L22:
	ldr	r1, .L38
	mov	r0, #0x0
	str	r0, [r1]
	ldr	r0, .L38+0x4
	lsl	r1, r4, #0x2
	add	r1, r1, r0
	ldr	r0, .L38+0x8
	ldr	r0, [r0]
	ldr	r2, [r1]
.L29:
	add	r1, r5, #0
	bl	_call_via_r2
	add	r1, r0, #0
	cmp	r1, #0
	bne	.L26	@cond_branch
	bl	QL_FinishRecordingScene
	add	r0, r4, #0
	add	r1, r5, #0
	bl	ShouldRegisterEvent
	add	r1, r0, #0
	cmp	r1, #0
	beq	.L4	@cond_branch
.L26:
	ldr	r0, .L38+0x8
	str	r1, [r0]
	ldr	r0, .L38+0xc
	ldrb	r0, [r0]
	cmp	r0, #0
	beq	.L4	@cond_branch
	bl	QL_FinishRecordingScene
.L4:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L39:
	.align	2, 0
.L38:
	.word	gQuestLogDefeatedWildMonRecord
	.word	sRecordEventFuncs
	.word	gQuestLogRecordingPointer
	.word	sStepRecordingMode
.Lfe1:
	.size	 SetQuestLogEvent,.Lfe1-SetQuestLogEvent
	.align	2, 0
	.type	 InQuestLogDisabledLocation,function
	.thumb_func
InQuestLogDisabledLocation:
	push	{lr}
	ldr	r0, .L47
	ldr	r2, [r0]
	mov	r1, #0x4
	ldrsb	r1, [r2, r1]
	add	r3, r0, #0
	cmp	r1, #0x2
	bne	.L41	@cond_branch
	ldrb	r0, [r2, #0x5]
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0xa
	bls	.L45	@cond_branch
.L41:
	ldr	r2, [r3]
	ldrh	r1, [r2, #0x4]
	ldr	r0, .L47+0x4
	cmp	r1, r0
	beq	.L45	@cond_branch
	mov	r0, #0x4
	ldrsb	r0, [r2, r0]
	cmp	r0, #0x1f
	bne	.L43	@cond_branch
	ldrb	r0, [r2, #0x5]
	cmp	r0, #0x1
	bls	.L45	@cond_branch
.L43:
	ldr	r0, [r3]
	ldrh	r1, [r0, #0x4]
	ldr	r0, .L47+0x8
	cmp	r1, r0
	beq	.L45	@cond_branch
	ldr	r0, .L47+0xc
	cmp	r1, r0
	beq	.L45	@cond_branch
	ldr	r0, .L47+0x10
	cmp	r1, r0
	beq	.L45	@cond_branch
	ldr	r0, .L47+0x14
	cmp	r1, r0
	bne	.L44	@cond_branch
.L45:
	mov	r0, #0x1
	b	.L46
.L48:
	.align	2, 0
.L47:
	.word	gSaveBlock1Ptr
	.word	0x90e
	.word	0x2e01
	.word	0x3a01
	.word	0xb02
	.word	0x60a
.L44:
	mov	r0, #0x0
.L46:
	pop	{r1}
	bx	r1
.Lfe2:
	.size	 InQuestLogDisabledLocation,.Lfe2-InQuestLogDisabledLocation
	.align	2, 0
	.globl	QuestLog_ShouldEndSceneOnMapChange
	.type	 QuestLog_ShouldEndSceneOnMapChange,function
	.thumb_func
QuestLog_ShouldEndSceneOnMapChange:
	push	{lr}
	bl	InQuestLogDisabledLocation
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bne	.L52	@cond_branch
	ldr	r0, .L54
	ldrb	r0, [r0]
	cmp	r0, #0x2
	bne	.L51	@cond_branch
	mov	r0, #0x1
	b	.L53
.L55:
	.align	2, 0
.L54:
	.word	gQuestLogState
.L51:
	cmp	r0, #0x1
	bne	.L52	@cond_branch
	bl	QuestLog_CutRecording
.L52:
	mov	r0, #0x0
.L53:
	pop	{r1}
	bx	r1
.Lfe3:
	.size	 QuestLog_ShouldEndSceneOnMapChange,.Lfe3-QuestLog_ShouldEndSceneOnMapChange
	.align	2, 0
	.type	 ShouldRegisterEvent_HandlePartyActions,function
	.thumb_func
ShouldRegisterEvent_HandlePartyActions:
	push	{r4, r5, lr}
	add	r5, r1, #0
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x24
	beq	.L64	@cond_branch
	cmp	r4, #0xb
	beq	.L64	@cond_branch
	ldr	r0, .L66
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L59	@cond_branch
	cmp	r4, #0x3
	beq	.L64	@cond_branch
	cmp	r4, #0x1f
	beq	.L64	@cond_branch
	add	r0, r4, #0
	add	r1, r5, #0
	bl	ShouldRegisterEvent_HandleBeatStoryTrainer
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L64	@cond_branch
.L59:
	ldr	r0, .L66+0x4
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L62	@cond_branch
	sub	r0, r4, #0x4
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x6
	bls	.L64	@cond_branch
	cmp	r4, #0x16
	beq	.L64	@cond_branch
	cmp	r4, #0x19
	beq	.L64	@cond_branch
	cmp	r4, #0x1a
	bne	.L62	@cond_branch
.L64:
	mov	r0, #0x1
	b	.L65
.L67:
	.align	2, 0
.L66:
	.word	0x82c
	.word	0x844
.L62:
	mov	r0, #0x0
.L65:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe4:
	.size	 ShouldRegisterEvent_HandlePartyActions,.Lfe4-ShouldRegisterEvent_HandlePartyActions
	.align	2, 0
	.type	 ShouldRegisterEvent_HandleBeatStoryTrainer,function
	.thumb_func
ShouldRegisterEvent_HandleBeatStoryTrainer:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x22
	bne	.L69	@cond_branch
	ldr	r2, .L73
	ldrh	r1, [r1]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r0, r0, #0x3
	add	r0, r0, r2
	ldrb	r1, [r0, #0x1]
	cmp	r1, #0x51
	beq	.L69	@cond_branch
	cmp	r1, #0x59
	beq	.L69	@cond_branch
	cmp	r1, #0x5a
	beq	.L69	@cond_branch
	cmp	r1, #0x53
	beq	.L69	@cond_branch
	mov	r0, #0x1
	b	.L72
.L74:
	.align	2, 0
.L73:
	.word	gTrainers
.L69:
	mov	r0, #0x0
.L72:
	pop	{r1}
	bx	r1
.Lfe5:
	.size	 ShouldRegisterEvent_HandleBeatStoryTrainer,.Lfe5-ShouldRegisterEvent_HandleBeatStoryTrainer
	.align	2, 0
	.globl	QL_EnableRecordingSteps
	.type	 QL_EnableRecordingSteps,function
	.thumb_func
QL_EnableRecordingSteps:
	ldr	r1, .L76
	mov	r0, #0x0
	strb	r0, [r1]
	bx	lr
.L77:
	.align	2, 0
.L76:
	.word	sStepRecordingMode
.Lfe6:
	.size	 QL_EnableRecordingSteps,.Lfe6-QL_EnableRecordingSteps
	.align	2, 0
	.type	 ShouldRegisterEvent,function
	.thumb_func
ShouldRegisterEvent:
	push	{r4, r5, lr}
	add	r5, r1, #0
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	add	r0, r4, #0
	bl	ShouldRegisterEvent_HandlePartyActions
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L84	@cond_branch
	add	r0, r4, #0
	add	r1, r5, #0
	bl	ShouldRegisterEvent_HandleDeparted
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L80	@cond_branch
.L84:
	mov	r0, #0x0
	b	.L83
.L80:
	add	r0, r4, #0
	bl	QL_StartRecordingAction
	add	r0, r4, #0
	bl	UpdateRepeatEventCounter
	cmp	r4, #0x1f
	bne	.L81	@cond_branch
	ldr	r2, .L85
	ldr	r1, .L85+0x4
	ldr	r0, [r1]
	str	r0, [r2]
	add	r2, r1, #0
	b	.L82
.L86:
	.align	2, 0
.L85:
	.word	gQuestLogDefeatedWildMonRecord
	.word	gQuestLogRecordingPointer
.L81:
	ldr	r1, .L87
	mov	r0, #0x0
	str	r0, [r1]
	ldr	r2, .L87+0x4
.L82:
	ldr	r0, .L87+0x8
	lsl	r1, r4, #0x2
	add	r1, r1, r0
	ldr	r0, [r2]
	ldr	r2, [r1]
	add	r1, r5, #0
	bl	_call_via_r2
.L83:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L88:
	.align	2, 0
.L87:
	.word	gQuestLogDefeatedWildMonRecord
	.word	gQuestLogRecordingPointer
	.word	sRecordEventFuncs
.Lfe7:
	.size	 ShouldRegisterEvent,.Lfe7-ShouldRegisterEvent
	.align	2, 0
	.type	 TryDeferLinkEvent,function
	.thumb_func
TryDeferLinkEvent:
	push	{r4, r5, lr}
	add	r5, r1, #0
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r4, r0, #0
	sub	r0, r0, #0xc
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x7
	bls	.L90	@cond_branch
	mov	r0, #0x0
	b	.L95
.L90:
	bl	ResetDeferredLinkEvent
	ldr	r1, .L96
	strh	r4, [r1]
	add	r0, r4, #0
	sub	r0, r0, #0x10
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1
	bls	.L91	@cond_branch
	cmp	r4, #0xc
	beq	.L93	@cond_branch
	cmp	r4, #0x12
	bne	.L92	@cond_branch
.L93:
	add	r0, r1, #0x4
	add	r1, r5, #0
	mov	r2, #0xc
	bl	memcpy
	b	.L91
.L97:
	.align	2, 0
.L96:
	.word	sDeferredEvent
.L92:
	add	r0, r1, #0x4
	add	r1, r5, #0
	mov	r2, #0x18
	bl	memcpy
.L91:
	mov	r0, #0x1
.L95:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe8:
	.size	 TryDeferLinkEvent,.Lfe8-TryDeferLinkEvent
	.align	2, 0
	.globl	ResetDeferredLinkEvent
	.type	 ResetDeferredLinkEvent,function
	.thumb_func
ResetDeferredLinkEvent:
	push	{lr}
	ldr	r0, .L99
	mov	r1, #0x0
	mov	r2, #0x20
	bl	memset
	pop	{r0}
	bx	r0
.L100:
	.align	2, 0
.L99:
	.word	sDeferredEvent
.Lfe9:
	.size	 ResetDeferredLinkEvent,.Lfe9-ResetDeferredLinkEvent
	.align	2, 0
	.globl	QuestLog_StartRecordingInputsAfterDeferredEvent
	.type	 QuestLog_StartRecordingInputsAfterDeferredEvent,function
	.thumb_func
QuestLog_StartRecordingInputsAfterDeferredEvent:
	push	{r4, r5, lr}
	ldr	r5, .L103
	ldrh	r0, [r5]
	cmp	r0, #0
	beq	.L102	@cond_branch
	ldr	r1, .L103+0x4
	mov	r0, #0x0
	strb	r0, [r1]
	ldrh	r0, [r5]
	bl	QL_StartRecordingAction
	ldr	r0, .L103+0x8
	ldrh	r2, [r5]
	lsl	r2, r2, #0x2
	add	r2, r2, r0
	ldr	r4, .L103+0xc
	ldr	r0, [r4]
	add	r1, r5, #0x4
	ldr	r2, [r2]
	bl	_call_via_r2
	str	r0, [r4]
	bl	ResetDeferredLinkEvent
.L102:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L104:
	.align	2, 0
.L103:
	.word	sDeferredEvent
	.word	sLastDepartedLocation
	.word	sRecordEventFuncs
	.word	gQuestLogRecordingPointer
.Lfe10:
	.size	 QuestLog_StartRecordingInputsAfterDeferredEvent,.Lfe10-QuestLog_StartRecordingInputsAfterDeferredEvent
	.align	2, 0
	.type	 TryDeferTrainerBattleEvent,function
	.thumb_func
TryDeferTrainerBattleEvent:
	push	{r4, r5, lr}
	add	r5, r1, #0
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	cmp	r4, #0x22
	beq	.L106	@cond_branch
	cmp	r4, #0x1e
	beq	.L106	@cond_branch
	cmp	r4, #0x20
	beq	.L106	@cond_branch
	cmp	r4, #0x21
	beq	.L106	@cond_branch
	mov	r0, #0x0
	b	.L109
.L106:
	bl	ResetDeferredLinkEvent
	ldr	r0, .L110
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L108	@cond_branch
	ldr	r0, .L110+0x4
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L108	@cond_branch
	add	r0, r4, #0
	add	r1, r5, #0
	bl	ShouldRegisterEvent_HandleBeatStoryTrainer
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L107	@cond_branch
.L108:
	ldr	r0, .L110+0x8
	strh	r4, [r0]
	add	r0, r0, #0x4
	add	r1, r5, #0
	mov	r2, #0x8
	bl	memcpy
.L107:
	mov	r0, #0x1
.L109:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L111:
	.align	2, 0
.L110:
	.word	gQuestLogPlaybackState
	.word	0x82c
	.word	sDeferredEvent
.Lfe11:
	.size	 TryDeferTrainerBattleEvent,.Lfe11-TryDeferTrainerBattleEvent
	.align	2, 0
	.globl	QuestLogEvents_HandleEndTrainerBattle
	.type	 QuestLogEvents_HandleEndTrainerBattle,function
	.thumb_func
QuestLogEvents_HandleEndTrainerBattle:
	push	{r4, r5, lr}
	ldr	r5, .L115
	ldrh	r0, [r5]
	cmp	r0, #0
	beq	.L113	@cond_branch
	ldr	r0, .L115+0x4
	ldrb	r1, [r0]
	cmp	r1, #0
	bne	.L114	@cond_branch
	ldr	r0, .L115+0x8
	strb	r1, [r0]
	ldrh	r0, [r5]
	bl	QL_StartRecordingAction
.L114:
	ldrh	r0, [r5]
	bl	UpdateRepeatEventCounter
	ldr	r0, .L115+0xc
	ldrh	r2, [r5]
	lsl	r2, r2, #0x2
	add	r2, r2, r0
	ldr	r4, .L115+0x10
	ldr	r0, [r4]
	add	r1, r5, #0x4
	ldr	r2, [r2]
	bl	_call_via_r2
	str	r0, [r4]
	mov	r0, #0x1
	bl	QL_RecordWait
	bl	ResetDeferredLinkEvent
	bl	QL_FinishRecordingScene
.L113:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L116:
	.align	2, 0
.L115:
	.word	sDeferredEvent
	.word	gQuestLogPlaybackState
	.word	sLastDepartedLocation
	.word	sRecordEventFuncs
	.word	gQuestLogRecordingPointer
.Lfe12:
	.size	 QuestLogEvents_HandleEndTrainerBattle,.Lfe12-QuestLogEvents_HandleEndTrainerBattle
	.align	2, 0
	.globl	QL_RecordWait
	.type	 QL_RecordWait,function
	.thumb_func
QL_RecordWait:
	push	{r4, lr}
	add	r1, r0, #0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	ldr	r4, .L118
	ldr	r0, [r4]
	bl	QL_RecordAction_Wait
	str	r0, [r4]
	ldr	r1, .L118+0x4
	ldrh	r0, [r1]
	add	r0, r0, #0x1
	strh	r0, [r1]
	pop	{r4}
	pop	{r0}
	bx	r0
.L119:
	.align	2, 0
.L118:
	.word	gQuestLogRecordingPointer
	.word	gQuestLogCurActionIdx
.Lfe13:
	.size	 QL_RecordWait,.Lfe13-QL_RecordWait
	.align	2, 0
	.type	 IsEventWithSpecialEncounterSpecies,function
	.thumb_func
IsEventWithSpecialEncounterSpecies:
	push	{r4, lr}
	add	r4, r1, #0
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x1f
	bne	.L125	@cond_branch
	ldrh	r0, [r4]
	bl	IsSpeciesFromSpecialEncounter
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L123	@cond_branch
	ldrh	r0, [r4, #0x2]
	bl	IsSpeciesFromSpecialEncounter
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L123	@cond_branch
.L125:
	mov	r0, #0x0
	b	.L124
.L123:
	mov	r0, #0x1
.L124:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe14:
	.size	 IsEventWithSpecialEncounterSpecies,.Lfe14-IsEventWithSpecialEncounterSpecies
	.align	2, 0
	.globl	QL_SkipCommand
	.type	 QL_SkipCommand,function
	.thumb_func
QL_SkipCommand:
	push	{r4, r5, lr}
	add	r3, r0, #0
	add	r5, r1, #0
	ldrh	r1, [r3]
	ldr	r0, .L130
	and	r0, r0, r1
	add	r2, r0, #0
	lsr	r4, r1, #0xc
	cmp	r2, #0x21
	bne	.L127	@cond_branch
	mov	r4, #0x0
.L127:
	sub	r0, r2, #0x3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x27
	bhi	.L128	@cond_branch
	str	r3, [r5]
	ldr	r0, .L130+0x4
	add	r0, r2, r0
	ldrb	r0, [r0]
	sub	r1, r0, #0x4
	mul	r1, r1, r4
	add	r0, r0, r1
	add	r0, r3, r0
	b	.L129
.L131:
	.align	2, 0
.L130:
	.word	0xfff
	.word	sQuestLogEventCmdSizes
.L128:
	mov	r0, #0x0
.L129:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe15:
	.size	 QL_SkipCommand,.Lfe15-QL_SkipCommand
	.align	2, 0
	.globl	QL_UpdateLastDepartedLocation
	.type	 QL_UpdateLastDepartedLocation,function
	.thumb_func
QL_UpdateLastDepartedLocation:
	push	{lr}
	add	r2, r0, #0x4
	ldrh	r1, [r0]
	ldr	r0, .L136
	and	r0, r0, r1
	cmp	r0, #0x23
	beq	.L133	@cond_branch
	ldr	r1, .L136+0x4
	mov	r0, #0x0
	b	.L135
.L137:
	.align	2, 0
.L136:
	.word	0xfff
	.word	sLastDepartedLocation
.L133:
	ldr	r1, .L138
	ldrb	r0, [r2, #0x1]
	add	r0, r0, #0x1
.L135:
	strb	r0, [r1]
	pop	{r0}
	bx	r0
.L139:
	.align	2, 0
.L138:
	.word	sLastDepartedLocation
.Lfe16:
	.size	 QL_UpdateLastDepartedLocation,.Lfe16-QL_UpdateLastDepartedLocation
	.align	2, 0
	.globl	QL_LoadEvent
	.type	 QL_LoadEvent,function
	.thumb_func
QL_LoadEvent:
	push	{r4, lr}
	add	r4, r0, #0
	cmp	r0, #0
	beq	.L145	@cond_branch
	ldr	r1, .L146
	ldrh	r0, [r0, #0x2]
	ldrh	r1, [r1]
	cmp	r0, r1
	bls	.L142	@cond_branch
.L145:
	mov	r0, #0x0
	b	.L144
.L147:
	.align	2, 0
.L146:
	.word	gQuestLogCurActionIdx
.L142:
	ldr	r2, .L148
	ldrh	r1, [r4]
	ldr	r0, .L148+0x4
	and	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldr	r1, [r0]
	add	r0, r4, #0
	bl	_call_via_r1
	ldr	r2, .L148+0x8
	ldrh	r1, [r4]
	strb	r1, [r2]
	mov	r0, #0xf0
	lsl	r0, r0, #0x8
	and	r0, r0, r1
	lsr	r0, r0, #0xc
	strb	r0, [r2, #0x1]
	cmp	r0, #0
	beq	.L143	@cond_branch
	mov	r0, #0x1
	strh	r0, [r2, #0x2]
.L143:
	mov	r0, #0x1
.L144:
	pop	{r4}
	pop	{r1}
	bx	r1
.L149:
	.align	2, 0
.L148:
	.word	sLoadEventFuncs
	.word	0xfff
	.word	gQuestLogRepeatEventTracker
.Lfe17:
	.size	 QL_LoadEvent,.Lfe17-QL_LoadEvent
	.align	2, 0
	.globl	QL_TryRepeatEvent
	.type	 QL_TryRepeatEvent,function
	.thumb_func
QL_TryRepeatEvent:
	push	{r4, lr}
	add	r2, r0, #0
	ldr	r4, .L154
	ldrh	r0, [r4, #0x2]
	cmp	r0, #0
	bne	.L151	@cond_branch
	mov	r0, #0x0
	b	.L153
.L155:
	.align	2, 0
.L154:
	.word	gQuestLogRepeatEventTracker
.L151:
	ldr	r1, .L156
	ldrb	r0, [r4]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	add	r0, r2, #0
	bl	_call_via_r1
	ldrh	r0, [r4, #0x2]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x2]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldrb	r4, [r4, #0x1]
	cmp	r0, r4
	bls	.L152	@cond_branch
	bl	QL_ResetRepeatEventTracker
.L152:
	mov	r0, #0x1
.L153:
	pop	{r4}
	pop	{r1}
	bx	r1
.L157:
	.align	2, 0
.L156:
	.word	sLoadEventFuncs
.Lfe18:
	.size	 QL_TryRepeatEvent,.Lfe18-QL_TryRepeatEvent
	.align	2, 0
	.globl	QL_ResetRepeatEventTracker
	.type	 QL_ResetRepeatEventTracker,function
	.thumb_func
QL_ResetRepeatEventTracker:
	ldr	r1, .L159
	mov	r0, #0x0
	str	r0, [r1]
	bx	lr
.L160:
	.align	2, 0
.L159:
	.word	gQuestLogRepeatEventTracker
.Lfe19:
	.size	 QL_ResetRepeatEventTracker,.Lfe19-QL_ResetRepeatEventTracker
	.align	2, 0
	.type	 UpdateRepeatEventCounter,function
	.thumb_func
UpdateRepeatEventCounter:
	push	{r4, lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r4, r0, #0
	ldr	r2, .L166
	ldrb	r1, [r2]
	lsl	r0, r4, #0x18
	lsr	r0, r0, #0x18
	ldr	r3, .L166+0x4
	cmp	r1, r0
	bne	.L163	@cond_branch
	ldrh	r1, [r2, #0x2]
	ldrh	r0, [r3]
	cmp	r1, r0
	beq	.L162	@cond_branch
.L163:
	mov	r0, #0x0
	strb	r4, [r2]
	strb	r0, [r2, #0x1]
	ldrh	r0, [r3]
	strh	r0, [r2, #0x2]
	b	.L164
.L167:
	.align	2, 0
.L166:
	.word	gQuestLogRepeatEventTracker
	.word	gQuestLogCurActionIdx
.L162:
	ldrb	r0, [r2, #0x1]
	cmp	r0, #0x4
	bhi	.L164	@cond_branch
	add	r0, r0, #0x1
	strb	r0, [r2, #0x1]
.L164:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe20:
	.size	 UpdateRepeatEventCounter,.Lfe20-UpdateRepeatEventCounter
	.align	2, 0
	.globl	QL_ResetEventStates
	.type	 QL_ResetEventStates,function
	.thumb_func
QL_ResetEventStates:
	ldr	r0, .L169
	mov	r1, #0x0
	strb	r1, [r0]
	ldr	r0, .L169+0x4
	strb	r1, [r0]
	ldr	r0, .L169+0x8
	strb	r1, [r0]
	bx	lr
.L170:
	.align	2, 0
.L169:
	.word	sNewlyEnteredMap
	.word	sLastDepartedLocation
	.word	sPlayedTheSlots
.Lfe21:
	.size	 QL_ResetEventStates,.Lfe21-QL_ResetEventStates
	.align	2, 0
	.globl	QL_RecordAction_SceneEnd
	.type	 QL_RecordAction_SceneEnd,function
	.thumb_func
QL_RecordAction_SceneEnd:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L174
	add	r0, r0, #0x27
	ldrb	r1, [r0]
	add	r0, r4, #0
	bl	QL_IsRoomToSaveAction
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L172	@cond_branch
	mov	r0, #0x27
	strh	r0, [r4]
	add	r0, r4, #0x2
	b	.L173
.L175:
	.align	2, 0
.L174:
	.word	sQuestLogEventCmdSizes
.L172:
	mov	r0, #0x0
.L173:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe22:
	.size	 QL_RecordAction_SceneEnd,.Lfe22-QL_RecordAction_SceneEnd
	.align	2, 0
	.globl	QL_LoadAction_SceneEnd
	.type	 QL_LoadAction_SceneEnd,function
	.thumb_func
QL_LoadAction_SceneEnd:
	push	{r4, r5, lr}
	add	r5, r0, #0
	add	r4, r1, #0
	ldr	r0, .L179
	add	r0, r0, #0x27
	ldrb	r1, [r0]
	add	r0, r5, #0
	bl	QL_IsRoomToSaveAction
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L177	@cond_branch
	mov	r0, #0xff
	strb	r0, [r4, #0x6]
	mov	r1, #0x0
	mov	r0, #0x0
	strh	r0, [r4, #0x4]
	strb	r1, [r4]
	strb	r1, [r4, #0x1]
	strb	r1, [r4, #0x2]
	strb	r1, [r4, #0x3]
	add	r0, r5, #0x2
	b	.L178
.L180:
	.align	2, 0
.L179:
	.word	sQuestLogEventCmdSizes
.L177:
	mov	r0, #0x0
.L178:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe23:
	.size	 QL_LoadAction_SceneEnd,.Lfe23-QL_LoadAction_SceneEnd
	.align	2, 0
	.type	 QL_RecordAction_Wait,function
	.thumb_func
QL_RecordAction_Wait:
	push	{r4, r5, lr}
	add	r4, r0, #0
	lsl	r1, r1, #0x10
	lsr	r5, r1, #0x10
	ldr	r0, .L184
	add	r0, r0, #0x29
	ldrb	r1, [r0]
	add	r0, r4, #0
	bl	QL_IsRoomToSaveAction
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L182	@cond_branch
	mov	r0, #0x29
	strh	r0, [r4]
	strh	r5, [r4, #0x2]
	add	r0, r4, #0x4
	b	.L183
.L185:
	.align	2, 0
.L184:
	.word	sQuestLogEventCmdSizes
.L182:
	mov	r0, #0x0
.L183:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe24:
	.size	 QL_RecordAction_Wait,.Lfe24-QL_RecordAction_Wait
	.align	2, 0
	.globl	QL_LoadAction_Wait
	.type	 QL_LoadAction_Wait,function
	.thumb_func
QL_LoadAction_Wait:
	push	{r4, r5, lr}
	add	r5, r0, #0
	add	r4, r1, #0
	ldr	r0, .L189
	add	r0, r0, #0x29
	ldrb	r1, [r0]
	add	r0, r5, #0
	bl	QL_IsRoomToSaveAction
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L187	@cond_branch
	mov	r0, #0xfe
	strb	r0, [r4, #0x6]
	ldrh	r1, [r5, #0x2]
	mov	r0, #0x0
	strh	r1, [r4, #0x4]
	strb	r0, [r4]
	strb	r0, [r4, #0x1]
	strb	r0, [r4, #0x2]
	strb	r0, [r4, #0x3]
	add	r0, r5, #0x4
	b	.L188
.L190:
	.align	2, 0
.L189:
	.word	sQuestLogEventCmdSizes
.L187:
	mov	r0, #0x0
.L188:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe25:
	.size	 QL_LoadAction_Wait,.Lfe25-QL_LoadAction_Wait
	.align	2, 0
	.globl	QL_RecordAction_Input
	.type	 QL_RecordAction_Input,function
	.thumb_func
QL_RecordAction_Input:
	push	{r4, r5, r6, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	add	r6, r4, #0x4
	ldr	r0, .L194
	ldrb	r1, [r0]
	add	r0, r4, #0
	bl	QL_IsRoomToSaveAction
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L192	@cond_branch
	mov	r0, #0x0
	strh	r0, [r4]
	ldrh	r0, [r5, #0x4]
	strh	r0, [r4, #0x2]
	ldrb	r0, [r5]
	strb	r0, [r4, #0x4]
	ldrb	r0, [r5, #0x1]
	strb	r0, [r6, #0x1]
	ldrb	r0, [r5, #0x2]
	strb	r0, [r6, #0x2]
	ldrb	r0, [r5, #0x3]
	strb	r0, [r6, #0x3]
	add	r0, r6, #0x4
	b	.L193
.L195:
	.align	2, 0
.L194:
	.word	sQuestLogEventCmdSizes
.L192:
	mov	r0, #0x0
.L193:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe26:
	.size	 QL_RecordAction_Input,.Lfe26-QL_RecordAction_Input
	.align	2, 0
	.globl	QL_LoadAction_Input
	.type	 QL_LoadAction_Input,function
	.thumb_func
QL_LoadAction_Input:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	add	r4, r1, #0
	add	r6, r5, #0x4
	ldr	r0, .L199
	ldrb	r1, [r0]
	add	r0, r5, #0
	bl	QL_IsRoomToSaveAction
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L197	@cond_branch
	mov	r0, #0x2
	strb	r0, [r4, #0x6]
	ldrh	r0, [r5, #0x2]
	strh	r0, [r4, #0x4]
	ldrb	r0, [r5, #0x4]
	strb	r0, [r4]
	ldrb	r0, [r6, #0x1]
	strb	r0, [r4, #0x1]
	ldrb	r0, [r6, #0x2]
	strb	r0, [r4, #0x2]
	ldrb	r0, [r6, #0x3]
	strb	r0, [r4, #0x3]
	add	r0, r6, #0x4
	b	.L198
.L200:
	.align	2, 0
.L199:
	.word	sQuestLogEventCmdSizes
.L197:
	mov	r0, #0x0
.L198:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe27:
	.size	 QL_LoadAction_Input,.Lfe27-QL_LoadAction_Input
	.align	2, 0
	.globl	QL_RecordAction_MovementOrGfxChange
	.type	 QL_RecordAction_MovementOrGfxChange,function
	.thumb_func
QL_RecordAction_MovementOrGfxChange:
	push	{r4, r5, r6, lr}
	add	r5, r1, #0
	add	r4, r0, #0
	add	r6, r4, #0x4
	ldr	r0, .L207
	ldrb	r1, [r0, #0x2]
	add	r0, r4, #0
	bl	QL_IsRoomToSaveAction
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L202	@cond_branch
	mov	r0, #0x0
	b	.L205
.L208:
	.align	2, 0
.L207:
	.word	sQuestLogEventCmdSizes
.L202:
	ldrb	r0, [r5, #0x6]
	cmp	r0, #0
	bne	.L203	@cond_branch
	mov	r0, #0x2
	b	.L206
.L203:
	mov	r0, #0x1
.L206:
	strh	r0, [r4]
	ldrh	r0, [r5, #0x4]
	strh	r0, [r4, #0x2]
	ldrb	r0, [r5]
	strb	r0, [r6]
	ldrb	r0, [r5, #0x1]
	strb	r0, [r6, #0x1]
	ldrb	r0, [r5, #0x2]
	strb	r0, [r6, #0x2]
	ldrb	r0, [r5, #0x3]
	strb	r0, [r6, #0x3]
	add	r0, r6, #0x4
.L205:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe28:
	.size	 QL_RecordAction_MovementOrGfxChange,.Lfe28-QL_RecordAction_MovementOrGfxChange
	.align	2, 0
	.globl	QL_LoadAction_MovementOrGfxChange
	.type	 QL_LoadAction_MovementOrGfxChange,function
	.thumb_func
QL_LoadAction_MovementOrGfxChange:
	push	{r4, r5, r6, lr}
	add	r4, r1, #0
	add	r5, r0, #0
	add	r6, r5, #0x4
	ldr	r0, .L215
	ldrb	r1, [r0, #0x2]
	add	r0, r5, #0
	bl	QL_IsRoomToSaveAction
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L210	@cond_branch
	mov	r0, #0x0
	b	.L213
.L216:
	.align	2, 0
.L215:
	.word	sQuestLogEventCmdSizes
.L210:
	ldrh	r0, [r5]
	cmp	r0, #0x2
	bne	.L211	@cond_branch
	mov	r0, #0x0
	b	.L214
.L211:
	mov	r0, #0x1
.L214:
	strb	r0, [r4, #0x6]
	ldrh	r0, [r5, #0x2]
	strh	r0, [r4, #0x4]
	ldrb	r0, [r6]
	strb	r0, [r4]
	ldrb	r0, [r6, #0x1]
	strb	r0, [r4, #0x1]
	ldrb	r0, [r6, #0x2]
	strb	r0, [r4, #0x2]
	ldrb	r0, [r6, #0x3]
	strb	r0, [r4, #0x3]
	add	r0, r6, #0x4
.L213:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe29:
	.size	 QL_LoadAction_MovementOrGfxChange,.Lfe29-QL_LoadAction_MovementOrGfxChange
	.align	2, 0
	.type	 RecordEventHeader,function
	.thumb_func
RecordEventHeader:
	push	{r4, r5, r6, r7, lr}
	add	r4, r1, #0
	lsl	r0, r0, #0x10
	lsr	r7, r0, #0x10
	ldr	r0, .L230
	ldrb	r0, [r0, #0x1]
	cmp	r0, #0
	bne	.L218	@cond_branch
	ldr	r0, .L230+0x4
	add	r0, r7, r0
	ldrb	r6, [r0]
	b	.L219
.L231:
	.align	2, 0
.L230:
	.word	gQuestLogRepeatEventTracker
	.word	sQuestLogEventCmdSizes
.L218:
	ldr	r0, .L232
	add	r0, r7, r0
	ldrb	r0, [r0]
	sub	r0, r0, #0x4
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
.L219:
	add	r0, r4, #0
	add	r1, r6, #0
	bl	QL_IsRoomToSaveEvent
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L220	@cond_branch
	mov	r0, #0x0
	b	.L229
.L233:
	.align	2, 0
.L232:
	.word	sQuestLogEventCmdSizes
.L220:
	add	r5, r4, #0
	ldr	r2, .L234
	ldrb	r1, [r2, #0x1]
	cmp	r1, #0
	beq	.L221	@cond_branch
	add	r0, r1, #0
	mul	r0, r0, r6
	add	r0, r0, #0x4
	sub	r5, r5, r0
.L221:
	cmp	r1, #0x5
	bne	.L222	@cond_branch
	mov	r4, #0x0
.L226:
	mov	r0, r4
	mul	r0, r0, r6
	add	r0, r0, r5
	add	r0, r0, #0x4
	add	r4, r4, #0x1
	mov	r1, r4
	mul	r1, r1, r6
	add	r1, r1, r5
	add	r1, r1, #0x4
	add	r2, r6, #0
	bl	memcpy
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	cmp	r4, #0x3
	bls	.L226	@cond_branch
	mov	r1, #0x4
	b	.L228
.L235:
	.align	2, 0
.L234:
	.word	gQuestLogRepeatEventTracker
.L222:
	ldrb	r1, [r2, #0x1]
.L228:
	lsl	r0, r1, #0xc
	add	r0, r7, r0
	strh	r0, [r5]
	ldr	r0, .L236
	ldrh	r0, [r0]
	strh	r0, [r5, #0x2]
	mov	r0, r1
	mul	r0, r0, r6
	add	r0, r0, #0x4
	add	r5, r5, r0
	add	r0, r5, #0
.L229:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L237:
	.align	2, 0
.L236:
	.word	gQuestLogCurActionIdx
.Lfe30:
	.size	 RecordEventHeader,.Lfe30-RecordEventHeader
	.align	2, 0
	.type	 LoadEvent,function
	.thumb_func
LoadEvent:
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r2, .L239
	ldrh	r3, [r2, #0x2]
	ldr	r2, .L239+0x4
	add	r0, r0, r2
	ldrb	r0, [r0]
	sub	r0, r0, #0x4
	mul	r0, r0, r3
	add	r0, r0, #0x4
	add	r1, r1, r0
	add	r0, r1, #0
	bx	lr
.L240:
	.align	2, 0
.L239:
	.word	gQuestLogRepeatEventTracker
	.word	sQuestLogEventCmdSizes
.Lfe31:
	.size	 LoadEvent,.Lfe31-LoadEvent
	.align	2, 0
	.type	 QuestLog_GetSpeciesName,function
	.thumb_func
QuestLog_GetSpeciesName:
	push	{r4, r5, lr}
	add	r3, r1, #0
	lsl	r0, r0, #0x10
	lsr	r1, r0, #0x10
	add	r4, r1, #0
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r5, r2, #0
	cmp	r3, #0
	beq	.L242	@cond_branch
	mov	r0, #0xce
	lsl	r0, r0, #0x1
	cmp	r1, r0
	beq	.L243	@cond_branch
	add	r0, r3, #0
	bl	GetSpeciesName
	b	.L245
.L243:
	ldr	r1, .L248
	add	r0, r3, #0
	bl	StringCopy
	b	.L245
.L249:
	.align	2, 0
.L248:
	.word	gText_EggNickname
.L242:
	mov	r0, #0xce
	lsl	r0, r0, #0x1
	cmp	r4, r0
	beq	.L246	@cond_branch
	mov	r0, #0xb
	mov	r1, r4
	mul	r1, r1, r0
	ldr	r0, .L250
	add	r1, r1, r0
	add	r0, r2, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	b	.L245
.L251:
	.align	2, 0
.L250:
	.word	gSpeciesNames
.L246:
	ldr	r1, .L252
	add	r0, r5, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
.L245:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L253:
	.align	2, 0
.L252:
	.word	gText_EggNickname
.Lfe32:
	.size	 QuestLog_GetSpeciesName,.Lfe32-QuestLog_GetSpeciesName
	.align	2, 0
	.type	 RecordEvent_SwitchedPartyOrder,function
	.thumb_func
RecordEvent_SwitchedPartyOrder:
	push	{r4, lr}
	add	r2, r0, #0
	add	r4, r1, #0
	mov	r0, #0x3
	add	r1, r2, #0
	bl	RecordEventHeader
	add	r2, r0, #0
	cmp	r2, #0
	beq	.L255	@cond_branch
	ldrh	r0, [r4]
	strh	r0, [r2]
	ldrh	r0, [r4, #0x2]
	strh	r0, [r2, #0x2]
	add	r0, r2, #0x4
	b	.L256
.L255:
	mov	r0, #0x0
.L256:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe33:
	.size	 RecordEvent_SwitchedPartyOrder,.Lfe33-RecordEvent_SwitchedPartyOrder
	.align	2, 0
	.type	 LoadEvent_SwitchedPartyOrder,function
	.thumb_func
LoadEvent_SwitchedPartyOrder:
	push	{r4, lr}
	add	r1, r0, #0
	mov	r0, #0x3
	bl	LoadEvent
	add	r4, r0, #0
	ldrh	r0, [r4]
	ldr	r1, .L258
	mov	r2, #0x0
	bl	QuestLog_GetSpeciesName
	ldrh	r0, [r4, #0x2]
	ldr	r1, .L258+0x4
	mov	r2, #0x0
	bl	QuestLog_GetSpeciesName
	ldr	r0, .L258+0x8
	ldr	r1, .L258+0xc
	bl	StringExpandPlaceholders
	add	r4, r4, #0x4
	add	r0, r4, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.L259:
	.align	2, 0
.L258:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar4
	.word	gText_QuestLog_SwitchMon1WithMon2
.Lfe34:
	.size	 LoadEvent_SwitchedPartyOrder,.Lfe34-LoadEvent_SwitchedPartyOrder
	.align	2, 0
	.type	 RecordEvent_UsedItem,function
	.thumb_func
RecordEvent_UsedItem:
	push	{r4, lr}
	add	r2, r0, #0
	add	r4, r1, #0
	mov	r0, #0x4
	add	r1, r2, #0
	bl	RecordEventHeader
	add	r2, r0, #0
	cmp	r2, #0
	bne	.L261	@cond_branch
	mov	r0, #0x0
	b	.L263
.L261:
	ldrh	r0, [r4]
	strh	r0, [r2]
	ldrh	r0, [r4, #0x4]
	strh	r0, [r2, #0x2]
	ldrh	r0, [r4, #0x6]
	strh	r0, [r2, #0x4]
	ldrh	r0, [r4]
	cmp	r0, #0x55
	bne	.L262	@cond_branch
	ldr	r1, .L264
	mov	r0, #0x2
	strb	r0, [r1]
.L262:
	add	r0, r2, #0x6
.L263:
	pop	{r4}
	pop	{r1}
	bx	r1
.L265:
	.align	2, 0
.L264:
	.word	sStepRecordingMode
.Lfe35:
	.size	 RecordEvent_UsedItem,.Lfe35-RecordEvent_UsedItem
	.align	2, 0
	.type	 LoadEvent_UsedItem,function
	.thumb_func
LoadEvent_UsedItem:
	push	{r4, r5, r6, r7, lr}
	add	r1, r0, #0
	mov	r0, #0x4
	bl	LoadEvent
	add	r5, r0, #0
	ldrh	r0, [r5]
	bl	ItemId_GetPocket
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	sub	r0, r0, #0x1
	cmp	r0, #0x4
	bls	.LCB2042
	b	.L267	@long jump
.LCB2042:
	lsl	r0, r0, #0x2
	ldr	r1, .L285
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L286:
	.align	2, 0
.L285:
	.word	.L283
	.align	2, 0
	.align	2, 0
.L283:
	.word	.L270
	.word	.L275
	.word	.L270
	.word	.L276
	.word	.L270
.L270:
	ldr	r4, .L287
	ldrh	r0, [r5]
	bl	ItemId_GetName
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringCopy
	ldrh	r0, [r5]
	cmp	r0, #0x55
	bne	.L271	@cond_branch
	ldr	r0, .L287+0x4
	ldrb	r1, [r5, #0x4]
	bl	GetMapNameGeneric
	ldr	r0, .L287+0x8
	ldr	r1, .L287+0xc
	bl	StringExpandPlaceholders
	b	.L267
.L288:
	.align	2, 0
.L287:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar4
	.word	gText_QuestLog_UsedEscapeRope
.L271:
	ldrh	r1, [r5, #0x2]
	ldr	r0, .L289
	cmp	r1, r0
	beq	.L273	@cond_branch
	add	r0, r1, #0
	ldr	r1, .L289+0x4
	mov	r2, #0x0
	bl	QuestLog_GetSpeciesName
	ldr	r0, .L289+0x8
	ldr	r1, .L289+0xc
	bl	StringExpandPlaceholders
	b	.L267
.L290:
	.align	2, 0
.L289:
	.word	0xffff
	.word	gStringVar2
	.word	gStringVar4
	.word	gText_QuestLog_UsedItemOnMonAtThisLocation
.L273:
	ldr	r0, .L291
	ldr	r1, .L291+0x4
	bl	StringExpandPlaceholders
	b	.L267
.L292:
	.align	2, 0
.L291:
	.word	gStringVar4
	.word	gText_QuestLog_UsedTheItem
.L275:
	ldr	r4, .L293
	ldrh	r0, [r5]
	bl	ItemId_GetName
	add	r1, r0, #0
	add	r0, r4, #0
	bl	StringCopy
	ldr	r0, .L293+0x4
	ldr	r1, .L293+0x8
	bl	StringExpandPlaceholders
	b	.L267
.L294:
	.align	2, 0
.L293:
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_QuestLog_UsedTheKeyItem
.L276:
	ldrh	r0, [r5, #0x2]
	ldr	r1, .L295
	mov	r2, #0x0
	bl	QuestLog_GetSpeciesName
	ldr	r4, .L295+0x4
	ldrh	r0, [r5]
	bl	ItemIdToBattleMoveId
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	mov	r7, #0xd
	mov	r1, r0
	mul	r1, r1, r7
	ldr	r6, .L295+0x8
	add	r1, r1, r6
	add	r0, r4, #0
	bl	StringCopy
	ldrh	r1, [r5, #0x4]
	ldr	r0, .L295+0xc
	cmp	r1, r0
	beq	.L277	@cond_branch
	ldr	r0, .L295+0x10
	mul	r1, r1, r7
	add	r1, r1, r6
	bl	StringCopy
	ldrh	r1, [r5]
	mov	r0, #0xa9
	lsl	r0, r0, #0x1
	cmp	r1, r0
	bls	.L278	@cond_branch
	ldr	r0, .L295+0x14
	ldr	r1, .L295+0x18
	bl	StringExpandPlaceholders
	b	.L267
.L296:
	.align	2, 0
.L295:
	.word	gStringVar1
	.word	gStringVar2
	.word	gMoveNames
	.word	0xffff
	.word	gStringVar3
	.word	gStringVar4
	.word	gText_QuestLog_MonReplacedMoveWithHM
.L278:
	ldr	r0, .L297
	ldr	r1, .L297+0x4
	bl	StringExpandPlaceholders
	b	.L267
.L298:
	.align	2, 0
.L297:
	.word	gStringVar4
	.word	gText_QuestLog_MonReplacedMoveWithTM
.L277:
	ldrh	r1, [r5]
	mov	r0, #0xa9
	lsl	r0, r0, #0x1
	cmp	r1, r0
	bls	.L281	@cond_branch
	ldr	r0, .L299
	ldr	r1, .L299+0x4
	bl	StringExpandPlaceholders
	b	.L267
.L300:
	.align	2, 0
.L299:
	.word	gStringVar4
	.word	gText_QuestLog_MonLearnedMoveFromHM
.L281:
	ldr	r0, .L301
	ldr	r1, .L301+0x4
	bl	StringExpandPlaceholders
.L267:
	add	r0, r5, #0x6
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L302:
	.align	2, 0
.L301:
	.word	gStringVar4
	.word	gText_QuestLog_MonLearnedMoveFromTM
.Lfe36:
	.size	 LoadEvent_UsedItem,.Lfe36-LoadEvent_UsedItem
	.align	2, 0
	.type	 RecordEvent_GiveTakeHeldItem,function
	.thumb_func
RecordEvent_GiveTakeHeldItem:
	push	{r4, lr}
	add	r4, r2, #0
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	RecordEventHeader
	add	r1, r0, #0
	cmp	r1, #0
	beq	.L304	@cond_branch
	ldrh	r0, [r4]
	strh	r0, [r1]
	ldrh	r0, [r4, #0x4]
	strh	r0, [r1, #0x2]
	add	r0, r1, #0x4
	b	.L305
.L304:
	mov	r0, #0x0
.L305:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe37:
	.size	 RecordEvent_GiveTakeHeldItem,.Lfe37-RecordEvent_GiveTakeHeldItem
	.align	2, 0
	.type	 RecordEvent_GaveHeldItemFromPartyMenu,function
	.thumb_func
RecordEvent_GaveHeldItemFromPartyMenu:
	push	{lr}
	add	r3, r0, #0
	add	r2, r1, #0
	mov	r0, #0x5
	add	r1, r3, #0
	bl	RecordEvent_GiveTakeHeldItem
	pop	{r1}
	bx	r1
.Lfe38:
	.size	 RecordEvent_GaveHeldItemFromPartyMenu,.Lfe38-RecordEvent_GaveHeldItemFromPartyMenu
	.align	2, 0
	.type	 LoadEvent_GaveHeldItemFromPartyMenu,function
	.thumb_func
LoadEvent_GaveHeldItemFromPartyMenu:
	push	{r4, r5, lr}
	add	r1, r0, #0
	mov	r0, #0x5
	bl	LoadEvent
	add	r4, r0, #0
	ldrh	r0, [r4, #0x2]
	ldr	r1, .L308
	mov	r2, #0x0
	bl	QuestLog_GetSpeciesName
	ldr	r5, .L308+0x4
	ldrh	r0, [r4]
	bl	ItemId_GetName
	add	r1, r0, #0
	add	r0, r5, #0
	bl	StringCopy
	ldr	r0, .L308+0x8
	ldr	r1, .L308+0xc
	bl	StringExpandPlaceholders
	add	r4, r4, #0x4
	add	r0, r4, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L309:
	.align	2, 0
.L308:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar4
	.word	gText_QuestLog_GaveMonHeldItem
.Lfe39:
	.size	 LoadEvent_GaveHeldItemFromPartyMenu,.Lfe39-LoadEvent_GaveHeldItemFromPartyMenu
	.align	2, 0
	.type	 RecordEvent_GaveHeldItemFromBagMenu,function
	.thumb_func
RecordEvent_GaveHeldItemFromBagMenu:
	push	{lr}
	add	r3, r0, #0
	add	r2, r1, #0
	mov	r0, #0x6
	add	r1, r3, #0
	bl	RecordEvent_GiveTakeHeldItem
	pop	{r1}
	bx	r1
.Lfe40:
	.size	 RecordEvent_GaveHeldItemFromBagMenu,.Lfe40-RecordEvent_GaveHeldItemFromBagMenu
	.align	2, 0
	.type	 LoadEvent_GaveHeldItemFromBagMenu,function
	.thumb_func
LoadEvent_GaveHeldItemFromBagMenu:
	push	{r4, r5, lr}
	add	r1, r0, #0
	mov	r0, #0x6
	bl	LoadEvent
	add	r4, r0, #0
	ldrh	r0, [r4, #0x2]
	ldr	r1, .L312
	mov	r2, #0x0
	bl	QuestLog_GetSpeciesName
	ldr	r5, .L312+0x4
	ldrh	r0, [r4]
	bl	ItemId_GetName
	add	r1, r0, #0
	add	r0, r5, #0
	bl	StringCopy
	ldr	r0, .L312+0x8
	ldr	r1, .L312+0xc
	bl	StringExpandPlaceholders
	add	r4, r4, #0x4
	add	r0, r4, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L313:
	.align	2, 0
.L312:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar4
	.word	gText_QuestLog_GaveMonHeldItem2
.Lfe41:
	.size	 LoadEvent_GaveHeldItemFromBagMenu,.Lfe41-LoadEvent_GaveHeldItemFromBagMenu
	.align	2, 0
	.type	 RecordEvent_GaveHeldItemFromPC,function
	.thumb_func
RecordEvent_GaveHeldItemFromPC:
	push	{lr}
	add	r3, r0, #0
	add	r2, r1, #0
	mov	r0, #0x7
	add	r1, r3, #0
	bl	RecordEvent_GiveTakeHeldItem
	pop	{r1}
	bx	r1
.Lfe42:
	.size	 RecordEvent_GaveHeldItemFromPC,.Lfe42-RecordEvent_GaveHeldItemFromPC
	.align	2, 0
	.type	 LoadEvent_GaveHeldItemFromPC,function
	.thumb_func
LoadEvent_GaveHeldItemFromPC:
	push	{r4, r5, lr}
	add	r1, r0, #0
	mov	r0, #0x7
	bl	LoadEvent
	add	r4, r0, #0
	ldrh	r0, [r4, #0x2]
	ldr	r1, .L316
	mov	r2, #0x0
	bl	QuestLog_GetSpeciesName
	ldr	r5, .L316+0x4
	ldrh	r0, [r4]
	bl	ItemId_GetName
	add	r1, r0, #0
	add	r0, r5, #0
	bl	StringCopy
	ldr	r0, .L316+0x8
	ldr	r1, .L316+0xc
	bl	StringExpandPlaceholders
	add	r4, r4, #0x4
	add	r0, r4, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L317:
	.align	2, 0
.L316:
	.word	gStringVar2
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_QuestLog_GaveMonHeldItemFromPC
.Lfe43:
	.size	 LoadEvent_GaveHeldItemFromPC,.Lfe43-LoadEvent_GaveHeldItemFromPC
	.align	2, 0
	.type	 RecordEvent_TookHeldItem,function
	.thumb_func
RecordEvent_TookHeldItem:
	push	{lr}
	add	r3, r0, #0
	add	r2, r1, #0
	mov	r0, #0x8
	add	r1, r3, #0
	bl	RecordEvent_GiveTakeHeldItem
	pop	{r1}
	bx	r1
.Lfe44:
	.size	 RecordEvent_TookHeldItem,.Lfe44-RecordEvent_TookHeldItem
	.align	2, 0
	.type	 LoadEvent_TookHeldItem,function
	.thumb_func
LoadEvent_TookHeldItem:
	push	{r4, r5, lr}
	add	r1, r0, #0
	mov	r0, #0x8
	bl	LoadEvent
	add	r4, r0, #0
	ldrh	r0, [r4, #0x2]
	ldr	r1, .L320
	mov	r2, #0x0
	bl	QuestLog_GetSpeciesName
	ldr	r5, .L320+0x4
	ldrh	r0, [r4]
	bl	ItemId_GetName
	add	r1, r0, #0
	add	r0, r5, #0
	bl	StringCopy
	ldr	r0, .L320+0x8
	ldr	r1, .L320+0xc
	bl	StringExpandPlaceholders
	add	r4, r4, #0x4
	add	r0, r4, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L321:
	.align	2, 0
.L320:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar4
	.word	gText_QuestLog_TookHeldItemFromMon
.Lfe45:
	.size	 LoadEvent_TookHeldItem,.Lfe45-LoadEvent_TookHeldItem
	.align	2, 0
	.type	 RecordEvent_SwappedHeldItem,function
	.thumb_func
RecordEvent_SwappedHeldItem:
	push	{r4, lr}
	add	r4, r2, #0
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	RecordEventHeader
	add	r1, r0, #0
	cmp	r1, #0
	beq	.L323	@cond_branch
	ldrh	r0, [r4]
	strh	r0, [r1]
	ldrh	r0, [r4, #0x2]
	strh	r0, [r1, #0x2]
	ldrh	r0, [r4, #0x4]
	strh	r0, [r1, #0x4]
	add	r0, r1, #0x6
	b	.L324
.L323:
	mov	r0, #0x0
.L324:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe46:
	.size	 RecordEvent_SwappedHeldItem,.Lfe46-RecordEvent_SwappedHeldItem
	.align	2, 0
	.type	 RecordEvent_SwappedHeldItemFromBag,function
	.thumb_func
RecordEvent_SwappedHeldItemFromBag:
	push	{lr}
	add	r3, r0, #0
	add	r2, r1, #0
	mov	r0, #0x9
	add	r1, r3, #0
	bl	RecordEvent_SwappedHeldItem
	pop	{r1}
	bx	r1
.Lfe47:
	.size	 RecordEvent_SwappedHeldItemFromBag,.Lfe47-RecordEvent_SwappedHeldItemFromBag
	.align	2, 0
	.type	 LoadEvent_SwappedHeldItem,function
	.thumb_func
LoadEvent_SwappedHeldItem:
	push	{r4, r5, lr}
	add	r1, r0, #0
	mov	r0, #0x9
	bl	LoadEvent
	add	r4, r0, #0
	ldrh	r0, [r4, #0x4]
	ldr	r1, .L327
	mov	r2, #0x0
	bl	QuestLog_GetSpeciesName
	ldr	r5, .L327+0x4
	ldrh	r0, [r4]
	bl	ItemId_GetName
	add	r1, r0, #0
	add	r0, r5, #0
	bl	StringCopy
	ldr	r5, .L327+0x8
	ldrh	r0, [r4, #0x2]
	bl	ItemId_GetName
	add	r1, r0, #0
	add	r0, r5, #0
	bl	StringCopy
	ldr	r0, .L327+0xc
	ldr	r1, .L327+0x10
	bl	StringExpandPlaceholders
	add	r4, r4, #0x6
	add	r0, r4, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L328:
	.align	2, 0
.L327:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.word	gStringVar4
	.word	gText_QuestLog_SwappedHeldItemsOnMon
.Lfe48:
	.size	 LoadEvent_SwappedHeldItem,.Lfe48-LoadEvent_SwappedHeldItem
	.align	2, 0
	.type	 RecordEvent_SwappedHeldItemFromPC,function
	.thumb_func
RecordEvent_SwappedHeldItemFromPC:
	push	{lr}
	add	r3, r0, #0
	add	r2, r1, #0
	mov	r0, #0xa
	add	r1, r3, #0
	bl	RecordEvent_SwappedHeldItem
	pop	{r1}
	bx	r1
.Lfe49:
	.size	 RecordEvent_SwappedHeldItemFromPC,.Lfe49-RecordEvent_SwappedHeldItemFromPC
	.align	2, 0
	.type	 LoadEvent_SwappedHeldItemFromPC,function
	.thumb_func
LoadEvent_SwappedHeldItemFromPC:
	push	{r4, r5, lr}
	add	r1, r0, #0
	mov	r0, #0xa
	bl	LoadEvent
	add	r4, r0, #0
	ldrh	r0, [r4, #0x4]
	ldr	r1, .L331
	mov	r2, #0x0
	bl	QuestLog_GetSpeciesName
	ldr	r5, .L331+0x4
	ldrh	r0, [r4]
	bl	ItemId_GetName
	add	r1, r0, #0
	add	r0, r5, #0
	bl	StringCopy
	ldr	r5, .L331+0x8
	ldrh	r0, [r4, #0x2]
	bl	ItemId_GetName
	add	r1, r0, #0
	add	r0, r5, #0
	bl	StringCopy
	ldr	r0, .L331+0xc
	ldr	r1, .L331+0x10
	bl	StringExpandPlaceholders
	add	r4, r4, #0x6
	add	r0, r4, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L332:
	.align	2, 0
.L331:
	.word	gStringVar2
	.word	gStringVar3
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_QuestLog_SwappedHeldItemFromPC
.Lfe50:
	.size	 LoadEvent_SwappedHeldItemFromPC,.Lfe50-LoadEvent_SwappedHeldItemFromPC
	.align	2, 0
	.type	 RecordEvent_UsedPkmnCenter,function
	.thumb_func
RecordEvent_UsedPkmnCenter:
	push	{r4, lr}
	add	r4, r0, #0
	add	r2, r4, #0
	ldr	r1, .L337
	ldrb	r0, [r1]
	cmp	r0, #0xb
	bne	.L334	@cond_branch
	ldrb	r0, [r1, #0x1]
	cmp	r0, #0
	beq	.L334	@cond_branch
	add	r0, r4, #0
	b	.L336
.L338:
	.align	2, 0
.L337:
	.word	gQuestLogRepeatEventTracker
.L334:
	ldr	r0, .L339
	ldrb	r1, [r0, #0xb]
	add	r0, r2, #0
	bl	QL_IsRoomToSaveEvent
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L335	@cond_branch
	mov	r0, #0xb
	strh	r0, [r4]
	ldr	r0, .L339+0x4
	ldrh	r0, [r0]
	strh	r0, [r4, #0x2]
	add	r0, r4, #0x4
	b	.L336
.L340:
	.align	2, 0
.L339:
	.word	sQuestLogEventCmdSizes
	.word	gQuestLogCurActionIdx
.L335:
	mov	r0, #0x0
.L336:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe51:
	.size	 RecordEvent_UsedPkmnCenter,.Lfe51-RecordEvent_UsedPkmnCenter
	.align	2, 0
	.type	 LoadEvent_UsedPkmnCenter,function
	.thumb_func
LoadEvent_UsedPkmnCenter:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L342
	ldr	r1, .L342+0x4
	bl	StringExpandPlaceholders
	add	r4, r4, #0x4
	add	r0, r4, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.L343:
	.align	2, 0
.L342:
	.word	gStringVar4
	.word	gText_QuestLog_MonsWereFullyRestoredAtCenter
.Lfe52:
	.size	 LoadEvent_UsedPkmnCenter,.Lfe52-LoadEvent_UsedPkmnCenter
	.align	2, 0
	.type	 RecordEvent_LinkTraded,function
	.thumb_func
RecordEvent_LinkTraded:
	push	{r4, lr}
	add	r4, r0, #0
	add	r4, r4, #0x8
	mov	r2, #0xc
	strh	r2, [r0]
	ldr	r2, .L345
	ldrh	r2, [r2]
	strh	r2, [r0, #0x2]
	ldrh	r2, [r1]
	strh	r2, [r0, #0x4]
	ldrh	r2, [r1, #0x2]
	strh	r2, [r0, #0x6]
	add	r1, r1, #0x4
	add	r0, r4, #0
	mov	r2, #0x7
	bl	memcpy
	add	r4, r4, #0x8
	add	r0, r4, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.L346:
	.align	2, 0
.L345:
	.word	gQuestLogCurActionIdx
.Lfe53:
	.size	 RecordEvent_LinkTraded,.Lfe53-RecordEvent_LinkTraded
	.align	2, 0
	.type	 LoadEvent_LinkTraded,function
	.thumb_func
LoadEvent_LinkTraded:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	add	r6, r5, #0
	add	r6, r6, #0x8
	ldr	r4, .L348
	add	r0, r4, #0
	mov	r1, #0xff
	mov	r2, #0x8
	bl	memset
	add	r0, r4, #0
	add	r1, r6, #0
	mov	r2, #0x7
	bl	memcpy
	add	r0, r4, #0
	bl	TranslateLinkPartnersName
	ldrh	r0, [r5, #0x6]
	ldr	r1, .L348+0x4
	mov	r2, #0x0
	bl	QuestLog_GetSpeciesName
	ldrh	r0, [r5, #0x4]
	ldr	r1, .L348+0x8
	mov	r2, #0x0
	bl	QuestLog_GetSpeciesName
	ldr	r0, .L348+0xc
	ldr	r1, .L348+0x10
	bl	StringExpandPlaceholders
	add	r6, r6, #0x8
	add	r0, r6, #0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L349:
	.align	2, 0
.L348:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.word	gStringVar4
	.word	gText_QuestLog_TradedMon1ForPersonsMon2
.Lfe54:
	.size	 LoadEvent_LinkTraded,.Lfe54-LoadEvent_LinkTraded
	.align	2, 0
	.type	 RecordEvent_LinkBattledSingle,function
	.thumb_func
RecordEvent_LinkBattledSingle:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r0, #0xd
	strh	r0, [r4]
	ldr	r0, .L351
	ldrh	r0, [r0]
	strh	r0, [r4, #0x2]
	ldrb	r0, [r1]
	strb	r0, [r4, #0x4]
	add	r0, r4, #0x5
	add	r1, r1, #0x1
	mov	r2, #0x7
	bl	memcpy
	add	r4, r4, #0xc
	add	r0, r4, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.L352:
	.align	2, 0
.L351:
	.word	gQuestLogCurActionIdx
.Lfe55:
	.size	 RecordEvent_LinkBattledSingle,.Lfe55-RecordEvent_LinkBattledSingle
	.align	2, 0
	.type	 LoadEvent_LinkBattledSingle,function
	.thumb_func
LoadEvent_LinkBattledSingle:
	push	{r4, r5, lr}
	add	r5, r0, #0
	bl	DynamicPlaceholderTextUtil_Reset
	ldr	r4, .L354
	add	r0, r4, #0
	mov	r1, #0xff
	mov	r2, #0x8
	bl	memset
	add	r1, r5, #0x5
	add	r0, r4, #0
	mov	r2, #0x7
	bl	memcpy
	add	r0, r4, #0
	bl	TranslateLinkPartnersName
	mov	r0, #0x0
	add	r1, r4, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldr	r1, .L354+0x4
	ldrb	r0, [r5, #0x4]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	mov	r0, #0x1
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldr	r0, .L354+0x8
	ldr	r1, .L354+0xc
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	add	r5, r5, #0xc
	add	r0, r5, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L355:
	.align	2, 0
.L354:
	.word	gStringVar1
	.word	sBattleOutcomeTexts
	.word	gStringVar4
	.word	gText_QuestLog_SingleBattleWithPersonResultedInOutcome
.Lfe56:
	.size	 LoadEvent_LinkBattledSingle,.Lfe56-LoadEvent_LinkBattledSingle
	.align	2, 0
	.type	 RecordEvent_LinkBattledDouble,function
	.thumb_func
RecordEvent_LinkBattledDouble:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r0, #0xe
	strh	r0, [r4]
	ldr	r0, .L357
	ldrh	r0, [r0]
	strh	r0, [r4, #0x2]
	ldrb	r0, [r1]
	strb	r0, [r4, #0x4]
	add	r0, r4, #0x5
	add	r1, r1, #0x1
	mov	r2, #0x7
	bl	memcpy
	add	r4, r4, #0xc
	add	r0, r4, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.L358:
	.align	2, 0
.L357:
	.word	gQuestLogCurActionIdx
.Lfe57:
	.size	 RecordEvent_LinkBattledDouble,.Lfe57-RecordEvent_LinkBattledDouble
	.align	2, 0
	.type	 LoadEvent_LinkBattledDouble,function
	.thumb_func
LoadEvent_LinkBattledDouble:
	push	{r4, r5, lr}
	add	r5, r0, #0
	bl	DynamicPlaceholderTextUtil_Reset
	ldr	r4, .L360
	add	r0, r4, #0
	mov	r1, #0xff
	mov	r2, #0x8
	bl	memset
	add	r1, r5, #0x5
	add	r0, r4, #0
	mov	r2, #0x7
	bl	memcpy
	add	r0, r4, #0
	bl	TranslateLinkPartnersName
	mov	r0, #0x0
	add	r1, r4, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldr	r1, .L360+0x4
	ldrb	r0, [r5, #0x4]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	mov	r0, #0x1
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldr	r0, .L360+0x8
	ldr	r1, .L360+0xc
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	add	r5, r5, #0xc
	add	r0, r5, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L361:
	.align	2, 0
.L360:
	.word	gStringVar1
	.word	sBattleOutcomeTexts
	.word	gStringVar4
	.word	gText_QuestLog_DoubleBattleWithPersonResultedInOutcome
.Lfe58:
	.size	 LoadEvent_LinkBattledDouble,.Lfe58-LoadEvent_LinkBattledDouble
	.align	2, 0
	.type	 RecordEvent_LinkBattledMulti,function
	.thumb_func
RecordEvent_LinkBattledMulti:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	mov	r0, #0xf
	strh	r0, [r4]
	ldr	r0, .L363
	ldrh	r0, [r0]
	strh	r0, [r4, #0x2]
	ldrb	r0, [r5]
	strb	r0, [r4, #0x4]
	add	r0, r4, #0x5
	add	r1, r5, #0x1
	mov	r2, #0x7
	bl	memcpy
	add	r0, r4, #0
	add	r0, r0, #0xc
	add	r1, r5, #0
	add	r1, r1, #0x8
	mov	r2, #0x7
	bl	memcpy
	add	r0, r4, #0
	add	r0, r0, #0x13
	add	r5, r5, #0xf
	add	r1, r5, #0
	mov	r2, #0x7
	bl	memcpy
	add	r4, r4, #0x1a
	add	r0, r4, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L364:
	.align	2, 0
.L363:
	.word	gQuestLogCurActionIdx
.Lfe59:
	.size	 RecordEvent_LinkBattledMulti,.Lfe59-RecordEvent_LinkBattledMulti
	.align	2, 0
	.type	 LoadEvent_LinkBattledMulti,function
	.thumb_func
LoadEvent_LinkBattledMulti:
	push	{r4, r5, r6, lr}
	mov	r6, r8
	push	{r6}
	add	r4, r0, #0
	bl	DynamicPlaceholderTextUtil_Reset
	ldr	r0, .L366
	mov	r8, r0
	mov	r1, #0xff
	mov	r2, #0x8
	bl	memset
	ldr	r6, .L366+0x4
	add	r0, r6, #0
	mov	r1, #0xff
	mov	r2, #0x8
	bl	memset
	ldr	r5, .L366+0x8
	add	r0, r5, #0
	mov	r1, #0xff
	mov	r2, #0x8
	bl	memset
	add	r1, r4, #0x5
	mov	r0, r8
	bl	StringCopy_PlayerName
	add	r1, r4, #0
	add	r1, r1, #0xc
	add	r0, r6, #0
	bl	StringCopy_PlayerName
	add	r1, r4, #0
	add	r1, r1, #0x13
	add	r0, r5, #0
	bl	StringCopy_PlayerName
	mov	r0, r8
	bl	TranslateLinkPartnersName
	add	r0, r6, #0
	bl	TranslateLinkPartnersName
	add	r0, r5, #0
	bl	TranslateLinkPartnersName
	ldr	r0, .L366+0xc
	ldr	r1, [r0]
	mov	r0, #0x0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	mov	r0, #0x1
	mov	r1, r8
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	mov	r0, #0x2
	add	r1, r6, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	mov	r0, #0x3
	add	r1, r5, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldr	r1, .L366+0x10
	ldrb	r0, [r4, #0x4]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	mov	r0, #0x4
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldr	r0, .L366+0x14
	ldr	r1, .L366+0x18
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	add	r4, r4, #0x1a
	add	r0, r4, #0
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L367:
	.align	2, 0
.L366:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.word	gSaveBlock2Ptr
	.word	sBattleOutcomeTexts
	.word	gStringVar4
	.word	gText_QuestLog_MultiBattleWithPeopleResultedInOutcome
.Lfe60:
	.size	 LoadEvent_LinkBattledMulti,.Lfe60-LoadEvent_LinkBattledMulti
	.align	2, 0
	.type	 RecordEvent_UsedUnionRoom,function
	.thumb_func
RecordEvent_UsedUnionRoom:
	mov	r1, #0x10
	strh	r1, [r0]
	ldr	r1, .L369
	ldrh	r1, [r1]
	strh	r1, [r0, #0x2]
	add	r0, r0, #0x4
	bx	lr
.L370:
	.align	2, 0
.L369:
	.word	gQuestLogCurActionIdx
.Lfe61:
	.size	 RecordEvent_UsedUnionRoom,.Lfe61-RecordEvent_UsedUnionRoom
	.align	2, 0
	.type	 LoadEvent_UsedUnionRoom,function
	.thumb_func
LoadEvent_UsedUnionRoom:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L372
	ldr	r1, .L372+0x4
	bl	StringExpandPlaceholders
	add	r4, r4, #0x4
	add	r0, r4, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.L373:
	.align	2, 0
.L372:
	.word	gStringVar4
	.word	gText_QuestLog_MingledInUnionRoom
.Lfe62:
	.size	 LoadEvent_UsedUnionRoom,.Lfe62-LoadEvent_UsedUnionRoom
	.align	2, 0
	.type	 RecordEvent_UsedUnionRoomChat,function
	.thumb_func
RecordEvent_UsedUnionRoomChat:
	mov	r1, #0x11
	strh	r1, [r0]
	ldr	r1, .L375
	ldrh	r1, [r1]
	strh	r1, [r0, #0x2]
	add	r0, r0, #0x4
	bx	lr
.L376:
	.align	2, 0
.L375:
	.word	gQuestLogCurActionIdx
.Lfe63:
	.size	 RecordEvent_UsedUnionRoomChat,.Lfe63-RecordEvent_UsedUnionRoomChat
	.align	2, 0
	.type	 LoadEvent_UsedUnionRoomChat,function
	.thumb_func
LoadEvent_UsedUnionRoomChat:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r0, .L378
	ldr	r1, .L378+0x4
	bl	StringExpandPlaceholders
	add	r4, r4, #0x4
	add	r0, r4, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.L379:
	.align	2, 0
.L378:
	.word	gStringVar4
	.word	gText_QuestLog_ChattedWithManyTrainers
.Lfe64:
	.size	 LoadEvent_UsedUnionRoomChat,.Lfe64-LoadEvent_UsedUnionRoomChat
	.align	2, 0
	.type	 RecordEvent_LinkTradedUnionRoom,function
	.thumb_func
RecordEvent_LinkTradedUnionRoom:
	push	{r4, lr}
	add	r4, r0, #0
	add	r4, r4, #0x8
	mov	r2, #0x12
	strh	r2, [r0]
	ldr	r2, .L381
	ldrh	r2, [r2]
	strh	r2, [r0, #0x2]
	ldrh	r2, [r1]
	strh	r2, [r0, #0x4]
	ldrh	r2, [r1, #0x2]
	strh	r2, [r0, #0x6]
	add	r1, r1, #0x4
	add	r0, r4, #0
	mov	r2, #0x7
	bl	memcpy
	add	r4, r4, #0x8
	add	r0, r4, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.L382:
	.align	2, 0
.L381:
	.word	gQuestLogCurActionIdx
.Lfe65:
	.size	 RecordEvent_LinkTradedUnionRoom,.Lfe65-RecordEvent_LinkTradedUnionRoom
	.align	2, 0
	.type	 LoadEvent_LinkTradedUnionRoom,function
	.thumb_func
LoadEvent_LinkTradedUnionRoom:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	add	r6, r5, #0
	add	r6, r6, #0x8
	ldr	r4, .L384
	add	r0, r4, #0
	mov	r1, #0xff
	mov	r2, #0x8
	bl	memset
	add	r0, r4, #0
	add	r1, r6, #0
	mov	r2, #0x7
	bl	memcpy
	add	r0, r4, #0
	bl	TranslateLinkPartnersName
	ldrh	r0, [r5, #0x6]
	ldr	r1, .L384+0x4
	mov	r2, #0x0
	bl	QuestLog_GetSpeciesName
	ldrh	r0, [r5, #0x4]
	ldr	r1, .L384+0x8
	mov	r2, #0x0
	bl	QuestLog_GetSpeciesName
	ldr	r0, .L384+0xc
	ldr	r1, .L384+0x10
	bl	StringExpandPlaceholders
	add	r6, r6, #0x8
	add	r0, r6, #0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L385:
	.align	2, 0
.L384:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.word	gStringVar4
	.word	gText_QuestLog_TradedMon1ForTrainersMon2
.Lfe66:
	.size	 LoadEvent_LinkTradedUnionRoom,.Lfe66-LoadEvent_LinkTradedUnionRoom
	.align	2, 0
	.type	 RecordEvent_LinkBattledUnionRoom,function
	.thumb_func
RecordEvent_LinkBattledUnionRoom:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r0, #0x13
	strh	r0, [r4]
	ldr	r0, .L387
	ldrh	r0, [r0]
	strh	r0, [r4, #0x2]
	ldrb	r0, [r1]
	strb	r0, [r4, #0x4]
	add	r0, r4, #0x5
	add	r1, r1, #0x1
	mov	r2, #0x7
	bl	memcpy
	add	r4, r4, #0xc
	add	r0, r4, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.L388:
	.align	2, 0
.L387:
	.word	gQuestLogCurActionIdx
.Lfe67:
	.size	 RecordEvent_LinkBattledUnionRoom,.Lfe67-RecordEvent_LinkBattledUnionRoom
	.align	2, 0
	.type	 LoadEvent_LinkBattledUnionRoom,function
	.thumb_func
LoadEvent_LinkBattledUnionRoom:
	push	{r4, r5, lr}
	add	r5, r0, #0
	ldr	r4, .L390
	add	r0, r4, #0
	mov	r1, #0xff
	mov	r2, #0x8
	bl	memset
	add	r1, r5, #0x5
	add	r0, r4, #0
	mov	r2, #0x7
	bl	memcpy
	add	r0, r4, #0
	bl	TranslateLinkPartnersName
	ldr	r0, .L390+0x4
	ldr	r2, .L390+0x8
	ldrb	r1, [r5, #0x4]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r0, .L390+0xc
	ldr	r1, .L390+0x10
	bl	StringExpandPlaceholders
	add	r5, r5, #0xc
	add	r0, r5, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L391:
	.align	2, 0
.L390:
	.word	gStringVar1
	.word	gStringVar2
	.word	sBattleOutcomeTexts
	.word	gStringVar4
	.word	gText_QuestLog_BattledTrainerEndedInOutcome
.Lfe68:
	.size	 LoadEvent_LinkBattledUnionRoom,.Lfe68-LoadEvent_LinkBattledUnionRoom
	.align	2, 0
	.type	 RecordEvent_SwitchedMonsBetweenBoxes,function
	.thumb_func
RecordEvent_SwitchedMonsBetweenBoxes:
	push	{r4, lr}
	add	r2, r0, #0
	add	r4, r1, #0
	mov	r0, #0x14
	add	r1, r2, #0
	bl	RecordEventHeader
	add	r2, r0, #0
	cmp	r2, #0
	beq	.L393	@cond_branch
	ldrh	r0, [r4]
	strh	r0, [r2]
	ldrh	r0, [r4, #0x2]
	strh	r0, [r2, #0x2]
	ldrb	r0, [r4, #0x4]
	strb	r0, [r2, #0x4]
	ldrb	r0, [r4, #0x5]
	strb	r0, [r2, #0x5]
	add	r0, r2, #0x6
	b	.L394
.L393:
	mov	r0, #0x0
.L394:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe69:
	.size	 RecordEvent_SwitchedMonsBetweenBoxes,.Lfe69-RecordEvent_SwitchedMonsBetweenBoxes
	.align	2, 0
	.type	 LoadEvent_SwitchedMonsBetweenBoxes,function
	.thumb_func
LoadEvent_SwitchedMonsBetweenBoxes:
	push	{r4, r5, lr}
	add	r1, r0, #0
	mov	r0, #0x14
	bl	LoadEvent
	add	r4, r0, #0
	add	r5, r4, #0x4
	bl	DynamicPlaceholderTextUtil_Reset
	ldrb	r0, [r4, #0x4]
	bl	GetBoxNamePtr
	add	r1, r0, #0
	mov	r0, #0x0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldrh	r0, [r4]
	mov	r1, #0x0
	mov	r2, #0x1
	bl	QuestLog_GetSpeciesName
	ldrb	r0, [r5, #0x1]
	bl	GetBoxNamePtr
	add	r1, r0, #0
	mov	r0, #0x2
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldrh	r0, [r4, #0x2]
	mov	r1, #0x0
	mov	r2, #0x3
	bl	QuestLog_GetSpeciesName
	ldr	r0, .L396
	ldr	r1, .L396+0x4
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	add	r4, r4, #0x6
	add	r0, r4, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L397:
	.align	2, 0
.L396:
	.word	gStringVar4
	.word	gText_QuestLog_SwitchedMonsBetweenBoxes
.Lfe70:
	.size	 LoadEvent_SwitchedMonsBetweenBoxes,.Lfe70-LoadEvent_SwitchedMonsBetweenBoxes
	.align	2, 0
	.type	 RecordEvent_SwitchedMonsWithinBox,function
	.thumb_func
RecordEvent_SwitchedMonsWithinBox:
	push	{r4, lr}
	add	r2, r0, #0
	add	r4, r1, #0
	mov	r0, #0x15
	add	r1, r2, #0
	bl	RecordEventHeader
	add	r2, r0, #0
	cmp	r2, #0
	beq	.L399	@cond_branch
	ldrh	r0, [r4]
	strh	r0, [r2]
	ldrh	r0, [r4, #0x2]
	strh	r0, [r2, #0x2]
	ldrb	r0, [r4, #0x4]
	strb	r0, [r2, #0x4]
	add	r0, r2, #0x6
	b	.L400
.L399:
	mov	r0, #0x0
.L400:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe71:
	.size	 RecordEvent_SwitchedMonsWithinBox,.Lfe71-RecordEvent_SwitchedMonsWithinBox
	.align	2, 0
	.type	 LoadEvent_SwitchedMonsWithinBox,function
	.thumb_func
LoadEvent_SwitchedMonsWithinBox:
	push	{r4, lr}
	add	r1, r0, #0
	mov	r0, #0x15
	bl	LoadEvent
	add	r4, r0, #0
	bl	DynamicPlaceholderTextUtil_Reset
	ldrb	r0, [r4, #0x4]
	bl	GetBoxNamePtr
	add	r1, r0, #0
	mov	r0, #0x0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldrh	r0, [r4]
	mov	r1, #0x0
	mov	r2, #0x1
	bl	QuestLog_GetSpeciesName
	ldrh	r0, [r4, #0x2]
	mov	r1, #0x0
	mov	r2, #0x2
	bl	QuestLog_GetSpeciesName
	ldr	r0, .L402
	ldr	r1, .L402+0x4
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	add	r4, r4, #0x6
	add	r0, r4, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.L403:
	.align	2, 0
.L402:
	.word	gStringVar4
	.word	gText_QuestLog_SwitchedMonsWithinBox
.Lfe72:
	.size	 LoadEvent_SwitchedMonsWithinBox,.Lfe72-LoadEvent_SwitchedMonsWithinBox
	.align	2, 0
	.type	 RecordEvent_SwitchedPartyMonForPCMon,function
	.thumb_func
RecordEvent_SwitchedPartyMonForPCMon:
	push	{r4, lr}
	add	r2, r0, #0
	add	r4, r1, #0
	mov	r0, #0x16
	add	r1, r2, #0
	bl	RecordEventHeader
	add	r2, r0, #0
	cmp	r2, #0
	bne	.L405	@cond_branch
	mov	r0, #0x0
	b	.L408
.L405:
	add	r1, r2, #0x4
	ldrb	r0, [r4, #0x4]
	cmp	r0, #0xe
	bne	.L406	@cond_branch
	ldrh	r0, [r4, #0x2]
	strh	r0, [r2]
	ldrh	r0, [r4]
	strh	r0, [r2, #0x2]
	ldrb	r0, [r4, #0x5]
	b	.L409
.L406:
	ldrh	r0, [r4]
	strh	r0, [r2]
	ldrh	r0, [r4, #0x2]
	strh	r0, [r2, #0x2]
	ldrb	r0, [r4, #0x4]
.L409:
	strb	r0, [r2, #0x4]
	add	r0, r1, #0x2
.L408:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe73:
	.size	 RecordEvent_SwitchedPartyMonForPCMon,.Lfe73-RecordEvent_SwitchedPartyMonForPCMon
	.align	2, 0
	.type	 LoadEvent_SwitchedPartyMonForPCMon,function
	.thumb_func
LoadEvent_SwitchedPartyMonForPCMon:
	push	{r4, lr}
	add	r1, r0, #0
	mov	r0, #0x16
	bl	LoadEvent
	add	r4, r0, #0
	bl	DynamicPlaceholderTextUtil_Reset
	ldrb	r0, [r4, #0x4]
	bl	GetBoxNamePtr
	add	r1, r0, #0
	mov	r0, #0x0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldrh	r0, [r4]
	mov	r1, #0x0
	mov	r2, #0x1
	bl	QuestLog_GetSpeciesName
	ldrh	r0, [r4, #0x2]
	mov	r1, #0x0
	mov	r2, #0x2
	bl	QuestLog_GetSpeciesName
	ldr	r0, .L411
	ldr	r1, .L411+0x4
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	add	r4, r4, #0x6
	add	r0, r4, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.L412:
	.align	2, 0
.L411:
	.word	gStringVar4
	.word	gText_QuestLog_SwitchedPartyMonForPCMon
.Lfe74:
	.size	 LoadEvent_SwitchedPartyMonForPCMon,.Lfe74-LoadEvent_SwitchedPartyMonForPCMon
	.align	2, 0
	.type	 RecordEvent_MovedMonBetweenBoxes,function
	.thumb_func
RecordEvent_MovedMonBetweenBoxes:
	push	{r4, lr}
	add	r2, r0, #0
	add	r4, r1, #0
	mov	r0, #0x17
	add	r1, r2, #0
	bl	RecordEventHeader
	add	r2, r0, #0
	cmp	r2, #0
	beq	.L414	@cond_branch
	ldrh	r0, [r4]
	strh	r0, [r2]
	add	r0, r2, #0x2
	ldrb	r1, [r4, #0x4]
	strb	r1, [r2, #0x2]
	ldrb	r1, [r4, #0x5]
	strb	r1, [r0, #0x1]
	add	r0, r0, #0x2
	b	.L415
.L414:
	mov	r0, #0x0
.L415:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe75:
	.size	 RecordEvent_MovedMonBetweenBoxes,.Lfe75-RecordEvent_MovedMonBetweenBoxes
	.align	2, 0
	.type	 LoadEvent_MovedMonBetweenBoxes,function
	.thumb_func
LoadEvent_MovedMonBetweenBoxes:
	push	{r4, r5, lr}
	add	r1, r0, #0
	mov	r0, #0x17
	bl	LoadEvent
	add	r4, r0, #0
	add	r5, r4, #0x2
	bl	DynamicPlaceholderTextUtil_Reset
	ldrb	r0, [r4, #0x2]
	bl	GetBoxNamePtr
	add	r1, r0, #0
	mov	r0, #0x0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldrh	r0, [r4]
	mov	r1, #0x0
	mov	r2, #0x1
	bl	QuestLog_GetSpeciesName
	ldrb	r0, [r5, #0x1]
	bl	GetBoxNamePtr
	add	r1, r0, #0
	mov	r0, #0x2
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldr	r0, .L417
	ldr	r1, .L417+0x4
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	add	r5, r5, #0x2
	add	r0, r5, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L418:
	.align	2, 0
.L417:
	.word	gStringVar4
	.word	gText_QuestLog_MovedMonToNewBox
.Lfe76:
	.size	 LoadEvent_MovedMonBetweenBoxes,.Lfe76-LoadEvent_MovedMonBetweenBoxes
	.align	2, 0
	.type	 RecordEvent_MovedMonWithinBox,function
	.thumb_func
RecordEvent_MovedMonWithinBox:
	push	{r4, lr}
	add	r2, r0, #0
	add	r4, r1, #0
	mov	r0, #0x18
	add	r1, r2, #0
	bl	RecordEventHeader
	add	r2, r0, #0
	cmp	r2, #0
	beq	.L420	@cond_branch
	ldrh	r0, [r4]
	strh	r0, [r2]
	ldrb	r0, [r4, #0x4]
	strb	r0, [r2, #0x2]
	add	r0, r2, #0x4
	b	.L421
.L420:
	mov	r0, #0x0
.L421:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe77:
	.size	 RecordEvent_MovedMonWithinBox,.Lfe77-RecordEvent_MovedMonWithinBox
	.align	2, 0
	.type	 LoadEvent_MovedMonWithinBox,function
	.thumb_func
LoadEvent_MovedMonWithinBox:
	push	{r4, r5, lr}
	add	r1, r0, #0
	mov	r0, #0x18
	bl	LoadEvent
	add	r4, r0, #0
	add	r5, r4, #0x2
	bl	DynamicPlaceholderTextUtil_Reset
	ldrb	r0, [r4, #0x2]
	bl	GetBoxNamePtr
	add	r1, r0, #0
	mov	r0, #0x0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldrh	r0, [r4]
	mov	r1, #0x0
	mov	r2, #0x1
	bl	QuestLog_GetSpeciesName
	ldr	r0, .L423
	ldr	r1, .L423+0x4
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	add	r5, r5, #0x2
	add	r0, r5, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L424:
	.align	2, 0
.L423:
	.word	gStringVar4
	.word	gText_QuestLog_MovedMonWithinBox
.Lfe78:
	.size	 LoadEvent_MovedMonWithinBox,.Lfe78-LoadEvent_MovedMonWithinBox
	.align	2, 0
	.type	 RecordEvent_WithdrewMonFromPC,function
	.thumb_func
RecordEvent_WithdrewMonFromPC:
	push	{r4, lr}
	add	r2, r0, #0
	add	r4, r1, #0
	mov	r0, #0x19
	add	r1, r2, #0
	bl	RecordEventHeader
	add	r2, r0, #0
	cmp	r2, #0
	beq	.L426	@cond_branch
	ldrh	r0, [r4]
	strh	r0, [r2]
	ldrb	r0, [r4, #0x4]
	strb	r0, [r2, #0x2]
	add	r0, r2, #0x4
	b	.L427
.L426:
	mov	r0, #0x0
.L427:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe79:
	.size	 RecordEvent_WithdrewMonFromPC,.Lfe79-RecordEvent_WithdrewMonFromPC
	.align	2, 0
	.type	 LoadEvent_WithdrewMonFromPC,function
	.thumb_func
LoadEvent_WithdrewMonFromPC:
	push	{r4, r5, lr}
	add	r1, r0, #0
	mov	r0, #0x19
	bl	LoadEvent
	add	r4, r0, #0
	add	r5, r4, #0x2
	bl	DynamicPlaceholderTextUtil_Reset
	ldrb	r0, [r4, #0x2]
	bl	GetBoxNamePtr
	add	r1, r0, #0
	mov	r0, #0x0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldrh	r0, [r4]
	mov	r1, #0x0
	mov	r2, #0x1
	bl	QuestLog_GetSpeciesName
	ldr	r0, .L429
	ldr	r1, .L429+0x4
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	add	r5, r5, #0x2
	add	r0, r5, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L430:
	.align	2, 0
.L429:
	.word	gStringVar4
	.word	gText_QuestLog_WithdrewMonFromPC
.Lfe80:
	.size	 LoadEvent_WithdrewMonFromPC,.Lfe80-LoadEvent_WithdrewMonFromPC
	.align	2, 0
	.type	 RecordEvent_DepositedMonInPC,function
	.thumb_func
RecordEvent_DepositedMonInPC:
	push	{r4, lr}
	add	r2, r0, #0
	add	r4, r1, #0
	mov	r0, #0x1a
	add	r1, r2, #0
	bl	RecordEventHeader
	add	r2, r0, #0
	cmp	r2, #0
	beq	.L432	@cond_branch
	ldrh	r0, [r4]
	strh	r0, [r2]
	ldrb	r0, [r4, #0x4]
	strb	r0, [r2, #0x2]
	add	r0, r2, #0x4
	b	.L433
.L432:
	mov	r0, #0x0
.L433:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe81:
	.size	 RecordEvent_DepositedMonInPC,.Lfe81-RecordEvent_DepositedMonInPC
	.align	2, 0
	.type	 LoadEvent_DepositedMonInPC,function
	.thumb_func
LoadEvent_DepositedMonInPC:
	push	{r4, r5, lr}
	add	r1, r0, #0
	mov	r0, #0x1a
	bl	LoadEvent
	add	r4, r0, #0
	add	r5, r4, #0x2
	bl	DynamicPlaceholderTextUtil_Reset
	ldrh	r0, [r4]
	mov	r1, #0x0
	mov	r2, #0x0
	bl	QuestLog_GetSpeciesName
	ldrb	r0, [r4, #0x2]
	bl	GetBoxNamePtr
	add	r1, r0, #0
	mov	r0, #0x1
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldr	r0, .L435
	ldr	r1, .L435+0x4
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	add	r5, r5, #0x2
	add	r0, r5, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L436:
	.align	2, 0
.L435:
	.word	gStringVar4
	.word	gText_QuestLog_DepositedMonInPC
.Lfe82:
	.size	 LoadEvent_DepositedMonInPC,.Lfe82-LoadEvent_DepositedMonInPC
	.align	2, 0
	.type	 RecordEvent_SwitchedMultipleMons,function
	.thumb_func
RecordEvent_SwitchedMultipleMons:
	push	{r4, lr}
	add	r2, r0, #0
	add	r4, r1, #0
	mov	r0, #0x1b
	add	r1, r2, #0
	bl	RecordEventHeader
	add	r2, r0, #0
	cmp	r2, #0
	beq	.L438	@cond_branch
	ldrb	r0, [r4, #0x4]
	strb	r0, [r2]
	ldrb	r0, [r4, #0x5]
	strb	r0, [r2, #0x1]
	add	r0, r2, #0x2
	b	.L439
.L438:
	mov	r0, #0x0
.L439:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe83:
	.size	 RecordEvent_SwitchedMultipleMons,.Lfe83-RecordEvent_SwitchedMultipleMons
	.align	2, 0
	.type	 LoadEvent_SwitchedMultipleMons,function
	.thumb_func
LoadEvent_SwitchedMultipleMons:
	push	{r4, lr}
	add	r1, r0, #0
	mov	r0, #0x1b
	bl	LoadEvent
	add	r4, r0, #0
	bl	DynamicPlaceholderTextUtil_Reset
	ldrb	r0, [r4]
	bl	GetBoxNamePtr
	add	r1, r0, #0
	mov	r0, #0x0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldrb	r0, [r4]
	ldrb	r1, [r4, #0x1]
	cmp	r0, r1
	bne	.L441	@cond_branch
	ldr	r1, .L443
	mov	r0, #0x1
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	b	.L442
.L444:
	.align	2, 0
.L443:
	.word	gText_QuestLog_ADifferentSpot
.L441:
	ldrb	r0, [r4, #0x1]
	bl	GetBoxNamePtr
	add	r1, r0, #0
	mov	r0, #0x1
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
.L442:
	ldr	r0, .L445
	ldr	r1, .L445+0x4
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	add	r0, r4, #0x2
	pop	{r4}
	pop	{r1}
	bx	r1
.L446:
	.align	2, 0
.L445:
	.word	gStringVar4
	.word	gText_QuestLog_SwitchedMultipleMons
.Lfe84:
	.size	 LoadEvent_SwitchedMultipleMons,.Lfe84-LoadEvent_SwitchedMultipleMons
	.align	2, 0
	.type	 RecordEvent_DepositedItemInPC,function
	.thumb_func
RecordEvent_DepositedItemInPC:
	push	{r4, lr}
	add	r2, r0, #0
	add	r4, r1, #0
	mov	r0, #0x1c
	add	r1, r2, #0
	bl	RecordEventHeader
	add	r2, r0, #0
	cmp	r2, #0
	beq	.L448	@cond_branch
	ldrh	r0, [r4]
	strh	r0, [r2]
	add	r0, r2, #0x2
	b	.L449
.L448:
	mov	r0, #0x0
.L449:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe85:
	.size	 RecordEvent_DepositedItemInPC,.Lfe85-RecordEvent_DepositedItemInPC
	.align	2, 0
	.type	 LoadEvent_DepositedItemInPC,function
	.thumb_func
LoadEvent_DepositedItemInPC:
	push	{r4, lr}
	add	r1, r0, #0
	mov	r0, #0x1c
	bl	LoadEvent
	add	r4, r0, #0
	ldrh	r0, [r4]
	ldr	r1, .L451
	bl	CopyItemName
	ldr	r0, .L451+0x4
	ldr	r1, .L451+0x8
	bl	StringExpandPlaceholders
	add	r4, r4, #0x2
	add	r0, r4, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.L452:
	.align	2, 0
.L451:
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_QuestLog_StoredItemInPC
.Lfe86:
	.size	 LoadEvent_DepositedItemInPC,.Lfe86-LoadEvent_DepositedItemInPC
	.align	2, 0
	.type	 RecordEvent_WithdrewItemFromPC,function
	.thumb_func
RecordEvent_WithdrewItemFromPC:
	push	{r4, lr}
	add	r2, r0, #0
	add	r4, r1, #0
	mov	r0, #0x1d
	add	r1, r2, #0
	bl	RecordEventHeader
	add	r2, r0, #0
	cmp	r2, #0
	beq	.L454	@cond_branch
	ldrh	r0, [r4]
	strh	r0, [r2]
	add	r0, r2, #0x2
	b	.L455
.L454:
	mov	r0, #0x0
.L455:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe87:
	.size	 RecordEvent_WithdrewItemFromPC,.Lfe87-RecordEvent_WithdrewItemFromPC
	.align	2, 0
	.type	 LoadEvent_WithdrewItemFromPC,function
	.thumb_func
LoadEvent_WithdrewItemFromPC:
	push	{r4, lr}
	add	r1, r0, #0
	mov	r0, #0x1d
	bl	LoadEvent
	add	r4, r0, #0
	ldrh	r0, [r4]
	ldr	r1, .L457
	bl	CopyItemName
	ldr	r0, .L457+0x4
	ldr	r1, .L457+0x8
	bl	StringExpandPlaceholders
	add	r4, r4, #0x2
	add	r0, r4, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.L458:
	.align	2, 0
.L457:
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_QuestLog_WithdrewItemFromPC
.Lfe88:
	.size	 LoadEvent_WithdrewItemFromPC,.Lfe88-LoadEvent_WithdrewItemFromPC
	.align	2, 0
	.type	 RecordEvent_DefeatedTrainer,function
	.thumb_func
RecordEvent_DefeatedTrainer:
	push	{r4, lr}
	add	r4, r2, #0
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	bl	RecordEventHeader
	add	r1, r0, #0
	cmp	r1, #0
	beq	.L460	@cond_branch
	ldrh	r0, [r4, #0x2]
	strh	r0, [r1]
	ldrh	r0, [r4, #0x4]
	strh	r0, [r1, #0x2]
	ldrh	r0, [r4]
	strh	r0, [r1, #0x4]
	ldrb	r0, [r4, #0x7]
	strb	r0, [r1, #0x6]
	ldrb	r0, [r4, #0x6]
	strb	r0, [r1, #0x7]
	add	r0, r1, #0
	add	r0, r0, #0x8
	b	.L461
.L460:
	mov	r0, #0x0
.L461:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe89:
	.size	 RecordEvent_DefeatedTrainer,.Lfe89-RecordEvent_DefeatedTrainer
	.align	2, 0
	.type	 RecordEvent_DefeatedGymLeader,function
	.thumb_func
RecordEvent_DefeatedGymLeader:
	push	{lr}
	add	r3, r0, #0
	add	r2, r1, #0
	ldr	r1, .L463
	mov	r0, #0x1
	strb	r0, [r1]
	mov	r0, #0x1e
	add	r1, r3, #0
	bl	RecordEvent_DefeatedTrainer
	pop	{r1}
	bx	r1
.L464:
	.align	2, 0
.L463:
	.word	sStepRecordingMode
.Lfe90:
	.size	 RecordEvent_DefeatedGymLeader,.Lfe90-RecordEvent_DefeatedGymLeader
	.align	2, 0
	.type	 LoadEvent_DefeatedGymLeader,function
	.thumb_func
LoadEvent_DefeatedGymLeader:
	push	{r4, r5, r6, lr}
	add	r1, r0, #0
	mov	r0, #0x1e
	bl	LoadEvent
	add	r4, r0, #0
	add	r6, r4, #0x6
	bl	DynamicPlaceholderTextUtil_Reset
	ldr	r5, .L466
	ldrb	r1, [r4, #0x6]
	add	r0, r5, #0
	bl	GetMapNameGeneric
	mov	r0, #0x0
	add	r1, r5, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldrh	r0, [r4, #0x4]
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L466+0x4
	add	r1, r1, r0
	mov	r0, #0x1
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldrh	r0, [r4]
	mov	r1, #0x0
	mov	r2, #0x2
	bl	QuestLog_GetSpeciesName
	ldrh	r0, [r4, #0x2]
	mov	r1, #0x0
	mov	r2, #0x3
	bl	QuestLog_GetSpeciesName
	ldr	r1, .L466+0x8
	ldrb	r0, [r6, #0x1]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	mov	r0, #0x4
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldr	r0, .L466+0xc
	ldr	r1, .L466+0x10
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	add	r4, r4, #0x8
	add	r0, r4, #0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L467:
	.align	2, 0
.L466:
	.word	gStringVar1
	.word	gTrainers+0x4
	.word	sDefeatedOpponentFlavorTexts
	.word	gStringVar4
	.word	gText_QuestLog_TookOnGymLeadersMonWithMonAndWon
.Lfe91:
	.size	 LoadEvent_DefeatedGymLeader,.Lfe91-LoadEvent_DefeatedGymLeader
	.align	2, 0
	.type	 RecordEvent_DefeatedWildMon,function
	.thumb_func
RecordEvent_DefeatedWildMon:
	push	{r4, r5, r6, lr}
	add	r6, r1, #0
	add	r4, r0, #0
	add	r5, r4, #0
	add	r5, r5, #0x8
	ldr	r0, .L476
	ldrb	r1, [r0, #0x1f]
	add	r0, r4, #0
	bl	QL_IsRoomToSaveEvent
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L469	@cond_branch
	mov	r0, #0x0
	b	.L475
.L477:
	.align	2, 0
.L476:
	.word	sQuestLogEventCmdSizes
.L469:
	ldrb	r0, [r4, #0x8]
	cmp	r0, #0
	bne	.L470	@cond_branch
	ldrb	r0, [r5, #0x1]
	cmp	r0, #0
	bne	.L470	@cond_branch
	mov	r0, #0x1f
	strh	r0, [r4]
	ldr	r0, .L478
	ldrh	r0, [r0]
	strh	r0, [r4, #0x2]
.L470:
	ldrh	r0, [r6]
	add	r2, r0, #0
	cmp	r2, #0
	beq	.L471	@cond_branch
	strh	r0, [r4, #0x4]
.L471:
	ldrh	r0, [r6, #0x2]
	add	r1, r0, #0
	cmp	r1, #0
	beq	.L472	@cond_branch
	strh	r1, [r4, #0x6]
.L472:
	cmp	r2, #0
	beq	.L473	@cond_branch
	ldrb	r2, [r5]
	add	r0, r2, #0
	cmp	r0, #0xff
	beq	.L473	@cond_branch
	add	r0, r2, #0x1
	strb	r0, [r5]
.L473:
	lsl	r0, r1, #0x10
	cmp	r0, #0
	beq	.L474	@cond_branch
	ldrb	r1, [r5, #0x1]
	add	r0, r1, #0
	cmp	r0, #0xff
	beq	.L474	@cond_branch
	add	r0, r1, #0x1
	strb	r0, [r5, #0x1]
.L474:
	ldrb	r0, [r6, #0x4]
	strb	r0, [r5, #0x2]
	add	r0, r5, #0x4
.L475:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L479:
	.align	2, 0
.L478:
	.word	gQuestLogCurActionIdx
.Lfe92:
	.size	 RecordEvent_DefeatedWildMon,.Lfe92-RecordEvent_DefeatedWildMon
	.align	2, 0
	.type	 LoadEvent_DefeatedWildMon,function
	.thumb_func
LoadEvent_DefeatedWildMon:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	ldr	r0, .L497
	ldrb	r1, [r0, #0x1f]
	add	r0, r5, #0
	bl	QL_IsRoomToSaveEvent
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L481	@cond_branch
	mov	r0, #0x0
	b	.L496
.L498:
	.align	2, 0
.L497:
	.word	sQuestLogEventCmdSizes
.L481:
	add	r6, r5, #0
	add	r6, r6, #0x8
	bl	DynamicPlaceholderTextUtil_Reset
	ldr	r4, .L499
	ldrb	r1, [r6, #0x2]
	add	r0, r4, #0
	bl	GetMapNameGeneric
	mov	r0, #0x0
	add	r1, r4, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldrh	r0, [r5, #0x4]
	mov	r1, #0x0
	mov	r2, #0x1
	bl	QuestLog_GetSpeciesName
	ldr	r4, .L499+0x4
	ldrb	r1, [r5, #0x8]
	add	r0, r4, #0
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	mov	r0, #0x2
	add	r1, r4, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldrh	r0, [r5, #0x6]
	mov	r1, #0x0
	mov	r2, #0x3
	bl	QuestLog_GetSpeciesName
	ldr	r4, .L499+0x8
	ldrb	r1, [r6, #0x1]
	add	r0, r4, #0
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	mov	r0, #0x4
	add	r1, r4, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldr	r0, .L499+0xc
	ldr	r1, [r0]
	mov	r0, #0x5
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldrb	r0, [r5, #0x8]
	cmp	r0, #0
	bne	.L482	@cond_branch
	ldrb	r0, [r6, #0x1]
	cmp	r0, #0x1
	bne	.L483	@cond_branch
	ldr	r0, .L499+0x10
	ldr	r1, .L499+0x14
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	b	.L485
.L500:
	.align	2, 0
.L499:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.word	gSaveBlock2Ptr
	.word	gStringVar4
	.word	gText_QuestLog_CaughtWildMon
.L483:
	ldr	r0, .L501
	ldr	r1, .L501+0x4
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	b	.L485
.L502:
	.align	2, 0
.L501:
	.word	gStringVar4
	.word	gText_QuestLog_CaughtWildMons
.L482:
	ldrb	r1, [r6, #0x1]
	cmp	r1, #0
	bne	.L486	@cond_branch
	cmp	r0, #0x1
	bne	.L487	@cond_branch
	ldr	r0, .L503
	ldr	r1, .L503+0x4
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	b	.L485
.L504:
	.align	2, 0
.L503:
	.word	gStringVar4
	.word	gText_QuestLog_DefeatedWildMon
.L487:
	ldr	r0, .L505
	ldr	r1, .L505+0x4
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	b	.L485
.L506:
	.align	2, 0
.L505:
	.word	gStringVar4
	.word	gText_QuestLog_DefeatedWildMons
.L486:
	cmp	r0, #0x1
	bne	.L490	@cond_branch
	cmp	r1, #0x1
	bne	.L491	@cond_branch
	ldr	r0, .L507
	ldr	r1, .L507+0x4
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	b	.L485
.L508:
	.align	2, 0
.L507:
	.word	gStringVar4
	.word	gText_QuestLog_DefeatedWildMonAndCaughtWildMon
.L491:
	ldr	r0, .L509
	ldr	r1, .L509+0x4
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	b	.L485
.L510:
	.align	2, 0
.L509:
	.word	gStringVar4
	.word	gText_QuestLog_DefeatedWildMonAndCaughtWildMons
.L490:
	cmp	r1, #0x1
	bne	.L494	@cond_branch
	ldr	r0, .L511
	ldr	r1, .L511+0x4
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	b	.L485
.L512:
	.align	2, 0
.L511:
	.word	gStringVar4
	.word	gText_QuestLog_DefeatedWildMonsAndCaughtWildMon
.L494:
	ldr	r0, .L513
	ldr	r1, .L513+0x4
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
.L485:
	add	r0, r6, #0x4
.L496:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L514:
	.align	2, 0
.L513:
	.word	gStringVar4
	.word	gText_QuestLog_DefeatedWildMonsAndCaughtWildMons
.Lfe93:
	.size	 LoadEvent_DefeatedWildMon,.Lfe93-LoadEvent_DefeatedWildMon
	.align	2, 0
	.type	 IsSpeciesFromSpecialEncounter,function
	.thumb_func
IsSpeciesFromSpecialEncounter:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r1, r0, #0
	cmp	r0, #0x96
	beq	.L524	@cond_branch
	cmp	r0, #0x96
	bgt	.L527	@cond_branch
	cmp	r0, #0x92
	bgt	.L516	@cond_branch
	cmp	r0, #0x8f
	blt	.L516	@cond_branch
	b	.L524
.L527:
	cmp	r1, #0xf9
	blt	.L516	@cond_branch
	cmp	r1, #0xfa
	ble	.L524	@cond_branch
	mov	r0, #0xcd
	lsl	r0, r0, #0x1
	cmp	r1, r0
	bne	.L516	@cond_branch
.L524:
	mov	r0, #0x1
	b	.L528
.L516:
	mov	r0, #0x0
.L528:
	pop	{r1}
	bx	r1
.Lfe94:
	.size	 IsSpeciesFromSpecialEncounter,.Lfe94-IsSpeciesFromSpecialEncounter
	.align	2, 0
	.type	 RecordEvent_DefeatedEliteFourMember,function
	.thumb_func
RecordEvent_DefeatedEliteFourMember:
	push	{lr}
	add	r3, r0, #0
	add	r2, r1, #0
	ldr	r1, .L530
	mov	r0, #0x1
	strb	r0, [r1]
	mov	r0, #0x20
	add	r1, r3, #0
	bl	RecordEvent_DefeatedTrainer
	pop	{r1}
	bx	r1
.L531:
	.align	2, 0
.L530:
	.word	sStepRecordingMode
.Lfe95:
	.size	 RecordEvent_DefeatedEliteFourMember,.Lfe95-RecordEvent_DefeatedEliteFourMember
	.align	2, 0
	.type	 LoadEvent_DefeatedEliteFourMember,function
	.thumb_func
LoadEvent_DefeatedEliteFourMember:
	push	{r4, r5, lr}
	add	r1, r0, #0
	mov	r0, #0x20
	bl	LoadEvent
	add	r4, r0, #0
	add	r5, r4, #0x6
	bl	DynamicPlaceholderTextUtil_Reset
	ldrh	r0, [r4, #0x4]
	lsl	r1, r0, #0x2
	add	r1, r1, r0
	lsl	r1, r1, #0x3
	ldr	r0, .L533
	add	r1, r1, r0
	mov	r0, #0x0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldrh	r0, [r4]
	mov	r1, #0x0
	mov	r2, #0x1
	bl	QuestLog_GetSpeciesName
	ldrh	r0, [r4, #0x2]
	mov	r1, #0x0
	mov	r2, #0x2
	bl	QuestLog_GetSpeciesName
	ldr	r1, .L533+0x4
	ldrb	r0, [r5, #0x1]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	mov	r0, #0x3
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldr	r0, .L533+0x8
	ldr	r1, .L533+0xc
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	add	r4, r4, #0x8
	add	r0, r4, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L534:
	.align	2, 0
.L533:
	.word	gTrainers+0x4
	.word	sDefeatedOpponentFlavorTexts
	.word	gStringVar4
	.word	gText_QuestLog_TookOnEliteFoursMonWithMonAndWon
.Lfe96:
	.size	 LoadEvent_DefeatedEliteFourMember,.Lfe96-LoadEvent_DefeatedEliteFourMember
	.align	2, 0
	.type	 RecordEvent_DefeatedChampion,function
	.thumb_func
RecordEvent_DefeatedChampion:
	push	{r4, r5, lr}
	add	r4, r0, #0
	add	r5, r1, #0
	ldr	r0, .L538
	add	r0, r0, #0x21
	ldrb	r1, [r0]
	add	r0, r4, #0
	bl	QL_IsRoomToSaveEvent
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L536	@cond_branch
	ldr	r1, .L538+0x4
	add	r0, r1, #0
	strh	r0, [r4]
	ldr	r0, .L538+0x8
	ldrh	r0, [r0]
	strh	r0, [r4, #0x2]
	ldrh	r0, [r5, #0x2]
	strh	r0, [r4, #0x4]
	ldrh	r0, [r5, #0x4]
	strh	r0, [r4, #0x6]
	ldrb	r0, [r5, #0x6]
	strb	r0, [r4, #0x8]
	ldr	r1, .L538+0xc
	mov	r0, #0x1
	strb	r0, [r1]
	add	r0, r4, #0
	add	r0, r0, #0xa
	b	.L537
.L539:
	.align	2, 0
.L538:
	.word	sQuestLogEventCmdSizes
	.word	0x2021
	.word	gQuestLogCurActionIdx
	.word	sStepRecordingMode
.L536:
	mov	r0, #0x0
.L537:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe97:
	.size	 RecordEvent_DefeatedChampion,.Lfe97-RecordEvent_DefeatedChampion
	.align	2, 0
	.type	 LoadEvent_DefeatedChampion,function
	.thumb_func
LoadEvent_DefeatedChampion:
	push	{r4, r5, lr}
	add	r4, r0, #0
	ldr	r0, .L550
	add	r0, r0, #0x21
	ldrb	r1, [r0]
	add	r0, r4, #0
	bl	QL_IsRoomToSaveEvent
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L541	@cond_branch
	mov	r0, #0x0
	b	.L549
.L551:
	.align	2, 0
.L550:
	.word	sQuestLogEventCmdSizes
.L541:
	add	r5, r4, #0
	add	r5, r5, #0x8
	bl	DynamicPlaceholderTextUtil_Reset
	ldr	r0, .L552
	ldrh	r0, [r0, #0x2]
	cmp	r0, #0x1
	beq	.L544	@cond_branch
	cmp	r0, #0x1
	bgt	.L548	@cond_branch
	cmp	r0, #0
	beq	.L543	@cond_branch
	b	.L542
.L553:
	.align	2, 0
.L552:
	.word	gQuestLogRepeatEventTracker
.L548:
	cmp	r0, #0x2
	beq	.L545	@cond_branch
	b	.L542
.L543:
	ldr	r0, .L554
	ldr	r1, [r0]
	mov	r0, #0x0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldr	r0, .L554+0x4
	ldr	r1, [r0]
	ldr	r0, .L554+0x8
	add	r1, r1, r0
	mov	r0, #0x1
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldr	r0, .L554+0xc
	ldr	r1, .L554+0x10
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	b	.L542
.L555:
	.align	2, 0
.L554:
	.word	gSaveBlock2Ptr
	.word	gSaveBlock1Ptr
	.word	0x3a4c
	.word	gStringVar4
	.word	gText_QuestLog_PlayerBattledChampionRival
.L544:
	ldr	r0, .L556
	ldr	r1, [r0]
	ldr	r0, .L556+0x4
	add	r1, r1, r0
	mov	r0, #0x0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldrh	r0, [r4, #0x4]
	mov	r1, #0x0
	mov	r2, #0x1
	bl	QuestLog_GetSpeciesName
	ldr	r0, .L556+0x8
	ldr	r1, [r0]
	mov	r0, #0x2
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldrh	r0, [r4, #0x6]
	mov	r1, #0x0
	mov	r2, #0x3
	bl	QuestLog_GetSpeciesName
	ldr	r0, .L556+0xc
	ldr	r1, .L556+0x10
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	b	.L542
.L557:
	.align	2, 0
.L556:
	.word	gSaveBlock1Ptr
	.word	0x3a4c
	.word	gSaveBlock2Ptr
	.word	gStringVar4
	.word	gText_QuestLog_PlayerSentOutMon1RivalSentOutMon2
.L545:
	ldr	r1, .L558
	ldrb	r0, [r4, #0x8]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	mov	r0, #0x0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldr	r0, .L558+0x4
	ldr	r1, .L558+0x8
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
.L542:
	add	r0, r5, #0x2
.L549:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L559:
	.align	2, 0
.L558:
	.word	sDefeatedChampionFlavorTexts
	.word	gStringVar4
	.word	gText_QuestLog_WonTheMatchAsAResult
.Lfe98:
	.size	 LoadEvent_DefeatedChampion,.Lfe98-LoadEvent_DefeatedChampion
	.align	2, 0
	.type	 RecordEvent_DefeatedNormalTrainer,function
	.thumb_func
RecordEvent_DefeatedNormalTrainer:
	push	{lr}
	add	r3, r0, #0
	add	r2, r1, #0
	ldr	r1, .L561
	mov	r0, #0x1
	strb	r0, [r1]
	mov	r0, #0x22
	add	r1, r3, #0
	bl	RecordEvent_DefeatedTrainer
	pop	{r1}
	bx	r1
.L562:
	.align	2, 0
.L561:
	.word	sStepRecordingMode
.Lfe99:
	.size	 RecordEvent_DefeatedNormalTrainer,.Lfe99-RecordEvent_DefeatedNormalTrainer
	.align	2, 0
	.type	 LoadEvent_DefeatedTrainer,function
	.thumb_func
LoadEvent_DefeatedTrainer:
	push	{r4, r5, r6, lr}
	add	r1, r0, #0
	mov	r0, #0x22
	bl	LoadEvent
	add	r5, r0, #0
	add	r6, r5, #0x6
	bl	DynamicPlaceholderTextUtil_Reset
	ldr	r4, .L567
	ldrb	r1, [r5, #0x6]
	add	r0, r4, #0
	bl	GetMapNameGeneric
	mov	r0, #0x0
	add	r1, r4, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldr	r3, .L567+0x4
	ldrh	r1, [r5, #0x4]
	lsl	r0, r1, #0x2
	add	r0, r0, r1
	lsl	r2, r0, #0x3
	add	r0, r2, r3
	ldrb	r0, [r0, #0x1]
	cmp	r0, #0x51
	beq	.L565	@cond_branch
	cmp	r0, #0x59
	beq	.L565	@cond_branch
	cmp	r0, #0x5a
	bne	.L564	@cond_branch
.L565:
	mov	r0, #0x6
	bl	GetExpandedPlaceholder
	add	r1, r0, #0
	mov	r0, #0x1
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	b	.L566
.L568:
	.align	2, 0
.L567:
	.word	gStringVar1
	.word	gTrainers
.L564:
	add	r1, r3, #0x4
	add	r1, r2, r1
	mov	r0, #0x1
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
.L566:
	ldrh	r0, [r5]
	mov	r1, #0x0
	mov	r2, #0x2
	bl	QuestLog_GetSpeciesName
	ldrh	r0, [r5, #0x2]
	mov	r1, #0x0
	mov	r2, #0x3
	bl	QuestLog_GetSpeciesName
	ldr	r1, .L569
	ldrb	r0, [r6, #0x1]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r1, [r0]
	mov	r0, #0x4
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldr	r0, .L569+0x4
	ldr	r1, .L569+0x8
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	add	r0, r6, #0x2
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L570:
	.align	2, 0
.L569:
	.word	sDefeatedOpponentFlavorTexts
	.word	gStringVar4
	.word	gText_QuestLog_TookOnTrainersMonWithMonAndWon
.Lfe100:
	.size	 LoadEvent_DefeatedTrainer,.Lfe100-LoadEvent_DefeatedTrainer
	.align	2, 0
	.type	 RecordEvent_DepartedLocation,function
	.thumb_func
RecordEvent_DepartedLocation:
	push	{r4, lr}
	add	r2, r0, #0
	add	r4, r1, #0
	mov	r0, #0x23
	add	r1, r2, #0
	bl	RecordEventHeader
	add	r2, r0, #0
	cmp	r2, #0
	bne	.L572	@cond_branch
	mov	r0, #0x0
	b	.L574
.L572:
	ldrb	r0, [r4]
	strb	r0, [r2]
	ldrb	r0, [r4, #0x1]
	strb	r0, [r2, #0x1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x24
	bne	.L573	@cond_branch
	ldr	r1, .L575
	mov	r0, #0x1
	strb	r0, [r1]
.L573:
	add	r0, r2, #0x2
.L574:
	pop	{r4}
	pop	{r1}
	bx	r1
.L576:
	.align	2, 0
.L575:
	.word	sStepRecordingMode
.Lfe101:
	.size	 RecordEvent_DepartedLocation,.Lfe101-RecordEvent_DepartedLocation
	.align	2, 0
	.type	 LoadEvent_DepartedLocation,function
	.thumb_func
LoadEvent_DepartedLocation:
	push	{r4, r5, r6, r7, lr}
	add	r1, r0, #0
	mov	r0, #0x23
	bl	LoadEvent
	add	r5, r0, #0
	ldrb	r6, [r5, #0x1]
	ldr	r0, .L590
	ldrb	r1, [r5]
	bl	GetMapNameGeneric
	ldr	r0, .L590+0x4
	ldr	r2, .L590+0x8
	lsl	r1, r6, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringCopy
	ldr	r0, .L590+0xc
	add	r1, r6, r0
	ldrb	r0, [r1]
	cmp	r0, #0x5
	bne	.L578	@cond_branch
	mov	r4, #0x0
	ldr	r2, .L590+0x10
	add	r7, r5, #0x2
	ldrb	r1, [r5]
.L582:
	add	r0, r4, r2
	ldrb	r0, [r0]
	cmp	r1, r0
	bne	.L581	@cond_branch
	mov	r1, #0x82
	lsl	r1, r1, #0x4
	add	r0, r4, r1
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L589	@cond_branch
	ldr	r0, .L590+0x14
	ldr	r1, .L590+0x18
	bl	StringExpandPlaceholders
	b	.L580
.L591:
	.align	2, 0
.L590:
	.word	gStringVar1
	.word	gStringVar2
	.word	sLocationNameTexts
	.word	sLocationToDepartedTextId
	.word	sGymCityMapSecs
	.word	gStringVar4
	.word	gText_QuestLog_GymWasFullOfToughTrainers
.L581:
	add	r0, r4, #0x1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x7
	bls	.L582	@cond_branch
.L580:
	cmp	r4, #0x8
	bne	.L588	@cond_branch
	ldr	r0, .L592
	ldr	r2, .L592+0x4
	ldr	r1, .L592+0x8
	add	r1, r6, r1
	ldrb	r1, [r1]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringExpandPlaceholders
	b	.L588
.L593:
	.align	2, 0
.L592:
	.word	gStringVar4
	.word	sDepartedLocationTexts
	.word	sLocationToDepartedTextId
.L589:
	ldr	r0, .L594
	ldr	r1, .L594+0x4
	bl	StringExpandPlaceholders
	b	.L580
.L595:
	.align	2, 0
.L594:
	.word	gStringVar4
	.word	gText_QuestLog_DepartedGym
.L578:
	ldr	r0, .L596
	ldr	r2, .L596+0x4
	ldrb	r1, [r1]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringExpandPlaceholders
	add	r7, r5, #0x2
.L588:
	add	r0, r7, #0
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L597:
	.align	2, 0
.L596:
	.word	gStringVar4
	.word	sDepartedLocationTexts
.Lfe102:
	.size	 LoadEvent_DepartedLocation,.Lfe102-LoadEvent_DepartedLocation
	.align	2, 0
	.globl	SetQLPlayedTheSlots
	.type	 SetQLPlayedTheSlots,function
	.thumb_func
SetQLPlayedTheSlots:
	ldr	r1, .L599
	mov	r0, #0x1
	strb	r0, [r1]
	bx	lr
.L600:
	.align	2, 0
.L599:
	.word	sPlayedTheSlots
.Lfe103:
	.size	 SetQLPlayedTheSlots,.Lfe103-SetQLPlayedTheSlots
	.align	2, 0
	.type	 ShouldRegisterEvent_HandleDeparted,function
	.thumb_func
ShouldRegisterEvent_HandleDeparted:
	push	{lr}
	add	r2, r1, #0
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x23
	beq	.L602	@cond_branch
	ldr	r1, .L605
	mov	r0, #0x0
	strb	r0, [r1]
	mov	r0, #0x1
	b	.L604
.L606:
	.align	2, 0
.L605:
	.word	sLastDepartedLocation
.L602:
	ldr	r3, .L607
	ldrb	r1, [r3]
	ldrb	r0, [r2, #0x1]
	add	r0, r0, #0x1
	cmp	r1, r0
	beq	.L603	@cond_branch
	strb	r0, [r3]
	mov	r0, #0x1
	b	.L604
.L608:
	.align	2, 0
.L607:
	.word	sLastDepartedLocation
.L603:
	mov	r0, #0x0
.L604:
	pop	{r1}
	bx	r1
.Lfe104:
	.size	 ShouldRegisterEvent_HandleDeparted,.Lfe104-ShouldRegisterEvent_HandleDeparted
	.align	2, 0
	.type	 ShouldRegisterEvent_DepartedGameCorner,function
	.thumb_func
ShouldRegisterEvent_DepartedGameCorner:
	push	{lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	cmp	r0, #0x23
	bne	.L613	@cond_branch
	ldrb	r0, [r1, #0x1]
	ldr	r1, .L614
	cmp	r0, #0x20
	bne	.L611	@cond_branch
	ldrb	r0, [r1]
	cmp	r0, #0
	bne	.L611	@cond_branch
	mov	r0, #0x0
	b	.L612
.L615:
	.align	2, 0
.L614:
	.word	sPlayedTheSlots
.L611:
	mov	r0, #0x0
	strb	r0, [r1]
.L613:
	mov	r0, #0x1
.L612:
	pop	{r1}
	bx	r1
.Lfe105:
	.size	 ShouldRegisterEvent_DepartedGameCorner,.Lfe105-ShouldRegisterEvent_DepartedGameCorner
	.align	2, 0
	.type	 RecordEvent_UsedFieldMove,function
	.thumb_func
RecordEvent_UsedFieldMove:
	push	{r4, lr}
	add	r2, r0, #0
	add	r4, r1, #0
	mov	r0, #0x24
	add	r1, r2, #0
	bl	RecordEventHeader
	add	r2, r0, #0
	cmp	r2, #0
	bne	.L617	@cond_branch
	mov	r0, #0x0
	b	.L620
.L617:
	ldrh	r0, [r4]
	strh	r0, [r2]
	add	r3, r2, #0x2
	ldrb	r0, [r4, #0x2]
	strb	r0, [r2, #0x2]
	ldrb	r0, [r4, #0x3]
	strb	r0, [r3, #0x1]
	ldrb	r0, [r2, #0x2]
	sub	r0, r0, #0x7
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bhi	.L618	@cond_branch
	ldr	r1, .L622
	mov	r0, #0x2
	b	.L621
.L623:
	.align	2, 0
.L622:
	.word	sStepRecordingMode
.L618:
	ldr	r1, .L624
	mov	r0, #0x1
.L621:
	strb	r0, [r1]
	add	r0, r3, #0x2
.L620:
	pop	{r4}
	pop	{r1}
	bx	r1
.L625:
	.align	2, 0
.L624:
	.word	sStepRecordingMode
.Lfe106:
	.size	 RecordEvent_UsedFieldMove,.Lfe106-RecordEvent_UsedFieldMove
	.align	2, 0
	.type	 LoadEvent_UsedFieldMove,function
	.thumb_func
LoadEvent_UsedFieldMove:
	push	{r4, r5, lr}
	add	r1, r0, #0
	mov	r0, #0x24
	bl	LoadEvent
	add	r4, r0, #0
	add	r5, r4, #0x2
	ldrh	r0, [r4]
	ldr	r1, .L631
	mov	r2, #0x0
	bl	QuestLog_GetSpeciesName
	ldrb	r0, [r5, #0x1]
	cmp	r0, #0xff
	beq	.L627	@cond_branch
	ldr	r0, .L631+0x4
	ldrb	r1, [r5, #0x1]
	bl	GetMapNameGeneric
.L627:
	ldrb	r0, [r4, #0x2]
	cmp	r0, #0x7
	bne	.L628	@cond_branch
	ldrb	r0, [r5, #0x1]
	cmp	r0, #0x58
	bne	.L629	@cond_branch
	ldr	r0, .L631+0x8
	ldr	r1, .L631+0xc
	bl	StringCopy
	b	.L628
.L632:
	.align	2, 0
.L631:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar3
	.word	gText_QuestLog_Home
.L629:
	ldr	r0, .L633
	ldr	r1, .L633+0x4
	bl	StringCopy
.L628:
	ldr	r0, .L633+0x8
	ldr	r2, .L633+0xc
	ldrb	r1, [r5]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	StringExpandPlaceholders
	add	r0, r5, #0x2
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L634:
	.align	2, 0
.L633:
	.word	gStringVar3
	.word	gText_PokemonCenter
	.word	gStringVar4
	.word	sUsedFieldMoveTexts
.Lfe107:
	.size	 LoadEvent_UsedFieldMove,.Lfe107-LoadEvent_UsedFieldMove
	.align	2, 0
	.type	 RecordEvent_BoughtItem,function
	.thumb_func
RecordEvent_BoughtItem:
	push	{r4, lr}
	add	r2, r0, #0
	add	r4, r1, #0
	mov	r0, #0x25
	add	r1, r2, #0
	bl	RecordEventHeader
	add	r2, r0, #0
	cmp	r2, #0
	beq	.L636	@cond_branch
	ldrh	r0, [r4, #0x4]
	strh	r0, [r2]
	ldrh	r0, [r4, #0x6]
	strh	r0, [r2, #0x2]
	ldr	r1, [r4]
	lsr	r0, r1, #0x10
	strh	r0, [r2, #0x4]
	strh	r1, [r2, #0x6]
	ldrb	r0, [r4, #0x8]
	strb	r0, [r2, #0x8]
	mov	r0, #0x1
	strb	r0, [r2, #0x9]
	add	r0, r2, #0
	add	r0, r0, #0xa
	b	.L637
.L636:
	mov	r0, #0x0
.L637:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe108:
	.size	 RecordEvent_BoughtItem,.Lfe108-RecordEvent_BoughtItem
	.align	2, 0
	.type	 LoadEvent_BoughtItem,function
	.thumb_func
LoadEvent_BoughtItem:
	push	{r4, r5, r6, r7, lr}
	add	r1, r0, #0
	mov	r0, #0x25
	bl	LoadEvent
	add	r4, r0, #0
	add	r7, r4, #0
	add	r7, r7, #0x8
	ldrh	r0, [r4, #0x4]
	lsl	r0, r0, #0x10
	ldrh	r1, [r4, #0x6]
	add	r6, r0, r1
	bl	DynamicPlaceholderTextUtil_Reset
	ldr	r5, .L641
	ldrb	r1, [r4, #0x8]
	add	r0, r5, #0
	bl	GetMapNameGeneric
	mov	r0, #0x0
	add	r1, r5, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldrh	r0, [r4]
	bl	ItemId_GetName
	add	r1, r0, #0
	mov	r0, #0x1
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldrh	r0, [r4, #0x2]
	cmp	r0, #0x1
	bhi	.L639	@cond_branch
	ldr	r0, .L641+0x4
	ldr	r1, .L641+0x8
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	b	.L640
.L642:
	.align	2, 0
.L641:
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_QuestLog_BoughtItem
.L639:
	ldr	r4, .L643
	add	r0, r4, #0
	add	r1, r6, #0
	mov	r2, #0x0
	mov	r3, #0x6
	bl	ConvertIntToDecimalStringN
	mov	r0, #0x2
	add	r1, r4, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldr	r0, .L643+0x4
	ldr	r1, .L643+0x8
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
.L640:
	add	r0, r7, #0x2
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L644:
	.align	2, 0
.L643:
	.word	gStringVar2
	.word	gStringVar4
	.word	gText_QuestLog_BoughtItemsIncludingItem
.Lfe109:
	.size	 LoadEvent_BoughtItem,.Lfe109-LoadEvent_BoughtItem
	.align	2, 0
	.type	 RecordEvent_SoldItem,function
	.thumb_func
RecordEvent_SoldItem:
	push	{r4, lr}
	add	r2, r0, #0
	add	r4, r1, #0
	mov	r0, #0x26
	add	r1, r2, #0
	bl	RecordEventHeader
	add	r2, r0, #0
	cmp	r2, #0
	beq	.L646	@cond_branch
	ldrh	r0, [r4, #0x4]
	strh	r0, [r2]
	ldrh	r0, [r4, #0x6]
	strh	r0, [r2, #0x2]
	ldr	r1, [r4]
	lsr	r0, r1, #0x10
	strh	r0, [r2, #0x4]
	strh	r1, [r2, #0x6]
	ldrb	r0, [r4, #0x8]
	strb	r0, [r2, #0x8]
	ldrb	r0, [r4, #0x9]
	strb	r0, [r2, #0x9]
	add	r0, r2, #0
	add	r0, r0, #0xa
	b	.L647
.L646:
	mov	r0, #0x0
.L647:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe110:
	.size	 RecordEvent_SoldItem,.Lfe110-RecordEvent_SoldItem
	.align	2, 0
	.type	 LoadEvent_SoldItem,function
	.thumb_func
LoadEvent_SoldItem:
	push	{r4, r5, r6, r7, lr}
	add	r1, r0, #0
	mov	r0, #0x26
	bl	LoadEvent
	add	r5, r0, #0
	add	r7, r5, #0
	add	r7, r7, #0x8
	ldrh	r0, [r5, #0x4]
	lsl	r0, r0, #0x10
	ldrh	r1, [r5, #0x6]
	add	r6, r0, r1
	bl	DynamicPlaceholderTextUtil_Reset
	ldr	r4, .L653
	ldrb	r1, [r5, #0x8]
	add	r0, r4, #0
	bl	GetMapNameGeneric
	ldrb	r0, [r7, #0x1]
	cmp	r0, #0
	bne	.L649	@cond_branch
	ldr	r0, .L653+0x4
	ldr	r1, [r0]
	mov	r0, #0x0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	mov	r0, #0x1
	add	r1, r4, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldrh	r0, [r5]
	bl	ItemId_GetName
	add	r1, r0, #0
	mov	r0, #0x2
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldrh	r0, [r5, #0x2]
	cmp	r0, #0x1
	bne	.L650	@cond_branch
	ldr	r1, .L653+0x8
	mov	r0, #0x3
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	b	.L651
.L654:
	.align	2, 0
.L653:
	.word	gStringVar1
	.word	gSaveBlock2Ptr
	.word	gText_QuestLog_JustOne
.L650:
	ldr	r4, .L655
	ldrh	r1, [r5, #0x2]
	add	r0, r4, #0
	mov	r2, #0x0
	mov	r3, #0x3
	bl	ConvertIntToDecimalStringN
	mov	r0, #0x4
	add	r1, r4, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldr	r4, .L655+0x4
	ldr	r1, .L655+0x8
	add	r0, r4, #0
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	mov	r0, #0x3
	add	r1, r4, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
.L651:
	ldr	r0, .L655+0xc
	ldr	r1, .L655+0x10
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
	b	.L652
.L656:
	.align	2, 0
.L655:
	.word	gStringVar2
	.word	gStringVar3
	.word	gText_QuestLog_Num
	.word	gStringVar4
	.word	gText_QuestLog_SoldNumOfItem
.L649:
	mov	r0, #0x0
	add	r1, r4, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldrh	r0, [r5]
	bl	ItemId_GetName
	add	r1, r0, #0
	mov	r0, #0x1
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldr	r4, .L657
	add	r0, r4, #0
	add	r1, r6, #0
	mov	r2, #0x0
	mov	r3, #0x6
	bl	ConvertIntToDecimalStringN
	mov	r0, #0x2
	add	r1, r4, #0
	bl	DynamicPlaceholderTextUtil_SetPlaceholderPtr
	ldr	r0, .L657+0x4
	ldr	r1, .L657+0x8
	bl	DynamicPlaceholderTextUtil_ExpandPlaceholders
.L652:
	add	r0, r7, #0x2
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L658:
	.align	2, 0
.L657:
	.word	gStringVar2
	.word	gStringVar4
	.word	gText_QuestLog_SoldItemsIncludingItem
.Lfe111:
	.size	 LoadEvent_SoldItem,.Lfe111-LoadEvent_SoldItem
	.align	2, 0
	.type	 RecordEvent_ObtainedStoryItem,function
	.thumb_func
RecordEvent_ObtainedStoryItem:
	push	{r4, lr}
	add	r2, r0, #0
	add	r4, r1, #0
	mov	r0, #0x28
	add	r1, r2, #0
	bl	RecordEventHeader
	add	r2, r0, #0
	cmp	r2, #0
	beq	.L660	@cond_branch
	ldrh	r0, [r4]
	strh	r0, [r2]
	ldrb	r0, [r4, #0x2]
	strb	r0, [r2, #0x2]
	add	r0, r2, #0x4
	b	.L661
.L660:
	mov	r0, #0x0
.L661:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe112:
	.size	 RecordEvent_ObtainedStoryItem,.Lfe112-RecordEvent_ObtainedStoryItem
	.align	2, 0
	.type	 LoadEvent_ObtainedStoryItem,function
	.thumb_func
LoadEvent_ObtainedStoryItem:
	push	{r4, r5, r6, lr}
	add	r1, r0, #0
	mov	r0, #0x28
	bl	LoadEvent
	add	r4, r0, #0
	add	r5, r4, #0x2
	ldr	r0, .L663
	ldrb	r1, [r4, #0x2]
	bl	GetMapNameGeneric
	ldr	r6, .L663+0x4
	ldrh	r0, [r4]
	bl	ItemId_GetName
	add	r1, r0, #0
	add	r0, r6, #0
	bl	StringCopy
	ldr	r0, .L663+0x8
	ldr	r1, .L663+0xc
	bl	StringExpandPlaceholders
	add	r5, r5, #0x2
	add	r0, r5, #0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L664:
	.align	2, 0
.L663:
	.word	gStringVar1
	.word	gStringVar2
	.word	gStringVar4
	.word	gText_QuestLog_ObtainedItemInLocation
.Lfe113:
	.size	 LoadEvent_ObtainedStoryItem,.Lfe113-LoadEvent_ObtainedStoryItem
	.align	2, 0
	.globl	QuestLog_RecordEnteredMap
	.type	 QuestLog_RecordEnteredMap,function
	.thumb_func
QuestLog_RecordEnteredMap:
	push	{r4, lr}
	lsl	r0, r0, #0x10
	lsr	r2, r0, #0x10
	ldr	r0, .L676
	ldrb	r0, [r0]
	sub	r0, r0, #0x2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bls	.L665	@cond_branch
	mov	r1, #0x0
	ldr	r4, .L676+0x4
	ldr	r0, .L676+0x8
	b	.L667
.L677:
	.align	2, 0
.L676:
	.word	gQuestLogState
	.word	sNewlyEnteredMap
	.word	sWorldMapFlags
.L672:
	mov	r0, #0x0
	b	.L675
.L669:
	add	r0, r0, #0x2
	add	r1, r1, #0x1
.L667:
	cmp	r1, #0x10
	bgt	.L665	@cond_branch
	ldrh	r3, [r0]
	cmp	r2, r3
	bne	.L669	@cond_branch
	add	r0, r2, #0
	bl	FlagGet
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L672	@cond_branch
	mov	r0, #0x1
.L675:
	strb	r0, [r4]
.L665:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe114:
	.size	 QuestLog_RecordEnteredMap,.Lfe114-QuestLog_RecordEnteredMap
	.align	2, 0
	.globl	SetQuestLogEvent_Arrived
	.type	 SetQuestLogEvent_Arrived,function
	.thumb_func
SetQuestLogEvent_Arrived:
	push	{r4, lr}
	add	sp, sp, #-0x4
	ldr	r0, .L681
	ldrb	r0, [r0]
	sub	r0, r0, #0x2
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	bls	.L679	@cond_branch
	ldr	r4, .L681+0x4
	ldrb	r0, [r4]
	cmp	r0, #0
	beq	.L679	@cond_branch
	ldr	r0, .L681+0x8
	ldrb	r1, [r0, #0x14]
	mov	r0, sp
	strh	r1, [r0]
	mov	r0, #0x2a
	mov	r1, sp
	bl	SetQuestLogEvent
	mov	r0, #0x0
	strb	r0, [r4]
.L679:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L682:
	.align	2, 0
.L681:
	.word	gQuestLogState
	.word	sNewlyEnteredMap
	.word	gMapHeader
.Lfe115:
	.size	 SetQuestLogEvent_Arrived,.Lfe115-SetQuestLogEvent_Arrived
	.align	2, 0
	.type	 RecordEvent_ArrivedInLocation,function
	.thumb_func
RecordEvent_ArrivedInLocation:
	push	{r4, lr}
	add	r2, r0, #0
	add	r4, r1, #0
	mov	r0, #0x2a
	add	r1, r2, #0
	bl	RecordEventHeader
	add	r2, r0, #0
	cmp	r2, #0
	beq	.L684	@cond_branch
	ldrh	r0, [r4]
	strh	r0, [r2]
	add	r0, r2, #0x2
	b	.L685
.L684:
	mov	r0, #0x0
.L685:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe116:
	.size	 RecordEvent_ArrivedInLocation,.Lfe116-RecordEvent_ArrivedInLocation
	.align	2, 0
	.type	 LoadEvent_ArrivedInLocation,function
	.thumb_func
LoadEvent_ArrivedInLocation:
	push	{r4, lr}
	add	r1, r0, #0
	mov	r0, #0x2a
	bl	LoadEvent
	add	r4, r0, #0
	ldr	r0, .L687
	ldrb	r1, [r4]
	bl	GetMapNameGeneric
	ldr	r0, .L687+0x4
	ldr	r1, .L687+0x8
	bl	StringExpandPlaceholders
	add	r4, r4, #0x2
	add	r0, r4, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.L688:
	.align	2, 0
.L687:
	.word	gStringVar1
	.word	gStringVar4
	.word	gText_QuestLog_ArrivedInLocation
.Lfe117:
	.size	 LoadEvent_ArrivedInLocation,.Lfe117-LoadEvent_ArrivedInLocation
	.align	2, 0
	.type	 TranslateLinkPartnersName,function
	.thumb_func
TranslateLinkPartnersName:
	push	{lr}
	add	r1, r0, #0
	ldrb	r0, [r1]
	add	r1, r1, #0x1
	cmp	r0, #0xfc
	bne	.L690	@cond_branch
	ldrb	r0, [r1]
	add	r1, r1, #0x1
	cmp	r0, #0x15
	bne	.L690	@cond_branch
	mov	r2, #0x0
	b	.L697
.L695:
	add	r1, r1, #0x1
	add	r2, r2, #0x1
	cmp	r2, #0x4
	bgt	.L692	@cond_branch
.L697:
	ldrb	r0, [r1]
	cmp	r0, #0xfc
	bne	.L695	@cond_branch
.L692:
	mov	r0, #0xfc
	strb	r0, [r1]
	add	r1, r1, #0x1
	mov	r0, #0x16
	strb	r0, [r1]
	mov	r0, #0xff
	strb	r0, [r1, #0x1]
.L690:
	pop	{r0}
	bx	r0
.Lfe118:
	.size	 TranslateLinkPartnersName,.Lfe118-TranslateLinkPartnersName
.text
	.align	2, 0 @ Don't pad with nop

