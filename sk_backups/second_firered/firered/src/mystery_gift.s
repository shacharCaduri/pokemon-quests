@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
	.section .rodata
	.align	1, 0
	.type	 sReceivedGiftFlags,object
sReceivedGiftFlags:
	.short	0x2a7
	.short	0x2a8
	.short	0x2a9
	.short	0x2aa
	.short	0x2ab
	.short	0x2ac
	.short	0x2ad
	.short	0x2ae
	.short	0x2af
	.short	0x2b0
	.short	0x2b1
	.short	0x2b2
	.short	0x2b3
	.short	0x2b4
	.short	0x2b5
	.short	0x2b6
	.short	0x2b7
	.short	0x2b8
	.short	0x2b9
	.short	0x2ba
	.size	 sReceivedGiftFlags,40
	.section ewram_data,"aw"
	.align	2, 0
	.type	 sStatsEnabled,object
	.size	 sStatsEnabled,4
sStatsEnabled:
	.word	0x0
.text
	.align	2, 0
	.globl	ClearMysteryGift
	.type	 ClearMysteryGift,function
	.thumb_func
ClearMysteryGift:
	push	{lr}
	add	sp, sp, #-0x4
	mov	r0, #0x0
	str	r0, [sp]
	ldr	r0, .L5
	ldr	r1, [r0]
	ldr	r0, .L5+0x4
	add	r1, r1, r0
	ldr	r2, .L5+0x8
	mov	r0, sp
	bl	CpuSet
	bl	ClearSavedWonderNewsMetadata
	bl	InitQuestionnaireWords
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L6:
	.align	2, 0
.L5:
	.word	gSaveBlock1Ptr
	.word	0x3120
	.word	0x50000db
.Lfe1:
	.size	 ClearMysteryGift,.Lfe1-ClearMysteryGift
	.align	2, 0
	.globl	GetSavedWonderNews
	.type	 GetSavedWonderNews,function
	.thumb_func
GetSavedWonderNews:
	ldr	r0, .L8
	ldr	r0, [r0]
	ldr	r1, .L8+0x4
	add	r0, r0, r1
	bx	lr
.L9:
	.align	2, 0
.L8:
	.word	gSaveBlock1Ptr
	.word	0x3124
.Lfe2:
	.size	 GetSavedWonderNews,.Lfe2-GetSavedWonderNews
	.align	2, 0
	.globl	GetSavedWonderCard
	.type	 GetSavedWonderCard,function
	.thumb_func
GetSavedWonderCard:
	ldr	r0, .L11
	ldr	r0, [r0]
	ldr	r1, .L11+0x4
	add	r0, r0, r1
	bx	lr
.L12:
	.align	2, 0
.L11:
	.word	gSaveBlock1Ptr
	.word	0x32e4
.Lfe3:
	.size	 GetSavedWonderCard,.Lfe3-GetSavedWonderCard
	.align	2, 0
	.globl	GetSavedWonderCardMetadata
	.type	 GetSavedWonderCardMetadata,function
	.thumb_func
GetSavedWonderCardMetadata:
	ldr	r0, .L14
	ldr	r0, [r0]
	ldr	r1, .L14+0x4
	add	r0, r0, r1
	bx	lr
.L15:
	.align	2, 0
.L14:
	.word	gSaveBlock1Ptr
	.word	0x3434
.Lfe4:
	.size	 GetSavedWonderCardMetadata,.Lfe4-GetSavedWonderCardMetadata
	.align	2, 0
	.globl	GetSavedWonderNewsMetadata
	.type	 GetSavedWonderNewsMetadata,function
	.thumb_func
GetSavedWonderNewsMetadata:
	ldr	r0, .L17
	ldr	r0, [r0]
	ldr	r1, .L17+0x4
	add	r0, r0, r1
	bx	lr
.L18:
	.align	2, 0
.L17:
	.word	gSaveBlock1Ptr
	.word	0x3460
.Lfe5:
	.size	 GetSavedWonderNewsMetadata,.Lfe5-GetSavedWonderNewsMetadata
	.align	2, 0
	.globl	GetQuestionnaireWordsPtr
	.type	 GetQuestionnaireWordsPtr,function
	.thumb_func
GetQuestionnaireWordsPtr:
	ldr	r0, .L20
	ldr	r0, [r0]
	ldr	r1, .L20+0x4
	add	r0, r0, r1
	bx	lr
.L21:
	.align	2, 0
.L20:
	.word	gSaveBlock1Ptr
	.word	0x3458
.Lfe6:
	.size	 GetQuestionnaireWordsPtr,.Lfe6-GetQuestionnaireWordsPtr
	.align	2, 0
	.globl	ClearSavedWonderNewsAndRelated
	.type	 ClearSavedWonderNewsAndRelated,function
	.thumb_func
ClearSavedWonderNewsAndRelated:
	push	{lr}
	bl	ClearSavedWonderNews
	pop	{r0}
	bx	r0
.Lfe7:
	.size	 ClearSavedWonderNewsAndRelated,.Lfe7-ClearSavedWonderNewsAndRelated
	.align	2, 0
	.globl	SaveWonderNews
	.type	 SaveWonderNews,function
	.thumb_func
SaveWonderNews:
	push	{r4, r5, r6, r7, lr}
	add	r7, r0, #0
	bl	ValidateWonderNews
	cmp	r0, #0
	beq	.L24	@cond_branch
	bl	ClearSavedWonderNews
	ldr	r4, .L26
	ldr	r0, [r4]
	ldr	r5, .L26+0x4
	add	r0, r0, r5
	mov	r6, #0xde
	lsl	r6, r6, #0x1
	add	r1, r7, #0
	add	r2, r6, #0
	bl	memcpy
	ldr	r0, [r4]
	add	r0, r0, r5
	add	r1, r6, #0
	bl	CalcCRC16WithTable
	ldr	r1, [r4]
	ldr	r2, .L26+0x8
	add	r1, r1, r2
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	str	r0, [r1]
	mov	r0, #0x1
	b	.L25
.L27:
	.align	2, 0
.L26:
	.word	gSaveBlock1Ptr
	.word	0x3124
	.word	0x3120
.L24:
	mov	r0, #0x0
.L25:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe8:
	.size	 SaveWonderNews,.Lfe8-SaveWonderNews
	.align	2, 0
	.globl	ValidateSavedWonderNews
	.type	 ValidateSavedWonderNews,function
	.thumb_func
ValidateSavedWonderNews:
	push	{r4, lr}
	ldr	r4, .L32
	ldr	r0, [r4]
	ldr	r1, .L32+0x4
	add	r0, r0, r1
	mov	r1, #0xde
	lsl	r1, r1, #0x1
	bl	CalcCRC16WithTable
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r4, [r4]
	ldr	r2, .L32+0x8
	add	r1, r4, r2
	ldr	r1, [r1]
	cmp	r0, r1
	bne	.L30	@cond_branch
	ldr	r1, .L32+0x4
	add	r0, r4, r1
	bl	ValidateWonderNews
	cmp	r0, #0
	beq	.L30	@cond_branch
	mov	r0, #0x1
	b	.L31
.L33:
	.align	2, 0
.L32:
	.word	gSaveBlock1Ptr
	.word	0x3124
	.word	0x3120
.L30:
	mov	r0, #0x0
.L31:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe9:
	.size	 ValidateSavedWonderNews,.Lfe9-ValidateSavedWonderNews
	.align	2, 0
	.type	 ValidateWonderNews,function
	.thumb_func
ValidateWonderNews:
	push	{lr}
	ldrh	r0, [r0]
	cmp	r0, #0
	beq	.L35	@cond_branch
	mov	r0, #0x1
	b	.L36
.L35:
	mov	r0, #0x0
.L36:
	pop	{r1}
	bx	r1
.Lfe10:
	.size	 ValidateWonderNews,.Lfe10-ValidateWonderNews
	.align	2, 0
	.globl	IsSendingSavedWonderNewsAllowed
	.type	 IsSendingSavedWonderNewsAllowed,function
	.thumb_func
IsSendingSavedWonderNewsAllowed:
	push	{lr}
	ldr	r0, .L40
	ldr	r0, [r0]
	ldr	r1, .L40+0x4
	add	r0, r0, r1
	ldrb	r0, [r0, #0x2]
	cmp	r0, #0
	beq	.L38	@cond_branch
	mov	r0, #0x1
	b	.L39
.L41:
	.align	2, 0
.L40:
	.word	gSaveBlock1Ptr
	.word	0x3124
.L38:
	mov	r0, #0x0
.L39:
	pop	{r1}
	bx	r1
.Lfe11:
	.size	 IsSendingSavedWonderNewsAllowed,.Lfe11-IsSendingSavedWonderNewsAllowed
	.align	2, 0
	.type	 ClearSavedWonderNews,function
	.thumb_func
ClearSavedWonderNews:
	push	{r4, lr}
	add	sp, sp, #-0x4
	mov	r4, #0x0
	str	r4, [sp]
	bl	GetSavedWonderNews
	add	r1, r0, #0
	ldr	r2, .L43
	mov	r0, sp
	bl	CpuSet
	ldr	r0, .L43+0x4
	ldr	r0, [r0]
	ldr	r1, .L43+0x8
	add	r0, r0, r1
	str	r4, [r0]
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L44:
	.align	2, 0
.L43:
	.word	0x500006f
	.word	gSaveBlock1Ptr
	.word	0x3120
.Lfe12:
	.size	 ClearSavedWonderNews,.Lfe12-ClearSavedWonderNews
	.align	2, 0
	.type	 ClearSavedWonderNewsMetadata,function
	.thumb_func
ClearSavedWonderNewsMetadata:
	push	{lr}
	add	sp, sp, #-0x4
	mov	r0, #0x0
	str	r0, [sp]
	bl	GetSavedWonderNewsMetadata
	add	r1, r0, #0
	ldr	r2, .L46
	mov	r0, sp
	bl	CpuSet
	bl	WonderNews_Reset
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L47:
	.align	2, 0
.L46:
	.word	0x5000001
.Lfe13:
	.size	 ClearSavedWonderNewsMetadata,.Lfe13-ClearSavedWonderNewsMetadata
	.align	2, 0
	.globl	IsWonderNewsSameAsSaved
	.type	 IsWonderNewsSameAsSaved,function
	.thumb_func
IsWonderNewsSameAsSaved:
	push	{r4, r5, lr}
	add	r5, r0, #0
	ldr	r0, .L59
	ldr	r0, [r0]
	ldr	r1, .L59+0x4
	add	r4, r0, r1
	bl	ValidateSavedWonderNews
	cmp	r0, #0
	bne	.L49	@cond_branch
.L58:
	mov	r0, #0x0
	b	.L56
.L60:
	.align	2, 0
.L59:
	.word	gSaveBlock1Ptr
	.word	0x3124
.L49:
	mov	r2, #0x0
	ldr	r3, .L61
.L53:
	add	r0, r4, r2
	add	r1, r5, r2
	ldrb	r0, [r0]
	ldrb	r1, [r1]
	cmp	r0, r1
	bne	.L58	@cond_branch
	add	r2, r2, #0x1
	cmp	r2, r3
	bls	.L53	@cond_branch
	mov	r0, #0x1
.L56:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L62:
	.align	2, 0
.L61:
	.word	0x1bb
.Lfe14:
	.size	 IsWonderNewsSameAsSaved,.Lfe14-IsWonderNewsSameAsSaved
	.align	2, 0
	.globl	ClearSavedWonderCardAndRelated
	.type	 ClearSavedWonderCardAndRelated,function
	.thumb_func
ClearSavedWonderCardAndRelated:
	push	{lr}
	bl	ClearSavedWonderCard
	bl	ClearSavedWonderCardMetadata
	bl	ClearSavedTrainerIds
	bl	ClearRamScript
	bl	ClearMysteryGiftFlags
	bl	ClearMysteryGiftVars
	ldr	r0, .L64
	ldr	r0, [r0]
	mov	r1, #0x94
	lsl	r1, r1, #0x3
	add	r0, r0, r1
	bl	ClearEReaderTrainer
	pop	{r0}
	bx	r0
.L65:
	.align	2, 0
.L64:
	.word	gSaveBlock2Ptr
.Lfe15:
	.size	 ClearSavedWonderCardAndRelated,.Lfe15-ClearSavedWonderCardAndRelated
	.align	2, 0
	.globl	SaveWonderCard
	.type	 SaveWonderCard,function
	.thumb_func
SaveWonderCard:
	push	{r4, r5, r6, r7, lr}
	add	r7, r0, #0
	bl	ValidateWonderCard
	cmp	r0, #0
	beq	.L67	@cond_branch
	bl	ClearSavedWonderCardAndRelated
	ldr	r4, .L69
	ldr	r0, [r4]
	ldr	r5, .L69+0x4
	add	r0, r0, r5
	mov	r6, #0xa6
	lsl	r6, r6, #0x1
	add	r1, r7, #0
	add	r2, r6, #0
	bl	memcpy
	ldr	r0, [r4]
	add	r0, r0, r5
	add	r1, r6, #0
	bl	CalcCRC16WithTable
	ldr	r1, [r4]
	ldr	r3, .L69+0x8
	add	r2, r1, r3
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	str	r0, [r2]
	ldr	r0, .L69+0xc
	add	r2, r1, r0
	add	r1, r1, r5
	ldrh	r0, [r1, #0x2]
	strh	r0, [r2, #0x6]
	mov	r0, #0x1
	b	.L68
.L70:
	.align	2, 0
.L69:
	.word	gSaveBlock1Ptr
	.word	0x32e4
	.word	0x32e0
	.word	0x3434
.L67:
	mov	r0, #0x0
.L68:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe16:
	.size	 SaveWonderCard,.Lfe16-SaveWonderCard
	.align	2, 0
	.globl	ValidateSavedWonderCard
	.type	 ValidateSavedWonderCard,function
	.thumb_func
ValidateSavedWonderCard:
	push	{r4, r5, lr}
	ldr	r5, .L76
	ldr	r0, [r5]
	ldr	r1, .L76+0x4
	add	r4, r0, r1
	add	r1, r1, #0x4
	add	r0, r0, r1
	mov	r1, #0xa6
	lsl	r1, r1, #0x1
	bl	CalcCRC16WithTable
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, [r4]
	cmp	r1, r0
	bne	.L74	@cond_branch
	ldr	r0, [r5]
	ldr	r1, .L76+0x8
	add	r0, r0, r1
	bl	ValidateWonderCard
	cmp	r0, #0
	beq	.L74	@cond_branch
	bl	ValidateRamScript
	cmp	r0, #0
	beq	.L74	@cond_branch
	mov	r0, #0x1
	b	.L75
.L77:
	.align	2, 0
.L76:
	.word	gSaveBlock1Ptr
	.word	0x32e0
	.word	0x32e4
.L74:
	mov	r0, #0x0
.L75:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe17:
	.size	 ValidateSavedWonderCard,.Lfe17-ValidateSavedWonderCard
	.align	2, 0
	.type	 ValidateWonderCard,function
	.thumb_func
ValidateWonderCard:
	push	{lr}
	add	r2, r0, #0
	ldrh	r0, [r2]
	cmp	r0, #0
	beq	.L83	@cond_branch
	ldrb	r1, [r2, #0x8]
	lsl	r0, r1, #0x1e
	lsr	r0, r0, #0x1e
	cmp	r0, #0x2
	bhi	.L83	@cond_branch
	mov	r0, #0xc0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L81	@cond_branch
	cmp	r0, #0x40
	beq	.L81	@cond_branch
	cmp	r0, #0x80
	bne	.L83	@cond_branch
.L81:
	lsl	r0, r1, #0x1a
	lsr	r0, r0, #0x1c
	cmp	r0, #0x7
	bhi	.L83	@cond_branch
	ldrb	r0, [r2, #0x9]
	cmp	r0, #0x7
	bhi	.L83	@cond_branch
	mov	r0, #0x1
	b	.L84
.L83:
	mov	r0, #0x0
.L84:
	pop	{r1}
	bx	r1
.Lfe18:
	.size	 ValidateWonderCard,.Lfe18-ValidateWonderCard
	.align	2, 0
	.globl	IsSendingSavedWonderCardAllowed
	.type	 IsSendingSavedWonderCardAllowed,function
	.thumb_func
IsSendingSavedWonderCardAllowed:
	push	{lr}
	ldr	r0, .L88
	ldr	r0, [r0]
	ldr	r1, .L88+0x4
	add	r0, r0, r1
	ldrb	r1, [r0, #0x8]
	mov	r0, #0xc0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L86	@cond_branch
	mov	r0, #0x1
	b	.L87
.L89:
	.align	2, 0
.L88:
	.word	gSaveBlock1Ptr
	.word	0x32e4
.L86:
	mov	r0, #0x0
.L87:
	pop	{r1}
	bx	r1
.Lfe19:
	.size	 IsSendingSavedWonderCardAllowed,.Lfe19-IsSendingSavedWonderCardAllowed
	.align	2, 0
	.type	 ClearSavedWonderCard,function
	.thumb_func
ClearSavedWonderCard:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	mov	r5, #0x0
	str	r5, [sp]
	ldr	r4, .L91
	ldr	r1, [r4]
	ldr	r0, .L91+0x4
	add	r1, r1, r0
	ldr	r2, .L91+0x8
	mov	r0, sp
	bl	CpuSet
	ldr	r0, [r4]
	ldr	r1, .L91+0xc
	add	r0, r0, r1
	str	r5, [r0]
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L92:
	.align	2, 0
.L91:
	.word	gSaveBlock1Ptr
	.word	0x32e4
	.word	0x5000053
	.word	0x32e0
.Lfe20:
	.size	 ClearSavedWonderCard,.Lfe20-ClearSavedWonderCard
	.align	2, 0
	.type	 ClearSavedWonderCardMetadata,function
	.thumb_func
ClearSavedWonderCardMetadata:
	push	{r4, lr}
	add	sp, sp, #-0x4
	mov	r4, #0x0
	str	r4, [sp]
	bl	GetSavedWonderCardMetadata
	add	r1, r0, #0
	ldr	r2, .L94
	mov	r0, sp
	bl	CpuSet
	ldr	r0, .L94+0x4
	ldr	r0, [r0]
	ldr	r1, .L94+0x8
	add	r0, r0, r1
	str	r4, [r0]
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L95:
	.align	2, 0
.L94:
	.word	0x5000009
	.word	gSaveBlock1Ptr
	.word	0x3430
.Lfe21:
	.size	 ClearSavedWonderCardMetadata,.Lfe21-ClearSavedWonderCardMetadata
	.align	2, 0
	.globl	GetWonderCardFlagId
	.type	 GetWonderCardFlagId,function
	.thumb_func
GetWonderCardFlagId:
	push	{lr}
	bl	ValidateSavedWonderCard
	cmp	r0, #0
	bne	.L97	@cond_branch
	mov	r0, #0x0
	b	.L98
.L97:
	ldr	r0, .L99
	ldr	r0, [r0]
	ldr	r1, .L99+0x4
	add	r0, r0, r1
	ldrh	r0, [r0]
.L98:
	pop	{r1}
	bx	r1
.L100:
	.align	2, 0
.L99:
	.word	gSaveBlock1Ptr
	.word	0x32e4
.Lfe22:
	.size	 GetWonderCardFlagId,.Lfe22-GetWonderCardFlagId
	.align	2, 0
	.globl	DisableWonderCardSending
	.type	 DisableWonderCardSending,function
	.thumb_func
DisableWonderCardSending:
	push	{lr}
	add	r2, r0, #0
	ldrb	r1, [r2, #0x8]
	mov	r0, #0xc0
	and	r0, r0, r1
	cmp	r0, #0x40
	bne	.L102	@cond_branch
	mov	r0, #0x3f
	and	r0, r0, r1
	strb	r0, [r2, #0x8]
.L102:
	pop	{r0}
	bx	r0
.Lfe23:
	.size	 DisableWonderCardSending,.Lfe23-DisableWonderCardSending
	.align	2, 0
	.type	 IsWonderCardFlagIDInValidRange,function
	.thumb_func
IsWonderCardFlagIDInValidRange:
	push	{lr}
	lsl	r0, r0, #0x10
	ldr	r1, .L106
	add	r0, r0, r1
	lsr	r0, r0, #0x10
	cmp	r0, #0x13
	bls	.L104	@cond_branch
	mov	r0, #0x0
	b	.L105
.L107:
	.align	2, 0
.L106:
	.word	-0x3e80000
.L104:
	mov	r0, #0x1
.L105:
	pop	{r1}
	bx	r1
.Lfe24:
	.size	 IsWonderCardFlagIDInValidRange,.Lfe24-IsWonderCardFlagIDInValidRange
	.align	2, 0
	.globl	IsSavedWonderCardGiftNotReceived
	.type	 IsSavedWonderCardGiftNotReceived,function
	.thumb_func
IsSavedWonderCardGiftNotReceived:
	push	{r4, lr}
	bl	GetWonderCardFlagId
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	add	r0, r4, #0
	bl	IsWonderCardFlagIDInValidRange
	cmp	r0, #0
	beq	.L110	@cond_branch
	ldr	r1, .L112
	ldr	r2, .L112+0x4
	add	r0, r4, r2
	lsl	r0, r0, #0x1
	add	r0, r0, r1
	ldrh	r0, [r0]
	bl	FlagGet
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x1
	beq	.L110	@cond_branch
	mov	r0, #0x1
	b	.L111
.L113:
	.align	2, 0
.L112:
	.word	sReceivedGiftFlags
	.word	-0x3e8
.L110:
	mov	r0, #0x0
.L111:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe25:
	.size	 IsSavedWonderCardGiftNotReceived,.Lfe25-IsSavedWonderCardGiftNotReceived
	.align	2, 0
	.type	 GetNumStampsInMetadata,function
	.thumb_func
GetNumStampsInMetadata:
	push	{lr}
	mov	r3, #0x0
	cmp	r3, r1
	bge	.L116	@cond_branch
	add	r2, r0, #0
	add	r2, r2, #0x8
.L118:
	ldrh	r0, [r2, #0xe]
	cmp	r0, #0
	beq	.L117	@cond_branch
	ldrh	r0, [r2]
	cmp	r0, #0
	beq	.L117	@cond_branch
	add	r3, r3, #0x1
.L117:
	add	r2, r2, #0x2
	sub	r1, r1, #0x1
	cmp	r1, #0
	bne	.L118	@cond_branch
.L116:
	add	r0, r3, #0
	pop	{r1}
	bx	r1
.Lfe26:
	.size	 GetNumStampsInMetadata,.Lfe26-GetNumStampsInMetadata
	.align	2, 0
	.type	 IsStampInMetadata,function
	.thumb_func
IsStampInMetadata:
	push	{r4, r5, r6, r7, lr}
	add	r5, r0, #0
	add	r4, r1, #0
	mov	r1, #0x0
	cmp	r1, r2
	bge	.L123	@cond_branch
	ldrh	r6, [r4, #0x2]
	mov	r0, #0x16
	add	r0, r0, r5
	mov	ip, r0
.L125:
	lsl	r3, r1, #0x1
	mov	r7, ip
	ldrh	r0, [r7]
	cmp	r0, r6
	beq	.L130	@cond_branch
	add	r0, r5, #0
	add	r0, r0, #0x8
	add	r0, r0, r3
	ldrh	r0, [r0]
	ldrh	r3, [r4]
	cmp	r0, r3
	bne	.L124	@cond_branch
.L130:
	mov	r0, #0x1
	b	.L129
.L124:
	mov	r7, #0x2
	add	ip, ip, r7
	add	r1, r1, #0x1
	cmp	r1, r2
	blt	.L125	@cond_branch
.L123:
	mov	r0, #0x0
.L129:
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe27:
	.size	 IsStampInMetadata,.Lfe27-IsStampInMetadata
	.align	2, 0
	.type	 ValidateStamp,function
	.thumb_func
ValidateStamp:
	push	{lr}
	add	r1, r0, #0
	ldrh	r0, [r1, #0x2]
	cmp	r0, #0
	beq	.L134	@cond_branch
	ldrh	r1, [r1]
	cmp	r1, #0
	beq	.L134	@cond_branch
	ldr	r0, .L136
	cmp	r1, r0
	bhi	.L134	@cond_branch
	mov	r0, #0x1
	b	.L135
.L137:
	.align	2, 0
.L136:
	.word	0x19b
.L134:
	mov	r0, #0x0
.L135:
	pop	{r1}
	bx	r1
.Lfe28:
	.size	 ValidateStamp,.Lfe28-ValidateStamp
	.align	2, 0
	.type	 GetNumStampsInSavedCard,function
	.thumb_func
GetNumStampsInSavedCard:
	push	{lr}
	bl	ValidateSavedWonderCard
	cmp	r0, #0
	beq	.L140	@cond_branch
	ldr	r0, .L142
	ldr	r3, [r0]
	ldr	r0, .L142+0x4
	add	r2, r3, r0
	ldrb	r1, [r2, #0x8]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0x1
	bne	.L140	@cond_branch
	ldr	r1, .L142+0x8
	add	r0, r3, r1
	ldrb	r1, [r2, #0x9]
	bl	GetNumStampsInMetadata
	b	.L141
.L143:
	.align	2, 0
.L142:
	.word	gSaveBlock1Ptr
	.word	0x32e4
	.word	0x3434
.L140:
	mov	r0, #0x0
.L141:
	pop	{r1}
	bx	r1
.Lfe29:
	.size	 GetNumStampsInSavedCard,.Lfe29-GetNumStampsInSavedCard
	.align	2, 0
	.globl	MysteryGift_TrySaveStamp
	.type	 MysteryGift_TrySaveStamp,function
	.thumb_func
MysteryGift_TrySaveStamp:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	ldr	r6, .L155
	ldr	r0, [r6]
	ldr	r1, .L155+0x4
	add	r0, r0, r1
	ldrb	r4, [r0, #0x9]
	add	r0, r5, #0
	bl	ValidateStamp
	cmp	r0, #0
	beq	.L148	@cond_branch
	ldr	r0, [r6]
	ldr	r1, .L155+0x8
	add	r0, r0, r1
	add	r1, r5, #0
	add	r2, r4, #0
	bl	IsStampInMetadata
	cmp	r0, #0
	beq	.L146	@cond_branch
	b	.L148
.L156:
	.align	2, 0
.L155:
	.word	gSaveBlock1Ptr
	.word	0x32e4
	.word	0x3434
.L154:
	ldrh	r0, [r5, #0x2]
	strh	r0, [r1]
	ldrh	r0, [r5]
	strh	r0, [r2]
	mov	r0, #0x1
	b	.L153
.L146:
	mov	r3, #0x0
	cmp	r3, r4
	bge	.L148	@cond_branch
	ldr	r0, [r6]
	ldr	r6, .L157
	add	r2, r0, r6
	add	r6, r6, #0xe
	add	r1, r0, r6
.L150:
	ldrh	r0, [r2, #0xe]
	cmp	r0, #0
	bne	.L149	@cond_branch
	ldrh	r0, [r2]
	cmp	r0, #0
	beq	.L154	@cond_branch
.L149:
	add	r2, r2, #0x2
	add	r1, r1, #0x2
	add	r3, r3, #0x1
	cmp	r3, r4
	blt	.L150	@cond_branch
.L148:
	mov	r0, #0x0
.L153:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L158:
	.align	2, 0
.L157:
	.word	0x343c
.Lfe30:
	.size	 MysteryGift_TrySaveStamp,.Lfe30-MysteryGift_TrySaveStamp
	.align	2, 0
	.globl	MysteryGift_LoadLinkGameData
	.type	 MysteryGift_LoadLinkGameData,function
	.thumb_func
MysteryGift_LoadLinkGameData:
	push	{r4, r5, r6, r7, lr}
	mov	r7, sl
	mov	r6, r9
	mov	r5, r8
	push	{r5, r6, r7}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	mov	r0, #0x0
	str	r0, [sp]
	ldr	r2, .L172
	mov	r0, sp
	add	r1, r4, #0
	bl	CpuSet
	ldr	r0, .L172+0x4
	str	r0, [r4]
	mov	r0, #0x1
	strh	r0, [r4, #0x4]
	str	r0, [r4, #0x8]
	strh	r0, [r4, #0xc]
	str	r0, [r4, #0x10]
	bl	ValidateSavedWonderCard
	cmp	r0, #0
	beq	.L160	@cond_branch
	bl	GetSavedWonderCard
	ldrh	r0, [r0]
	strh	r0, [r4, #0x14]
	bl	GetSavedWonderCardMetadata
	add	r1, r4, #0
	add	r1, r1, #0x20
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	ldmia	r0!, {r2, r3, r5}
	stmia	r1!, {r2, r3, r5}
	bl	GetSavedWonderCard
	ldrb	r1, [r0, #0x9]
	add	r0, r4, #0
	add	r0, r0, #0x44
	strb	r1, [r0]
	b	.L161
.L173:
	.align	2, 0
.L172:
	.word	0x5000019
	.word	0x101
.L160:
	strh	r0, [r4, #0x14]
.L161:
	add	r5, r4, #0
	add	r5, r5, #0x4c
	ldr	r0, .L174
	mov	r8, r0
	add	r6, r4, #0
	add	r6, r6, #0x45
	add	r7, r4, #0
	add	r7, r7, #0x50
	mov	r1, #0x5c
	add	r1, r1, r4
	mov	r9, r1
	mov	r2, #0x60
	add	r2, r2, r4
	mov	sl, r2
	ldr	r0, .L174+0x4
	ldr	r0, [r0]
	ldr	r3, .L174+0x8
	add	r2, r0, r3
	add	r1, r4, #0
	add	r1, r1, #0x16
	mov	r3, #0x3
.L165:
	ldrh	r0, [r2]
	strh	r0, [r1]
	add	r2, r2, #0x2
	add	r1, r1, #0x2
	sub	r3, r3, #0x1
	cmp	r3, #0
	bge	.L165	@cond_branch
	mov	r0, r8
	ldr	r1, [r0]
	add	r1, r1, #0xa
	add	r0, r5, #0
	bl	CopyTrainerId
	mov	r2, r8
	ldr	r1, [r2]
	add	r0, r6, #0
	bl	StringCopy
	ldr	r0, .L174+0x4
	ldr	r0, [r0]
	ldr	r3, .L174+0xc
	add	r2, r0, r3
	add	r1, r7, #0
	mov	r3, #0x5
.L170:
	ldrh	r0, [r2]
	strh	r0, [r1]
	add	r2, r2, #0x2
	add	r1, r1, #0x2
	sub	r3, r3, #0x1
	cmp	r3, #0
	bge	.L170	@cond_branch
	ldr	r1, .L174+0x10
	mov	r0, r9
	mov	r2, #0x4
	bl	memcpy
	ldr	r0, .L174+0x14
	ldrb	r0, [r0]
	mov	r5, sl
	strb	r0, [r5]
	add	sp, sp, #0x4
	pop	{r3, r4, r5}
	mov	r8, r3
	mov	r9, r4
	mov	sl, r5
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L175:
	.align	2, 0
.L174:
	.word	gSaveBlock2Ptr
	.word	gSaveBlock1Ptr
	.word	0x3458
	.word	0x2ca0
	.word	RomHeaderGameCode
	.word	RomHeaderSoftwareVersion
.Lfe31:
	.size	 MysteryGift_LoadLinkGameData,.Lfe31-MysteryGift_LoadLinkGameData
	.align	2, 0
	.globl	MysteryGift_ValidateLinkGameData
	.type	 MysteryGift_ValidateLinkGameData,function
	.thumb_func
MysteryGift_ValidateLinkGameData:
	push	{lr}
	add	r2, r0, #0
	ldr	r1, [r2]
	ldr	r0, .L183
	cmp	r1, r0
	bne	.L181	@cond_branch
	ldrh	r1, [r2, #0x4]
	mov	r3, #0x1
	add	r0, r3, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L181	@cond_branch
	ldr	r0, [r2, #0x8]
	and	r0, r0, r3
	cmp	r0, #0
	beq	.L181	@cond_branch
	ldrh	r1, [r2, #0xc]
	add	r0, r3, #0
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L181	@cond_branch
	ldr	r0, [r2, #0x10]
	mov	r1, #0xf
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L181	@cond_branch
	mov	r0, #0x1
	b	.L182
.L184:
	.align	2, 0
.L183:
	.word	0x101
.L181:
	mov	r0, #0x0
.L182:
	pop	{r1}
	bx	r1
.Lfe32:
	.size	 MysteryGift_ValidateLinkGameData,.Lfe32-MysteryGift_ValidateLinkGameData
	.align	2, 0
	.globl	MysteryGift_CompareCardFlags
	.type	 MysteryGift_CompareCardFlags,function
	.thumb_func
MysteryGift_CompareCardFlags:
	push	{lr}
	ldrh	r1, [r1, #0x14]
	cmp	r1, #0
	bne	.L186	@cond_branch
	mov	r0, #0x0
	b	.L188
.L186:
	ldrh	r0, [r0]
	cmp	r0, r1
	beq	.L187	@cond_branch
	mov	r0, #0x2
	b	.L188
.L187:
	mov	r0, #0x1
.L188:
	pop	{r1}
	bx	r1
.Lfe33:
	.size	 MysteryGift_CompareCardFlags,.Lfe33-MysteryGift_CompareCardFlags
	.align	2, 0
	.globl	MysteryGift_CheckStamps
	.type	 MysteryGift_CheckStamps,function
	.thumb_func
MysteryGift_CheckStamps:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	add	r4, r1, #0
	add	r5, r4, #0
	add	r5, r5, #0x20
	add	r4, r4, #0x44
	ldrb	r1, [r4]
	add	r0, r5, #0
	bl	GetNumStampsInMetadata
	ldrb	r2, [r4]
	sub	r4, r2, r0
	cmp	r4, #0
	bne	.L190	@cond_branch
	mov	r0, #0x1
	b	.L193
.L190:
	add	r0, r5, #0
	add	r1, r6, #0
	bl	IsStampInMetadata
	cmp	r0, #0
	beq	.L191	@cond_branch
	mov	r0, #0x3
	b	.L193
.L191:
	cmp	r4, #0x1
	beq	.L192	@cond_branch
	mov	r0, #0x2
	b	.L193
.L192:
	mov	r0, #0x4
.L193:
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe34:
	.size	 MysteryGift_CheckStamps,.Lfe34-MysteryGift_CheckStamps
	.align	2, 0
	.globl	MysteryGift_DoesQuestionnaireMatch
	.type	 MysteryGift_DoesQuestionnaireMatch,function
	.thumb_func
MysteryGift_DoesQuestionnaireMatch:
	push	{r4, lr}
	mov	r3, #0x0
	add	r2, r0, #0
	add	r2, r2, #0x16
.L198:
	ldrh	r0, [r2]
	ldrh	r4, [r1]
	cmp	r0, r4
	beq	.L197	@cond_branch
	mov	r0, #0x0
	b	.L201
.L197:
	add	r1, r1, #0x2
	add	r2, r2, #0x2
	add	r3, r3, #0x1
	cmp	r3, #0x3
	ble	.L198	@cond_branch
	mov	r0, #0x1
.L201:
	pop	{r4}
	pop	{r1}
	bx	r1
.Lfe35:
	.size	 MysteryGift_DoesQuestionnaireMatch,.Lfe35-MysteryGift_DoesQuestionnaireMatch
	.align	2, 0
	.type	 GetNumStampsInLinkData,function
	.thumb_func
GetNumStampsInLinkData:
	push	{lr}
	add	r2, r0, #0
	add	r2, r2, #0x20
	add	r0, r0, #0x44
	ldrb	r1, [r0]
	add	r0, r2, #0
	bl	GetNumStampsInMetadata
	pop	{r1}
	bx	r1
.Lfe36:
	.size	 GetNumStampsInLinkData,.Lfe36-GetNumStampsInLinkData
	.section .rodata
	.align	2, 0
.LC25:
	.ascii	"C:/WORK/POKeFRLG/src/pm_lgfr_ose/source/mevent.c\000"
	.align	2, 0
.LC27:
	.ascii	"0\000"
.text
	.align	2, 0
	.globl	MysteryGift_GetCardStatFromLinkData
	.type	 MysteryGift_GetCardStatFromLinkData,function
	.thumb_func
MysteryGift_GetCardStatFromLinkData:
	push	{lr}
	add	r2, r0, #0
	cmp	r1, #0x4
	bhi	.L210	@cond_branch
	lsl	r0, r1, #0x2
	ldr	r1, .L213
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L214:
	.align	2, 0
.L213:
	.word	.L211
	.align	2, 0
	.align	2, 0
.L211:
	.word	.L205
	.word	.L206
	.word	.L207
	.word	.L208
	.word	.L209
.L205:
	ldrh	r0, [r2, #0x20]
	b	.L212
.L206:
	ldrh	r0, [r2, #0x22]
	b	.L212
.L207:
	ldrh	r0, [r2, #0x24]
	b	.L212
.L208:
	add	r0, r2, #0
	bl	GetNumStampsInLinkData
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	b	.L212
.L209:
	add	r0, r2, #0
	add	r0, r0, #0x44
	ldrb	r0, [r0]
	b	.L212
.L210:
	ldr	r0, .L215
	ldr	r1, .L215+0x4
	ldr	r2, .L215+0x8
	mov	r3, #0x1
	bl	AGBAssert
	mov	r0, #0x0
.L212:
	pop	{r1}
	bx	r1
.L216:
	.align	2, 0
.L215:
	.word	.LC25
	.word	0x339
	.word	.LC27
.Lfe37:
	.size	 MysteryGift_GetCardStatFromLinkData,.Lfe37-MysteryGift_GetCardStatFromLinkData
	.align	2, 0
	.type	 IncrementCardStat,function
	.thumb_func
IncrementCardStat:
	push	{r4, lr}
	add	r4, r0, #0
	ldr	r2, .L231
	ldr	r0, [r2]
	ldr	r1, .L231+0x4
	add	r0, r0, r1
	ldrb	r1, [r0, #0x8]
	mov	r0, #0x3
	and	r0, r0, r1
	add	r3, r2, #0
	cmp	r0, #0x2
	bne	.L218	@cond_branch
	mov	r2, #0x0
	cmp	r4, #0x4
	bhi	.L219	@cond_branch
	lsl	r0, r4, #0x2
	ldr	r1, .L231+0x8
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L232:
	.align	2, 0
.L231:
	.word	gSaveBlock1Ptr
	.word	0x32e4
	.word	.L225
	.align	2, 0
	.align	2, 0
.L225:
	.word	.L220
	.word	.L221
	.word	.L222
	.word	.L219
	.word	.L219
.L220:
	ldr	r0, [r3]
	ldr	r1, .L233
	b	.L230
.L234:
	.align	2, 0
.L233:
	.word	0x3434
.L221:
	ldr	r0, [r3]
	ldr	r1, .L235
	b	.L230
.L236:
	.align	2, 0
.L235:
	.word	0x3436
.L222:
	ldr	r0, [r3]
	ldr	r1, .L237
.L230:
	add	r2, r0, r1
.L219:
	cmp	r2, #0
	bne	.L227	@cond_branch
	ldr	r0, .L237+0x4
	mov	r1, #0xd9
	lsl	r1, r1, #0x2
	ldr	r2, .L237+0x8
	mov	r3, #0x1
	bl	AGBAssert
	b	.L218
.L238:
	.align	2, 0
.L237:
	.word	0x3438
	.word	.LC25
	.word	.LC27
.L227:
	ldrh	r0, [r2]
	add	r0, r0, #0x1
	strh	r0, [r2]
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r1, .L239
	cmp	r0, r1
	bls	.L218	@cond_branch
	strh	r1, [r2]
.L218:
	pop	{r4}
	pop	{r0}
	bx	r0
.L240:
	.align	2, 0
.L239:
	.word	0x3e7
.Lfe38:
	.size	 IncrementCardStat,.Lfe38-IncrementCardStat
	.align	2, 0
	.globl	MysteryGift_GetCardStat
	.type	 MysteryGift_GetCardStat,function
	.thumb_func
MysteryGift_GetCardStat:
	push	{lr}
	cmp	r0, #0x4
	bhi	.L242	@cond_branch
	lsl	r0, r0, #0x2
	ldr	r1, .L256
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L257:
	.align	2, 0
.L256:
	.word	.L253
	.align	2, 0
	.align	2, 0
.L253:
	.word	.L243
	.word	.L245
	.word	.L247
	.word	.L249
	.word	.L251
.L243:
	ldr	r0, .L258
	ldr	r2, [r0]
	ldr	r1, .L258+0x4
	add	r0, r2, r1
	ldrb	r1, [r0, #0x8]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0x2
	bne	.L242	@cond_branch
	ldr	r1, .L258+0x8
	add	r0, r2, r1
	ldrh	r0, [r0]
	b	.L255
.L259:
	.align	2, 0
.L258:
	.word	gSaveBlock1Ptr
	.word	0x32e4
	.word	0x3434
.L245:
	ldr	r0, .L260
	ldr	r2, [r0]
	ldr	r1, .L260+0x4
	add	r0, r2, r1
	ldrb	r1, [r0, #0x8]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0x2
	bne	.L242	@cond_branch
	ldr	r1, .L260+0x8
	add	r0, r2, r1
	ldrh	r0, [r0, #0x2]
	b	.L255
.L261:
	.align	2, 0
.L260:
	.word	gSaveBlock1Ptr
	.word	0x32e4
	.word	0x3434
.L247:
	ldr	r0, .L262
	ldr	r2, [r0]
	ldr	r1, .L262+0x4
	add	r0, r2, r1
	ldrb	r1, [r0, #0x8]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0x2
	bne	.L242	@cond_branch
	ldr	r1, .L262+0x8
	add	r0, r2, r1
	ldrh	r0, [r0, #0x4]
	b	.L255
.L263:
	.align	2, 0
.L262:
	.word	gSaveBlock1Ptr
	.word	0x32e4
	.word	0x3434
.L249:
	ldr	r0, .L264
	ldr	r0, [r0]
	ldr	r1, .L264+0x4
	add	r0, r0, r1
	ldrb	r1, [r0, #0x8]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0x1
	bne	.L242	@cond_branch
	bl	GetNumStampsInSavedCard
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	b	.L255
.L265:
	.align	2, 0
.L264:
	.word	gSaveBlock1Ptr
	.word	0x32e4
.L251:
	ldr	r0, .L266
	ldr	r0, [r0]
	ldr	r1, .L266+0x4
	add	r2, r0, r1
	ldrb	r1, [r2, #0x8]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0x1
	bne	.L242	@cond_branch
	ldrb	r0, [r2, #0x9]
	b	.L255
.L267:
	.align	2, 0
.L266:
	.word	gSaveBlock1Ptr
	.word	0x32e4
.L242:
	ldr	r0, .L268
	ldr	r1, .L268+0x4
	ldr	r2, .L268+0x8
	mov	r3, #0x1
	bl	AGBAssert
	mov	r0, #0x0
.L255:
	pop	{r1}
	bx	r1
.L269:
	.align	2, 0
.L268:
	.word	.LC25
	.word	0x391
	.word	.LC27
.Lfe39:
	.size	 MysteryGift_GetCardStat,.Lfe39-MysteryGift_GetCardStat
	.align	2, 0
	.globl	MysteryGift_DisableStats
	.type	 MysteryGift_DisableStats,function
	.thumb_func
MysteryGift_DisableStats:
	ldr	r1, .L271
	mov	r0, #0x0
	str	r0, [r1]
	bx	lr
.L272:
	.align	2, 0
.L271:
	.word	sStatsEnabled
.Lfe40:
	.size	 MysteryGift_DisableStats,.Lfe40-MysteryGift_DisableStats
	.align	2, 0
	.globl	MysteryGift_TryEnableStatsByFlagId
	.type	 MysteryGift_TryEnableStatsByFlagId,function
	.thumb_func
MysteryGift_TryEnableStatsByFlagId:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	add	r4, r0, #0
	ldr	r5, .L278
	mov	r0, #0x0
	str	r0, [r5]
	cmp	r4, #0
	beq	.L277	@cond_branch
	bl	ValidateSavedWonderCard
	cmp	r0, #0
	beq	.L276	@cond_branch
	ldr	r0, .L278+0x4
	ldr	r0, [r0]
	ldr	r1, .L278+0x8
	add	r0, r0, r1
	ldrh	r0, [r0]
	cmp	r0, r4
	bne	.L276	@cond_branch
	mov	r0, #0x1
	str	r0, [r5]
	b	.L277
.L279:
	.align	2, 0
.L278:
	.word	sStatsEnabled
	.word	gSaveBlock1Ptr
	.word	0x32e4
.L276:
	mov	r0, #0x0
.L277:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe41:
	.size	 MysteryGift_TryEnableStatsByFlagId,.Lfe41-MysteryGift_TryEnableStatsByFlagId
	.align	2, 0
	.globl	MysteryGift_TryIncrementStat
	.type	 MysteryGift_TryIncrementStat,function
	.thumb_func
MysteryGift_TryIncrementStat:
	push	{lr}
	add	r2, r0, #0
	ldr	r0, .L289
	ldr	r0, [r0]
	cmp	r0, #0
	beq	.L281	@cond_branch
	cmp	r2, #0x1
	beq	.L285	@cond_branch
	cmp	r2, #0x1
	bcc	.L284	@cond_branch
	cmp	r2, #0x2
	bne	.L286	@cond_branch
	ldr	r0, .L289+0x4
	ldr	r2, [r0]
	ldr	r0, .L289+0x8
	add	r2, r2, r0
	mov	r0, #0x2
	b	.L288
.L290:
	.align	2, 0
.L289:
	.word	sStatsEnabled
	.word	gSaveBlock1Ptr
	.word	0x3478
.L284:
	ldr	r0, .L291
	ldr	r2, [r0]
	ldr	r0, .L291+0x4
	add	r2, r2, r0
	mov	r0, #0x0
	b	.L288
.L292:
	.align	2, 0
.L291:
	.word	gSaveBlock1Ptr
	.word	0x3464
.L285:
	ldr	r0, .L293
	ldr	r2, [r0]
	ldr	r0, .L293+0x4
	add	r2, r2, r0
	mov	r0, #0x1
.L288:
	mov	r3, #0x5
	bl	IncrementCardStatForNewTrainer
	b	.L281
.L294:
	.align	2, 0
.L293:
	.word	gSaveBlock1Ptr
	.word	0x3464
.L286:
	ldr	r0, .L295
	mov	r1, #0xf7
	lsl	r1, r1, #0x2
	ldr	r2, .L295+0x4
	mov	r3, #0x1
	bl	AGBAssert
.L281:
	pop	{r0}
	bx	r0
.L296:
	.align	2, 0
.L295:
	.word	.LC25
	.word	.LC27
.Lfe42:
	.size	 MysteryGift_TryIncrementStat,.Lfe42-MysteryGift_TryIncrementStat
	.align	2, 0
	.type	 ClearSavedTrainerIds,function
	.thumb_func
ClearSavedTrainerIds:
	push	{lr}
	add	sp, sp, #-0x4
	mov	r0, #0x0
	str	r0, [sp]
	ldr	r0, .L298
	ldr	r1, [r0]
	ldr	r0, .L298+0x4
	add	r1, r1, r0
	ldr	r2, .L298+0x8
	mov	r0, sp
	bl	CpuSet
	add	sp, sp, #0x4
	pop	{r0}
	bx	r0
.L299:
	.align	2, 0
.L298:
	.word	gSaveBlock1Ptr
	.word	0x3464
	.word	0x500000a
.Lfe43:
	.size	 ClearSavedTrainerIds,.Lfe43-ClearSavedTrainerIds
	.align	2, 0
	.type	 RecordTrainerId,function
	.thumb_func
RecordTrainerId:
	push	{r4, r5, lr}
	add	r5, r0, #0
	add	r4, r1, #0
	mov	r1, #0x0
	cmp	r1, r2
	bge	.L302	@cond_branch
	ldr	r0, [r4]
	cmp	r0, r5
	beq	.L302	@cond_branch
	add	r3, r4, #0
.L303:
	add	r3, r3, #0x4
	add	r1, r1, #0x1
	cmp	r1, r2
	bge	.L302	@cond_branch
	ldr	r0, [r3]
	cmp	r0, r5
	bne	.L303	@cond_branch
.L302:
	cmp	r1, r2
	bne	.L307	@cond_branch
	sub	r3, r1, #0x1
	cmp	r3, #0
	ble	.L309	@cond_branch
	lsl	r0, r3, #0x2
	sub	r0, r0, #0x4
	add	r2, r0, r4
.L311:
	ldr	r0, [r2]
	str	r0, [r2, #0x4]
	sub	r2, r2, #0x4
	sub	r3, r3, #0x1
	cmp	r3, #0
	bgt	.L311	@cond_branch
.L309:
	str	r5, [r4]
	mov	r0, #0x1
	b	.L319
.L307:
	add	r3, r1, #0
	cmp	r3, #0
	ble	.L315	@cond_branch
	lsl	r0, r3, #0x2
	sub	r0, r0, #0x4
	add	r2, r0, r4
.L317:
	ldr	r0, [r2]
	str	r0, [r2, #0x4]
	sub	r2, r2, #0x4
	sub	r3, r3, #0x1
	cmp	r3, #0
	bgt	.L317	@cond_branch
.L315:
	str	r5, [r4]
	mov	r0, #0x0
.L319:
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.Lfe44:
	.size	 RecordTrainerId,.Lfe44-RecordTrainerId
	.align	2, 0
	.type	 IncrementCardStatForNewTrainer,function
	.thumb_func
IncrementCardStatForNewTrainer:
	push	{r4, lr}
	add	r4, r0, #0
	add	r0, r1, #0
	add	r1, r2, #0
	add	r2, r3, #0
	bl	RecordTrainerId
	cmp	r0, #0
	beq	.L321	@cond_branch
	add	r0, r4, #0
	bl	IncrementCardStat
.L321:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe45:
	.size	 IncrementCardStatForNewTrainer,.Lfe45-IncrementCardStatForNewTrainer
.text
	.align	2, 0 @ Don't pad with nop

